// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgbody.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msgbody.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace spplus {
namespace buff {

namespace {

const ::google::protobuf::Descriptor* UserLoginMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserLoginMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserLoginMsg_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserLoginMsg_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserLoginMsg_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserLoginMsg_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserListMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserListMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserListMsg_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserListMsg_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserListMsg_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserListMsg_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserRoleListMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserRoleListMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserRoleListMsg_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserRoleListMsg_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserRoleListMsg_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserRoleListMsg_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserMgrMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserMgrMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserMgrMsg_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserMgrMsg_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserMgrMsg_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserMgrMsg_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* DevStateMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevStateMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* DevStateMsg_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevStateMsg_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* DevStateMsg_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevStateMsg_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* StationTypeMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StationTypeMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* StationTypeMsg_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StationTypeMsg_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* StationTypeMsg_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StationTypeMsg_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* StationListMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StationListMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* StationListMsg_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StationListMsg_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* StationListMsg_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StationListMsg_Response_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_msgbody_2eproto() {
  protobuf_AddDesc_msgbody_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msgbody.proto");
  GOOGLE_CHECK(file != NULL);
  UserLoginMsg_descriptor_ = file->message_type(0);
  static const int UserLoginMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg, response_),
  };
  UserLoginMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserLoginMsg_descriptor_,
      UserLoginMsg::default_instance_,
      UserLoginMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserLoginMsg));
  UserLoginMsg_Request_descriptor_ = UserLoginMsg_descriptor_->nested_type(0);
  static const int UserLoginMsg_Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg_Request, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg_Request, userpwd_),
  };
  UserLoginMsg_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserLoginMsg_Request_descriptor_,
      UserLoginMsg_Request::default_instance_,
      UserLoginMsg_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserLoginMsg_Request));
  UserLoginMsg_Response_descriptor_ = UserLoginMsg_descriptor_->nested_type(1);
  static const int UserLoginMsg_Response_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg_Response, rescode_),
  };
  UserLoginMsg_Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserLoginMsg_Response_descriptor_,
      UserLoginMsg_Response::default_instance_,
      UserLoginMsg_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg_Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginMsg_Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserLoginMsg_Response));
  UserListMsg_descriptor_ = file->message_type(1);
  static const int UserListMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg, response_),
  };
  UserListMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserListMsg_descriptor_,
      UserListMsg::default_instance_,
      UserListMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserListMsg));
  UserListMsg_Request_descriptor_ = UserListMsg_descriptor_->nested_type(0);
  static const int UserListMsg_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg_Request, reqdate_),
  };
  UserListMsg_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserListMsg_Request_descriptor_,
      UserListMsg_Request::default_instance_,
      UserListMsg_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserListMsg_Request));
  UserListMsg_Response_descriptor_ = UserListMsg_descriptor_->nested_type(1);
  static const int UserListMsg_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg_Response, rescode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg_Response, userlist_),
  };
  UserListMsg_Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserListMsg_Response_descriptor_,
      UserListMsg_Response::default_instance_,
      UserListMsg_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg_Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserListMsg_Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserListMsg_Response));
  UserRoleListMsg_descriptor_ = file->message_type(2);
  static const int UserRoleListMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg, response_),
  };
  UserRoleListMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserRoleListMsg_descriptor_,
      UserRoleListMsg::default_instance_,
      UserRoleListMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserRoleListMsg));
  UserRoleListMsg_Request_descriptor_ = UserRoleListMsg_descriptor_->nested_type(0);
  static const int UserRoleListMsg_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg_Request, reqdate_),
  };
  UserRoleListMsg_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserRoleListMsg_Request_descriptor_,
      UserRoleListMsg_Request::default_instance_,
      UserRoleListMsg_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserRoleListMsg_Request));
  UserRoleListMsg_Response_descriptor_ = UserRoleListMsg_descriptor_->nested_type(1);
  static const int UserRoleListMsg_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg_Response, rescode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg_Response, userrolelist_),
  };
  UserRoleListMsg_Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserRoleListMsg_Response_descriptor_,
      UserRoleListMsg_Response::default_instance_,
      UserRoleListMsg_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg_Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoleListMsg_Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserRoleListMsg_Response));
  UserMgrMsg_descriptor_ = file->message_type(3);
  static const int UserMgrMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMgrMsg, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMgrMsg, response_),
  };
  UserMgrMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserMgrMsg_descriptor_,
      UserMgrMsg::default_instance_,
      UserMgrMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMgrMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMgrMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserMgrMsg));
  UserMgrMsg_Request_descriptor_ = UserMgrMsg_descriptor_->nested_type(0);
  static const int UserMgrMsg_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMgrMsg_Request, mgrsql_),
  };
  UserMgrMsg_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserMgrMsg_Request_descriptor_,
      UserMgrMsg_Request::default_instance_,
      UserMgrMsg_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMgrMsg_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMgrMsg_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserMgrMsg_Request));
  UserMgrMsg_Response_descriptor_ = UserMgrMsg_descriptor_->nested_type(1);
  static const int UserMgrMsg_Response_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMgrMsg_Response, rescode_),
  };
  UserMgrMsg_Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserMgrMsg_Response_descriptor_,
      UserMgrMsg_Response::default_instance_,
      UserMgrMsg_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMgrMsg_Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMgrMsg_Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserMgrMsg_Response));
  DevStateMsg_descriptor_ = file->message_type(4);
  static const int DevStateMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg, response_),
  };
  DevStateMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevStateMsg_descriptor_,
      DevStateMsg::default_instance_,
      DevStateMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevStateMsg));
  DevStateMsg_Request_descriptor_ = DevStateMsg_descriptor_->nested_type(0);
  static const int DevStateMsg_Request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg_Request, saveid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg_Request, stationcim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg_Request, unitcim_),
  };
  DevStateMsg_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevStateMsg_Request_descriptor_,
      DevStateMsg_Request::default_instance_,
      DevStateMsg_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevStateMsg_Request));
  DevStateMsg_Response_descriptor_ = DevStateMsg_descriptor_->nested_type(1);
  static const int DevStateMsg_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg_Response, rescode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg_Response, devstate_),
  };
  DevStateMsg_Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevStateMsg_Response_descriptor_,
      DevStateMsg_Response::default_instance_,
      DevStateMsg_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg_Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevStateMsg_Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevStateMsg_Response));
  StationTypeMsg_descriptor_ = file->message_type(5);
  static const int StationTypeMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg, response_),
  };
  StationTypeMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StationTypeMsg_descriptor_,
      StationTypeMsg::default_instance_,
      StationTypeMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StationTypeMsg));
  StationTypeMsg_Request_descriptor_ = StationTypeMsg_descriptor_->nested_type(0);
  static const int StationTypeMsg_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg_Request, saveid_),
  };
  StationTypeMsg_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StationTypeMsg_Request_descriptor_,
      StationTypeMsg_Request::default_instance_,
      StationTypeMsg_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StationTypeMsg_Request));
  StationTypeMsg_Response_descriptor_ = StationTypeMsg_descriptor_->nested_type(1);
  static const int StationTypeMsg_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg_Response, rescode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg_Response, typelist_),
  };
  StationTypeMsg_Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StationTypeMsg_Response_descriptor_,
      StationTypeMsg_Response::default_instance_,
      StationTypeMsg_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg_Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationTypeMsg_Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StationTypeMsg_Response));
  StationListMsg_descriptor_ = file->message_type(6);
  static const int StationListMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg, response_),
  };
  StationListMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StationListMsg_descriptor_,
      StationListMsg::default_instance_,
      StationListMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StationListMsg));
  StationListMsg_Request_descriptor_ = StationListMsg_descriptor_->nested_type(0);
  static const int StationListMsg_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg_Request, stationid_),
  };
  StationListMsg_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StationListMsg_Request_descriptor_,
      StationListMsg_Request::default_instance_,
      StationListMsg_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StationListMsg_Request));
  StationListMsg_Response_descriptor_ = StationListMsg_descriptor_->nested_type(1);
  static const int StationListMsg_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg_Response, rescode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg_Response, stationlist_),
  };
  StationListMsg_Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StationListMsg_Response_descriptor_,
      StationListMsg_Response::default_instance_,
      StationListMsg_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg_Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationListMsg_Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StationListMsg_Response));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msgbody_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserLoginMsg_descriptor_, &UserLoginMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserLoginMsg_Request_descriptor_, &UserLoginMsg_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserLoginMsg_Response_descriptor_, &UserLoginMsg_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserListMsg_descriptor_, &UserListMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserListMsg_Request_descriptor_, &UserListMsg_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserListMsg_Response_descriptor_, &UserListMsg_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserRoleListMsg_descriptor_, &UserRoleListMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserRoleListMsg_Request_descriptor_, &UserRoleListMsg_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserRoleListMsg_Response_descriptor_, &UserRoleListMsg_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserMgrMsg_descriptor_, &UserMgrMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserMgrMsg_Request_descriptor_, &UserMgrMsg_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserMgrMsg_Response_descriptor_, &UserMgrMsg_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevStateMsg_descriptor_, &DevStateMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevStateMsg_Request_descriptor_, &DevStateMsg_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevStateMsg_Response_descriptor_, &DevStateMsg_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StationTypeMsg_descriptor_, &StationTypeMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StationTypeMsg_Request_descriptor_, &StationTypeMsg_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StationTypeMsg_Response_descriptor_, &StationTypeMsg_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StationListMsg_descriptor_, &StationListMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StationListMsg_Request_descriptor_, &StationListMsg_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StationListMsg_Response_descriptor_, &StationListMsg_Response::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msgbody_2eproto() {
  delete UserLoginMsg::default_instance_;
  delete UserLoginMsg_reflection_;
  delete UserLoginMsg_Request::default_instance_;
  delete UserLoginMsg_Request_reflection_;
  delete UserLoginMsg_Response::default_instance_;
  delete UserLoginMsg_Response_reflection_;
  delete UserListMsg::default_instance_;
  delete UserListMsg_reflection_;
  delete UserListMsg_Request::default_instance_;
  delete UserListMsg_Request_reflection_;
  delete UserListMsg_Response::default_instance_;
  delete UserListMsg_Response_reflection_;
  delete UserRoleListMsg::default_instance_;
  delete UserRoleListMsg_reflection_;
  delete UserRoleListMsg_Request::default_instance_;
  delete UserRoleListMsg_Request_reflection_;
  delete UserRoleListMsg_Response::default_instance_;
  delete UserRoleListMsg_Response_reflection_;
  delete UserMgrMsg::default_instance_;
  delete UserMgrMsg_reflection_;
  delete UserMgrMsg_Request::default_instance_;
  delete UserMgrMsg_Request_reflection_;
  delete UserMgrMsg_Response::default_instance_;
  delete UserMgrMsg_Response_reflection_;
  delete DevStateMsg::default_instance_;
  delete DevStateMsg_reflection_;
  delete DevStateMsg_Request::default_instance_;
  delete DevStateMsg_Request_reflection_;
  delete DevStateMsg_Response::default_instance_;
  delete DevStateMsg_Response_reflection_;
  delete StationTypeMsg::default_instance_;
  delete StationTypeMsg_reflection_;
  delete StationTypeMsg_Request::default_instance_;
  delete StationTypeMsg_Request_reflection_;
  delete StationTypeMsg_Response::default_instance_;
  delete StationTypeMsg_Response_reflection_;
  delete StationListMsg::default_instance_;
  delete StationListMsg_reflection_;
  delete StationListMsg_Request::default_instance_;
  delete StationListMsg_Request_reflection_;
  delete StationListMsg_Response::default_instance_;
  delete StationListMsg_Response_reflection_;
}

void protobuf_AddDesc_msgbody_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::spplus::buff::protobuf_AddDesc_msgbean_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmsgbody.proto\022\017com.spplus.buff\032\rmsgbea"
    "n.proto\"\313\001\n\014UserLoginMsg\0226\n\007request\030\001 \001("
    "\0132%.com.spplus.buff.UserLoginMsg.Request"
    "\0228\n\010response\030\002 \001(\0132&.com.spplus.buff.Use"
    "rLoginMsg.Response\032,\n\007Request\022\020\n\010usernam"
    "e\030\001 \001(\014\022\017\n\007userpwd\030\002 \001(\014\032\033\n\010Response\022\017\n\007"
    "rescode\030\001 \001(\r\"\343\001\n\013UserListMsg\0225\n\007request"
    "\030\001 \001(\0132$.com.spplus.buff.UserListMsg.Req"
    "uest\0227\n\010response\030\002 \001(\0132%.com.spplus.buff"
    ".UserListMsg.Response\032\032\n\007Request\022\017\n\007reqd"
    "ate\030\001 \001(\014\032H\n\010Response\022\017\n\007rescode\030\001 \001(\r\022+"
    "\n\010userlist\030\002 \003(\0132\031.com.spplus.buff.UserB"
    "ean\"\367\001\n\017UserRoleListMsg\0229\n\007request\030\001 \001(\013"
    "2(.com.spplus.buff.UserRoleListMsg.Reque"
    "st\022;\n\010response\030\002 \001(\0132).com.spplus.buff.U"
    "serRoleListMsg.Response\032\032\n\007Request\022\017\n\007re"
    "qdate\030\001 \001(\014\032P\n\010Response\022\017\n\007rescode\030\001 \001(\r"
    "\0223\n\014userrolelist\030\002 \003(\0132\035.com.spplus.buff"
    ".UserRoleBean\"\262\001\n\nUserMgrMsg\0224\n\007request\030"
    "\001 \001(\0132#.com.spplus.buff.UserMgrMsg.Reque"
    "st\0226\n\010response\030\002 \001(\0132$.com.spplus.buff.U"
    "serMgrMsg.Response\032\031\n\007Request\022\016\n\006mgrsql\030"
    "\001 \001(\014\032\033\n\010Response\022\017\n\007rescode\030\001 \001(\r\"\210\002\n\013D"
    "evStateMsg\0225\n\007request\030\001 \001(\0132$.com.spplus"
    ".buff.DevStateMsg.Request\0227\n\010response\030\002 "
    "\001(\0132%.com.spplus.buff.DevStateMsg.Respon"
    "se\032>\n\007Request\022\016\n\006saveId\030\001 \001(\r\022\022\n\nstation"
    "Cim\030\002 \001(\014\022\017\n\007unitCim\030\003 \001(\014\032I\n\010Response\022\017"
    "\n\007rescode\030\001 \001(\r\022,\n\010devState\030\002 \003(\0132\032.com."
    "spplus.buff.StateBean\"\362\001\n\016StationTypeMsg"
    "\0228\n\007request\030\001 \001(\0132\'.com.spplus.buff.Stat"
    "ionTypeMsg.Request\022:\n\010response\030\002 \001(\0132(.c"
    "om.spplus.buff.StationTypeMsg.Response\032\031"
    "\n\007Request\022\016\n\006saveId\030\001 \001(\r\032O\n\010Response\022\017\n"
    "\007rescode\030\001 \001(\r\0222\n\010typeList\030\002 \003(\0132 .com.s"
    "pplus.buff.StationTypeBean\"\364\001\n\016StationLi"
    "stMsg\0228\n\007request\030\001 \001(\0132\'.com.spplus.buff"
    ".StationListMsg.Request\022:\n\010response\030\002 \001("
    "\0132(.com.spplus.buff.StationListMsg.Respo"
    "nse\032\034\n\007Request\022\021\n\tstationId\030\001 \001(\r\032N\n\010Res"
    "ponse\022\017\n\007rescode\030\001 \001(\r\0221\n\013stationList\030\002 "
    "\003(\0132\034.com.spplus.buff.StationBean", 1673);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msgbody.proto", &protobuf_RegisterTypes);
  UserLoginMsg::default_instance_ = new UserLoginMsg();
  UserLoginMsg_Request::default_instance_ = new UserLoginMsg_Request();
  UserLoginMsg_Response::default_instance_ = new UserLoginMsg_Response();
  UserListMsg::default_instance_ = new UserListMsg();
  UserListMsg_Request::default_instance_ = new UserListMsg_Request();
  UserListMsg_Response::default_instance_ = new UserListMsg_Response();
  UserRoleListMsg::default_instance_ = new UserRoleListMsg();
  UserRoleListMsg_Request::default_instance_ = new UserRoleListMsg_Request();
  UserRoleListMsg_Response::default_instance_ = new UserRoleListMsg_Response();
  UserMgrMsg::default_instance_ = new UserMgrMsg();
  UserMgrMsg_Request::default_instance_ = new UserMgrMsg_Request();
  UserMgrMsg_Response::default_instance_ = new UserMgrMsg_Response();
  DevStateMsg::default_instance_ = new DevStateMsg();
  DevStateMsg_Request::default_instance_ = new DevStateMsg_Request();
  DevStateMsg_Response::default_instance_ = new DevStateMsg_Response();
  StationTypeMsg::default_instance_ = new StationTypeMsg();
  StationTypeMsg_Request::default_instance_ = new StationTypeMsg_Request();
  StationTypeMsg_Response::default_instance_ = new StationTypeMsg_Response();
  StationListMsg::default_instance_ = new StationListMsg();
  StationListMsg_Request::default_instance_ = new StationListMsg_Request();
  StationListMsg_Response::default_instance_ = new StationListMsg_Response();
  UserLoginMsg::default_instance_->InitAsDefaultInstance();
  UserLoginMsg_Request::default_instance_->InitAsDefaultInstance();
  UserLoginMsg_Response::default_instance_->InitAsDefaultInstance();
  UserListMsg::default_instance_->InitAsDefaultInstance();
  UserListMsg_Request::default_instance_->InitAsDefaultInstance();
  UserListMsg_Response::default_instance_->InitAsDefaultInstance();
  UserRoleListMsg::default_instance_->InitAsDefaultInstance();
  UserRoleListMsg_Request::default_instance_->InitAsDefaultInstance();
  UserRoleListMsg_Response::default_instance_->InitAsDefaultInstance();
  UserMgrMsg::default_instance_->InitAsDefaultInstance();
  UserMgrMsg_Request::default_instance_->InitAsDefaultInstance();
  UserMgrMsg_Response::default_instance_->InitAsDefaultInstance();
  DevStateMsg::default_instance_->InitAsDefaultInstance();
  DevStateMsg_Request::default_instance_->InitAsDefaultInstance();
  DevStateMsg_Response::default_instance_->InitAsDefaultInstance();
  StationTypeMsg::default_instance_->InitAsDefaultInstance();
  StationTypeMsg_Request::default_instance_->InitAsDefaultInstance();
  StationTypeMsg_Response::default_instance_->InitAsDefaultInstance();
  StationListMsg::default_instance_->InitAsDefaultInstance();
  StationListMsg_Request::default_instance_->InitAsDefaultInstance();
  StationListMsg_Response::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msgbody_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msgbody_2eproto {
  StaticDescriptorInitializer_msgbody_2eproto() {
    protobuf_AddDesc_msgbody_2eproto();
  }
} static_descriptor_initializer_msgbody_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int UserLoginMsg_Request::kUsernameFieldNumber;
const int UserLoginMsg_Request::kUserpwdFieldNumber;
#endif  // !_MSC_VER

UserLoginMsg_Request::UserLoginMsg_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserLoginMsg_Request::InitAsDefaultInstance() {
}

UserLoginMsg_Request::UserLoginMsg_Request(const UserLoginMsg_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserLoginMsg_Request::SharedCtor() {
  _cached_size_ = 0;
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  userpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserLoginMsg_Request::~UserLoginMsg_Request() {
  SharedDtor();
}

void UserLoginMsg_Request::SharedDtor() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (userpwd_ != &::google::protobuf::internal::kEmptyString) {
    delete userpwd_;
  }
  if (this != default_instance_) {
  }
}

void UserLoginMsg_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoginMsg_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserLoginMsg_Request_descriptor_;
}

const UserLoginMsg_Request& UserLoginMsg_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserLoginMsg_Request* UserLoginMsg_Request::default_instance_ = NULL;

UserLoginMsg_Request* UserLoginMsg_Request::New() const {
  return new UserLoginMsg_Request;
}

void UserLoginMsg_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::kEmptyString) {
        username_->clear();
      }
    }
    if (has_userpwd()) {
      if (userpwd_ != &::google::protobuf::internal::kEmptyString) {
        userpwd_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserLoginMsg_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes username = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_username()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_userpwd;
        break;
      }

      // optional bytes userpwd = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userpwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userpwd()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserLoginMsg_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->username(), output);
  }

  // optional bytes userpwd = 2;
  if (has_userpwd()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->userpwd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserLoginMsg_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes username = 1;
  if (has_username()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->username(), target);
  }

  // optional bytes userpwd = 2;
  if (has_userpwd()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->userpwd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserLoginMsg_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes username = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->username());
    }

    // optional bytes userpwd = 2;
    if (has_userpwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->userpwd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginMsg_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserLoginMsg_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserLoginMsg_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserLoginMsg_Request::MergeFrom(const UserLoginMsg_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_userpwd()) {
      set_userpwd(from.userpwd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserLoginMsg_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginMsg_Request::CopyFrom(const UserLoginMsg_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginMsg_Request::IsInitialized() const {

  return true;
}

void UserLoginMsg_Request::Swap(UserLoginMsg_Request* other) {
  if (other != this) {
    std::swap(username_, other->username_);
    std::swap(userpwd_, other->userpwd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserLoginMsg_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserLoginMsg_Request_descriptor_;
  metadata.reflection = UserLoginMsg_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserLoginMsg_Response::kRescodeFieldNumber;
#endif  // !_MSC_VER

UserLoginMsg_Response::UserLoginMsg_Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserLoginMsg_Response::InitAsDefaultInstance() {
}

UserLoginMsg_Response::UserLoginMsg_Response(const UserLoginMsg_Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserLoginMsg_Response::SharedCtor() {
  _cached_size_ = 0;
  rescode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserLoginMsg_Response::~UserLoginMsg_Response() {
  SharedDtor();
}

void UserLoginMsg_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserLoginMsg_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoginMsg_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserLoginMsg_Response_descriptor_;
}

const UserLoginMsg_Response& UserLoginMsg_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserLoginMsg_Response* UserLoginMsg_Response::default_instance_ = NULL;

UserLoginMsg_Response* UserLoginMsg_Response::New() const {
  return new UserLoginMsg_Response;
}

void UserLoginMsg_Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rescode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserLoginMsg_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rescode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rescode_)));
          set_has_rescode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserLoginMsg_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rescode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserLoginMsg_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rescode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserLoginMsg_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 rescode = 1;
    if (has_rescode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rescode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginMsg_Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserLoginMsg_Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserLoginMsg_Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserLoginMsg_Response::MergeFrom(const UserLoginMsg_Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rescode()) {
      set_rescode(from.rescode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserLoginMsg_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginMsg_Response::CopyFrom(const UserLoginMsg_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginMsg_Response::IsInitialized() const {

  return true;
}

void UserLoginMsg_Response::Swap(UserLoginMsg_Response* other) {
  if (other != this) {
    std::swap(rescode_, other->rescode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserLoginMsg_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserLoginMsg_Response_descriptor_;
  metadata.reflection = UserLoginMsg_Response_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserLoginMsg::kRequestFieldNumber;
const int UserLoginMsg::kResponseFieldNumber;
#endif  // !_MSC_VER

UserLoginMsg::UserLoginMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserLoginMsg::InitAsDefaultInstance() {
  request_ = const_cast< ::com::spplus::buff::UserLoginMsg_Request*>(&::com::spplus::buff::UserLoginMsg_Request::default_instance());
  response_ = const_cast< ::com::spplus::buff::UserLoginMsg_Response*>(&::com::spplus::buff::UserLoginMsg_Response::default_instance());
}

UserLoginMsg::UserLoginMsg(const UserLoginMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserLoginMsg::SharedCtor() {
  _cached_size_ = 0;
  request_ = NULL;
  response_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserLoginMsg::~UserLoginMsg() {
  SharedDtor();
}

void UserLoginMsg::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
    delete response_;
  }
}

void UserLoginMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoginMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserLoginMsg_descriptor_;
}

const UserLoginMsg& UserLoginMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserLoginMsg* UserLoginMsg::default_instance_ = NULL;

UserLoginMsg* UserLoginMsg::New() const {
  return new UserLoginMsg;
}

void UserLoginMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_request()) {
      if (request_ != NULL) request_->::com::spplus::buff::UserLoginMsg_Request::Clear();
    }
    if (has_response()) {
      if (response_ != NULL) response_->::com::spplus::buff::UserLoginMsg_Response::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserLoginMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.spplus.buff.UserLoginMsg.Request request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_response;
        break;
      }

      // optional .com.spplus.buff.UserLoginMsg.Response response = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserLoginMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.spplus.buff.UserLoginMsg.Request request = 1;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->request(), output);
  }

  // optional .com.spplus.buff.UserLoginMsg.Response response = 2;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserLoginMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.spplus.buff.UserLoginMsg.Request request = 1;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->request(), target);
  }

  // optional .com.spplus.buff.UserLoginMsg.Response response = 2;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserLoginMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.spplus.buff.UserLoginMsg.Request request = 1;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

    // optional .com.spplus.buff.UserLoginMsg.Response response = 2;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserLoginMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserLoginMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserLoginMsg::MergeFrom(const UserLoginMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request()) {
      mutable_request()->::com::spplus::buff::UserLoginMsg_Request::MergeFrom(from.request());
    }
    if (from.has_response()) {
      mutable_response()->::com::spplus::buff::UserLoginMsg_Response::MergeFrom(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserLoginMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginMsg::CopyFrom(const UserLoginMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginMsg::IsInitialized() const {

  return true;
}

void UserLoginMsg::Swap(UserLoginMsg* other) {
  if (other != this) {
    std::swap(request_, other->request_);
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserLoginMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserLoginMsg_descriptor_;
  metadata.reflection = UserLoginMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserListMsg_Request::kReqdateFieldNumber;
#endif  // !_MSC_VER

UserListMsg_Request::UserListMsg_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserListMsg_Request::InitAsDefaultInstance() {
}

UserListMsg_Request::UserListMsg_Request(const UserListMsg_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserListMsg_Request::SharedCtor() {
  _cached_size_ = 0;
  reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserListMsg_Request::~UserListMsg_Request() {
  SharedDtor();
}

void UserListMsg_Request::SharedDtor() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (this != default_instance_) {
  }
}

void UserListMsg_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserListMsg_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserListMsg_Request_descriptor_;
}

const UserListMsg_Request& UserListMsg_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserListMsg_Request* UserListMsg_Request::default_instance_ = NULL;

UserListMsg_Request* UserListMsg_Request::New() const {
  return new UserListMsg_Request;
}

void UserListMsg_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_reqdate()) {
      if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
        reqdate_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserListMsg_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes reqdate = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reqdate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserListMsg_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes reqdate = 1;
  if (has_reqdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->reqdate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserListMsg_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes reqdate = 1;
  if (has_reqdate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->reqdate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserListMsg_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes reqdate = 1;
    if (has_reqdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->reqdate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserListMsg_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserListMsg_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserListMsg_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserListMsg_Request::MergeFrom(const UserListMsg_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reqdate()) {
      set_reqdate(from.reqdate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserListMsg_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserListMsg_Request::CopyFrom(const UserListMsg_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserListMsg_Request::IsInitialized() const {

  return true;
}

void UserListMsg_Request::Swap(UserListMsg_Request* other) {
  if (other != this) {
    std::swap(reqdate_, other->reqdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserListMsg_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserListMsg_Request_descriptor_;
  metadata.reflection = UserListMsg_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserListMsg_Response::kRescodeFieldNumber;
const int UserListMsg_Response::kUserlistFieldNumber;
#endif  // !_MSC_VER

UserListMsg_Response::UserListMsg_Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserListMsg_Response::InitAsDefaultInstance() {
}

UserListMsg_Response::UserListMsg_Response(const UserListMsg_Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserListMsg_Response::SharedCtor() {
  _cached_size_ = 0;
  rescode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserListMsg_Response::~UserListMsg_Response() {
  SharedDtor();
}

void UserListMsg_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserListMsg_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserListMsg_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserListMsg_Response_descriptor_;
}

const UserListMsg_Response& UserListMsg_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserListMsg_Response* UserListMsg_Response::default_instance_ = NULL;

UserListMsg_Response* UserListMsg_Response::New() const {
  return new UserListMsg_Response;
}

void UserListMsg_Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rescode_ = 0u;
  }
  userlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserListMsg_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rescode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rescode_)));
          set_has_rescode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_userlist;
        break;
      }

      // repeated .com.spplus.buff.UserBean userlist = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_userlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_userlist;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserListMsg_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rescode(), output);
  }

  // repeated .com.spplus.buff.UserBean userlist = 2;
  for (int i = 0; i < this->userlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->userlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserListMsg_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rescode(), target);
  }

  // repeated .com.spplus.buff.UserBean userlist = 2;
  for (int i = 0; i < this->userlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->userlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserListMsg_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 rescode = 1;
    if (has_rescode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rescode());
    }

  }
  // repeated .com.spplus.buff.UserBean userlist = 2;
  total_size += 1 * this->userlist_size();
  for (int i = 0; i < this->userlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserListMsg_Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserListMsg_Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserListMsg_Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserListMsg_Response::MergeFrom(const UserListMsg_Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  userlist_.MergeFrom(from.userlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rescode()) {
      set_rescode(from.rescode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserListMsg_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserListMsg_Response::CopyFrom(const UserListMsg_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserListMsg_Response::IsInitialized() const {

  return true;
}

void UserListMsg_Response::Swap(UserListMsg_Response* other) {
  if (other != this) {
    std::swap(rescode_, other->rescode_);
    userlist_.Swap(&other->userlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserListMsg_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserListMsg_Response_descriptor_;
  metadata.reflection = UserListMsg_Response_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserListMsg::kRequestFieldNumber;
const int UserListMsg::kResponseFieldNumber;
#endif  // !_MSC_VER

UserListMsg::UserListMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserListMsg::InitAsDefaultInstance() {
  request_ = const_cast< ::com::spplus::buff::UserListMsg_Request*>(&::com::spplus::buff::UserListMsg_Request::default_instance());
  response_ = const_cast< ::com::spplus::buff::UserListMsg_Response*>(&::com::spplus::buff::UserListMsg_Response::default_instance());
}

UserListMsg::UserListMsg(const UserListMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserListMsg::SharedCtor() {
  _cached_size_ = 0;
  request_ = NULL;
  response_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserListMsg::~UserListMsg() {
  SharedDtor();
}

void UserListMsg::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
    delete response_;
  }
}

void UserListMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserListMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserListMsg_descriptor_;
}

const UserListMsg& UserListMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserListMsg* UserListMsg::default_instance_ = NULL;

UserListMsg* UserListMsg::New() const {
  return new UserListMsg;
}

void UserListMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_request()) {
      if (request_ != NULL) request_->::com::spplus::buff::UserListMsg_Request::Clear();
    }
    if (has_response()) {
      if (response_ != NULL) response_->::com::spplus::buff::UserListMsg_Response::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserListMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.spplus.buff.UserListMsg.Request request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_response;
        break;
      }

      // optional .com.spplus.buff.UserListMsg.Response response = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserListMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.spplus.buff.UserListMsg.Request request = 1;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->request(), output);
  }

  // optional .com.spplus.buff.UserListMsg.Response response = 2;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserListMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.spplus.buff.UserListMsg.Request request = 1;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->request(), target);
  }

  // optional .com.spplus.buff.UserListMsg.Response response = 2;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserListMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.spplus.buff.UserListMsg.Request request = 1;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

    // optional .com.spplus.buff.UserListMsg.Response response = 2;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserListMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserListMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserListMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserListMsg::MergeFrom(const UserListMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request()) {
      mutable_request()->::com::spplus::buff::UserListMsg_Request::MergeFrom(from.request());
    }
    if (from.has_response()) {
      mutable_response()->::com::spplus::buff::UserListMsg_Response::MergeFrom(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserListMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserListMsg::CopyFrom(const UserListMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserListMsg::IsInitialized() const {

  return true;
}

void UserListMsg::Swap(UserListMsg* other) {
  if (other != this) {
    std::swap(request_, other->request_);
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserListMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserListMsg_descriptor_;
  metadata.reflection = UserListMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserRoleListMsg_Request::kReqdateFieldNumber;
#endif  // !_MSC_VER

UserRoleListMsg_Request::UserRoleListMsg_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserRoleListMsg_Request::InitAsDefaultInstance() {
}

UserRoleListMsg_Request::UserRoleListMsg_Request(const UserRoleListMsg_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserRoleListMsg_Request::SharedCtor() {
  _cached_size_ = 0;
  reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserRoleListMsg_Request::~UserRoleListMsg_Request() {
  SharedDtor();
}

void UserRoleListMsg_Request::SharedDtor() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (this != default_instance_) {
  }
}

void UserRoleListMsg_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRoleListMsg_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserRoleListMsg_Request_descriptor_;
}

const UserRoleListMsg_Request& UserRoleListMsg_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserRoleListMsg_Request* UserRoleListMsg_Request::default_instance_ = NULL;

UserRoleListMsg_Request* UserRoleListMsg_Request::New() const {
  return new UserRoleListMsg_Request;
}

void UserRoleListMsg_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_reqdate()) {
      if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
        reqdate_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserRoleListMsg_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes reqdate = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reqdate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserRoleListMsg_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes reqdate = 1;
  if (has_reqdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->reqdate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserRoleListMsg_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes reqdate = 1;
  if (has_reqdate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->reqdate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserRoleListMsg_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes reqdate = 1;
    if (has_reqdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->reqdate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRoleListMsg_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserRoleListMsg_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserRoleListMsg_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserRoleListMsg_Request::MergeFrom(const UserRoleListMsg_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reqdate()) {
      set_reqdate(from.reqdate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserRoleListMsg_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRoleListMsg_Request::CopyFrom(const UserRoleListMsg_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRoleListMsg_Request::IsInitialized() const {

  return true;
}

void UserRoleListMsg_Request::Swap(UserRoleListMsg_Request* other) {
  if (other != this) {
    std::swap(reqdate_, other->reqdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserRoleListMsg_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserRoleListMsg_Request_descriptor_;
  metadata.reflection = UserRoleListMsg_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserRoleListMsg_Response::kRescodeFieldNumber;
const int UserRoleListMsg_Response::kUserrolelistFieldNumber;
#endif  // !_MSC_VER

UserRoleListMsg_Response::UserRoleListMsg_Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserRoleListMsg_Response::InitAsDefaultInstance() {
}

UserRoleListMsg_Response::UserRoleListMsg_Response(const UserRoleListMsg_Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserRoleListMsg_Response::SharedCtor() {
  _cached_size_ = 0;
  rescode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserRoleListMsg_Response::~UserRoleListMsg_Response() {
  SharedDtor();
}

void UserRoleListMsg_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserRoleListMsg_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRoleListMsg_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserRoleListMsg_Response_descriptor_;
}

const UserRoleListMsg_Response& UserRoleListMsg_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserRoleListMsg_Response* UserRoleListMsg_Response::default_instance_ = NULL;

UserRoleListMsg_Response* UserRoleListMsg_Response::New() const {
  return new UserRoleListMsg_Response;
}

void UserRoleListMsg_Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rescode_ = 0u;
  }
  userrolelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserRoleListMsg_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rescode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rescode_)));
          set_has_rescode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_userrolelist;
        break;
      }

      // repeated .com.spplus.buff.UserRoleBean userrolelist = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userrolelist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_userrolelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_userrolelist;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserRoleListMsg_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rescode(), output);
  }

  // repeated .com.spplus.buff.UserRoleBean userrolelist = 2;
  for (int i = 0; i < this->userrolelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->userrolelist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserRoleListMsg_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rescode(), target);
  }

  // repeated .com.spplus.buff.UserRoleBean userrolelist = 2;
  for (int i = 0; i < this->userrolelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->userrolelist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserRoleListMsg_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 rescode = 1;
    if (has_rescode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rescode());
    }

  }
  // repeated .com.spplus.buff.UserRoleBean userrolelist = 2;
  total_size += 1 * this->userrolelist_size();
  for (int i = 0; i < this->userrolelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userrolelist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRoleListMsg_Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserRoleListMsg_Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserRoleListMsg_Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserRoleListMsg_Response::MergeFrom(const UserRoleListMsg_Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  userrolelist_.MergeFrom(from.userrolelist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rescode()) {
      set_rescode(from.rescode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserRoleListMsg_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRoleListMsg_Response::CopyFrom(const UserRoleListMsg_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRoleListMsg_Response::IsInitialized() const {

  return true;
}

void UserRoleListMsg_Response::Swap(UserRoleListMsg_Response* other) {
  if (other != this) {
    std::swap(rescode_, other->rescode_);
    userrolelist_.Swap(&other->userrolelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserRoleListMsg_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserRoleListMsg_Response_descriptor_;
  metadata.reflection = UserRoleListMsg_Response_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserRoleListMsg::kRequestFieldNumber;
const int UserRoleListMsg::kResponseFieldNumber;
#endif  // !_MSC_VER

UserRoleListMsg::UserRoleListMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserRoleListMsg::InitAsDefaultInstance() {
  request_ = const_cast< ::com::spplus::buff::UserRoleListMsg_Request*>(&::com::spplus::buff::UserRoleListMsg_Request::default_instance());
  response_ = const_cast< ::com::spplus::buff::UserRoleListMsg_Response*>(&::com::spplus::buff::UserRoleListMsg_Response::default_instance());
}

UserRoleListMsg::UserRoleListMsg(const UserRoleListMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserRoleListMsg::SharedCtor() {
  _cached_size_ = 0;
  request_ = NULL;
  response_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserRoleListMsg::~UserRoleListMsg() {
  SharedDtor();
}

void UserRoleListMsg::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
    delete response_;
  }
}

void UserRoleListMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRoleListMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserRoleListMsg_descriptor_;
}

const UserRoleListMsg& UserRoleListMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserRoleListMsg* UserRoleListMsg::default_instance_ = NULL;

UserRoleListMsg* UserRoleListMsg::New() const {
  return new UserRoleListMsg;
}

void UserRoleListMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_request()) {
      if (request_ != NULL) request_->::com::spplus::buff::UserRoleListMsg_Request::Clear();
    }
    if (has_response()) {
      if (response_ != NULL) response_->::com::spplus::buff::UserRoleListMsg_Response::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserRoleListMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.spplus.buff.UserRoleListMsg.Request request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_response;
        break;
      }

      // optional .com.spplus.buff.UserRoleListMsg.Response response = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserRoleListMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.spplus.buff.UserRoleListMsg.Request request = 1;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->request(), output);
  }

  // optional .com.spplus.buff.UserRoleListMsg.Response response = 2;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserRoleListMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.spplus.buff.UserRoleListMsg.Request request = 1;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->request(), target);
  }

  // optional .com.spplus.buff.UserRoleListMsg.Response response = 2;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserRoleListMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.spplus.buff.UserRoleListMsg.Request request = 1;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

    // optional .com.spplus.buff.UserRoleListMsg.Response response = 2;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRoleListMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserRoleListMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserRoleListMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserRoleListMsg::MergeFrom(const UserRoleListMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request()) {
      mutable_request()->::com::spplus::buff::UserRoleListMsg_Request::MergeFrom(from.request());
    }
    if (from.has_response()) {
      mutable_response()->::com::spplus::buff::UserRoleListMsg_Response::MergeFrom(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserRoleListMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRoleListMsg::CopyFrom(const UserRoleListMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRoleListMsg::IsInitialized() const {

  return true;
}

void UserRoleListMsg::Swap(UserRoleListMsg* other) {
  if (other != this) {
    std::swap(request_, other->request_);
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserRoleListMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserRoleListMsg_descriptor_;
  metadata.reflection = UserRoleListMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserMgrMsg_Request::kMgrsqlFieldNumber;
#endif  // !_MSC_VER

UserMgrMsg_Request::UserMgrMsg_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserMgrMsg_Request::InitAsDefaultInstance() {
}

UserMgrMsg_Request::UserMgrMsg_Request(const UserMgrMsg_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserMgrMsg_Request::SharedCtor() {
  _cached_size_ = 0;
  mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserMgrMsg_Request::~UserMgrMsg_Request() {
  SharedDtor();
}

void UserMgrMsg_Request::SharedDtor() {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    delete mgrsql_;
  }
  if (this != default_instance_) {
  }
}

void UserMgrMsg_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserMgrMsg_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserMgrMsg_Request_descriptor_;
}

const UserMgrMsg_Request& UserMgrMsg_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserMgrMsg_Request* UserMgrMsg_Request::default_instance_ = NULL;

UserMgrMsg_Request* UserMgrMsg_Request::New() const {
  return new UserMgrMsg_Request;
}

void UserMgrMsg_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_mgrsql()) {
      if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
        mgrsql_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserMgrMsg_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes mgrsql = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mgrsql()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserMgrMsg_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes mgrsql = 1;
  if (has_mgrsql()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->mgrsql(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserMgrMsg_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes mgrsql = 1;
  if (has_mgrsql()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->mgrsql(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserMgrMsg_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes mgrsql = 1;
    if (has_mgrsql()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mgrsql());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserMgrMsg_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserMgrMsg_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserMgrMsg_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserMgrMsg_Request::MergeFrom(const UserMgrMsg_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mgrsql()) {
      set_mgrsql(from.mgrsql());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserMgrMsg_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserMgrMsg_Request::CopyFrom(const UserMgrMsg_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMgrMsg_Request::IsInitialized() const {

  return true;
}

void UserMgrMsg_Request::Swap(UserMgrMsg_Request* other) {
  if (other != this) {
    std::swap(mgrsql_, other->mgrsql_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserMgrMsg_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserMgrMsg_Request_descriptor_;
  metadata.reflection = UserMgrMsg_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserMgrMsg_Response::kRescodeFieldNumber;
#endif  // !_MSC_VER

UserMgrMsg_Response::UserMgrMsg_Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserMgrMsg_Response::InitAsDefaultInstance() {
}

UserMgrMsg_Response::UserMgrMsg_Response(const UserMgrMsg_Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserMgrMsg_Response::SharedCtor() {
  _cached_size_ = 0;
  rescode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserMgrMsg_Response::~UserMgrMsg_Response() {
  SharedDtor();
}

void UserMgrMsg_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserMgrMsg_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserMgrMsg_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserMgrMsg_Response_descriptor_;
}

const UserMgrMsg_Response& UserMgrMsg_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserMgrMsg_Response* UserMgrMsg_Response::default_instance_ = NULL;

UserMgrMsg_Response* UserMgrMsg_Response::New() const {
  return new UserMgrMsg_Response;
}

void UserMgrMsg_Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rescode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserMgrMsg_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rescode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rescode_)));
          set_has_rescode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserMgrMsg_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rescode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserMgrMsg_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rescode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserMgrMsg_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 rescode = 1;
    if (has_rescode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rescode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserMgrMsg_Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserMgrMsg_Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserMgrMsg_Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserMgrMsg_Response::MergeFrom(const UserMgrMsg_Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rescode()) {
      set_rescode(from.rescode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserMgrMsg_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserMgrMsg_Response::CopyFrom(const UserMgrMsg_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMgrMsg_Response::IsInitialized() const {

  return true;
}

void UserMgrMsg_Response::Swap(UserMgrMsg_Response* other) {
  if (other != this) {
    std::swap(rescode_, other->rescode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserMgrMsg_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserMgrMsg_Response_descriptor_;
  metadata.reflection = UserMgrMsg_Response_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserMgrMsg::kRequestFieldNumber;
const int UserMgrMsg::kResponseFieldNumber;
#endif  // !_MSC_VER

UserMgrMsg::UserMgrMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserMgrMsg::InitAsDefaultInstance() {
  request_ = const_cast< ::com::spplus::buff::UserMgrMsg_Request*>(&::com::spplus::buff::UserMgrMsg_Request::default_instance());
  response_ = const_cast< ::com::spplus::buff::UserMgrMsg_Response*>(&::com::spplus::buff::UserMgrMsg_Response::default_instance());
}

UserMgrMsg::UserMgrMsg(const UserMgrMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserMgrMsg::SharedCtor() {
  _cached_size_ = 0;
  request_ = NULL;
  response_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserMgrMsg::~UserMgrMsg() {
  SharedDtor();
}

void UserMgrMsg::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
    delete response_;
  }
}

void UserMgrMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserMgrMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserMgrMsg_descriptor_;
}

const UserMgrMsg& UserMgrMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

UserMgrMsg* UserMgrMsg::default_instance_ = NULL;

UserMgrMsg* UserMgrMsg::New() const {
  return new UserMgrMsg;
}

void UserMgrMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_request()) {
      if (request_ != NULL) request_->::com::spplus::buff::UserMgrMsg_Request::Clear();
    }
    if (has_response()) {
      if (response_ != NULL) response_->::com::spplus::buff::UserMgrMsg_Response::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserMgrMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.spplus.buff.UserMgrMsg.Request request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_response;
        break;
      }

      // optional .com.spplus.buff.UserMgrMsg.Response response = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserMgrMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.spplus.buff.UserMgrMsg.Request request = 1;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->request(), output);
  }

  // optional .com.spplus.buff.UserMgrMsg.Response response = 2;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserMgrMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.spplus.buff.UserMgrMsg.Request request = 1;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->request(), target);
  }

  // optional .com.spplus.buff.UserMgrMsg.Response response = 2;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserMgrMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.spplus.buff.UserMgrMsg.Request request = 1;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

    // optional .com.spplus.buff.UserMgrMsg.Response response = 2;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserMgrMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserMgrMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserMgrMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserMgrMsg::MergeFrom(const UserMgrMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request()) {
      mutable_request()->::com::spplus::buff::UserMgrMsg_Request::MergeFrom(from.request());
    }
    if (from.has_response()) {
      mutable_response()->::com::spplus::buff::UserMgrMsg_Response::MergeFrom(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserMgrMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserMgrMsg::CopyFrom(const UserMgrMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMgrMsg::IsInitialized() const {

  return true;
}

void UserMgrMsg::Swap(UserMgrMsg* other) {
  if (other != this) {
    std::swap(request_, other->request_);
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserMgrMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserMgrMsg_descriptor_;
  metadata.reflection = UserMgrMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DevStateMsg_Request::kSaveIdFieldNumber;
const int DevStateMsg_Request::kStationCimFieldNumber;
const int DevStateMsg_Request::kUnitCimFieldNumber;
#endif  // !_MSC_VER

DevStateMsg_Request::DevStateMsg_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DevStateMsg_Request::InitAsDefaultInstance() {
}

DevStateMsg_Request::DevStateMsg_Request(const DevStateMsg_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DevStateMsg_Request::SharedCtor() {
  _cached_size_ = 0;
  saveid_ = 0u;
  stationcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevStateMsg_Request::~DevStateMsg_Request() {
  SharedDtor();
}

void DevStateMsg_Request::SharedDtor() {
  if (stationcim_ != &::google::protobuf::internal::kEmptyString) {
    delete stationcim_;
  }
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    delete unitcim_;
  }
  if (this != default_instance_) {
  }
}

void DevStateMsg_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevStateMsg_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevStateMsg_Request_descriptor_;
}

const DevStateMsg_Request& DevStateMsg_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

DevStateMsg_Request* DevStateMsg_Request::default_instance_ = NULL;

DevStateMsg_Request* DevStateMsg_Request::New() const {
  return new DevStateMsg_Request;
}

void DevStateMsg_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    saveid_ = 0u;
    if (has_stationcim()) {
      if (stationcim_ != &::google::protobuf::internal::kEmptyString) {
        stationcim_->clear();
      }
    }
    if (has_unitcim()) {
      if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
        unitcim_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevStateMsg_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 saveId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &saveid_)));
          set_has_saveid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stationCim;
        break;
      }

      // optional bytes stationCim = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stationCim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stationcim()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_unitCim;
        break;
      }

      // optional bytes unitCim = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_unitCim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_unitcim()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DevStateMsg_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 saveId = 1;
  if (has_saveid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->saveid(), output);
  }

  // optional bytes stationCim = 2;
  if (has_stationcim()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->stationcim(), output);
  }

  // optional bytes unitCim = 3;
  if (has_unitcim()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->unitcim(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DevStateMsg_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 saveId = 1;
  if (has_saveid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->saveid(), target);
  }

  // optional bytes stationCim = 2;
  if (has_stationcim()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->stationcim(), target);
  }

  // optional bytes unitCim = 3;
  if (has_unitcim()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->unitcim(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DevStateMsg_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 saveId = 1;
    if (has_saveid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->saveid());
    }

    // optional bytes stationCim = 2;
    if (has_stationcim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->stationcim());
    }

    // optional bytes unitCim = 3;
    if (has_unitcim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->unitcim());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevStateMsg_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevStateMsg_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevStateMsg_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevStateMsg_Request::MergeFrom(const DevStateMsg_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_saveid()) {
      set_saveid(from.saveid());
    }
    if (from.has_stationcim()) {
      set_stationcim(from.stationcim());
    }
    if (from.has_unitcim()) {
      set_unitcim(from.unitcim());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevStateMsg_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevStateMsg_Request::CopyFrom(const DevStateMsg_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevStateMsg_Request::IsInitialized() const {

  return true;
}

void DevStateMsg_Request::Swap(DevStateMsg_Request* other) {
  if (other != this) {
    std::swap(saveid_, other->saveid_);
    std::swap(stationcim_, other->stationcim_);
    std::swap(unitcim_, other->unitcim_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevStateMsg_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevStateMsg_Request_descriptor_;
  metadata.reflection = DevStateMsg_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int DevStateMsg_Response::kRescodeFieldNumber;
const int DevStateMsg_Response::kDevStateFieldNumber;
#endif  // !_MSC_VER

DevStateMsg_Response::DevStateMsg_Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DevStateMsg_Response::InitAsDefaultInstance() {
}

DevStateMsg_Response::DevStateMsg_Response(const DevStateMsg_Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DevStateMsg_Response::SharedCtor() {
  _cached_size_ = 0;
  rescode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevStateMsg_Response::~DevStateMsg_Response() {
  SharedDtor();
}

void DevStateMsg_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DevStateMsg_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevStateMsg_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevStateMsg_Response_descriptor_;
}

const DevStateMsg_Response& DevStateMsg_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

DevStateMsg_Response* DevStateMsg_Response::default_instance_ = NULL;

DevStateMsg_Response* DevStateMsg_Response::New() const {
  return new DevStateMsg_Response;
}

void DevStateMsg_Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rescode_ = 0u;
  }
  devstate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevStateMsg_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rescode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rescode_)));
          set_has_rescode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_devState;
        break;
      }

      // repeated .com.spplus.buff.StateBean devState = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_devState:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_devstate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_devState;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DevStateMsg_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rescode(), output);
  }

  // repeated .com.spplus.buff.StateBean devState = 2;
  for (int i = 0; i < this->devstate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->devstate(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DevStateMsg_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rescode(), target);
  }

  // repeated .com.spplus.buff.StateBean devState = 2;
  for (int i = 0; i < this->devstate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->devstate(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DevStateMsg_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 rescode = 1;
    if (has_rescode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rescode());
    }

  }
  // repeated .com.spplus.buff.StateBean devState = 2;
  total_size += 1 * this->devstate_size();
  for (int i = 0; i < this->devstate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->devstate(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevStateMsg_Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevStateMsg_Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevStateMsg_Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevStateMsg_Response::MergeFrom(const DevStateMsg_Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  devstate_.MergeFrom(from.devstate_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rescode()) {
      set_rescode(from.rescode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevStateMsg_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevStateMsg_Response::CopyFrom(const DevStateMsg_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevStateMsg_Response::IsInitialized() const {

  return true;
}

void DevStateMsg_Response::Swap(DevStateMsg_Response* other) {
  if (other != this) {
    std::swap(rescode_, other->rescode_);
    devstate_.Swap(&other->devstate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevStateMsg_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevStateMsg_Response_descriptor_;
  metadata.reflection = DevStateMsg_Response_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int DevStateMsg::kRequestFieldNumber;
const int DevStateMsg::kResponseFieldNumber;
#endif  // !_MSC_VER

DevStateMsg::DevStateMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DevStateMsg::InitAsDefaultInstance() {
  request_ = const_cast< ::com::spplus::buff::DevStateMsg_Request*>(&::com::spplus::buff::DevStateMsg_Request::default_instance());
  response_ = const_cast< ::com::spplus::buff::DevStateMsg_Response*>(&::com::spplus::buff::DevStateMsg_Response::default_instance());
}

DevStateMsg::DevStateMsg(const DevStateMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DevStateMsg::SharedCtor() {
  _cached_size_ = 0;
  request_ = NULL;
  response_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevStateMsg::~DevStateMsg() {
  SharedDtor();
}

void DevStateMsg::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
    delete response_;
  }
}

void DevStateMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevStateMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevStateMsg_descriptor_;
}

const DevStateMsg& DevStateMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

DevStateMsg* DevStateMsg::default_instance_ = NULL;

DevStateMsg* DevStateMsg::New() const {
  return new DevStateMsg;
}

void DevStateMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_request()) {
      if (request_ != NULL) request_->::com::spplus::buff::DevStateMsg_Request::Clear();
    }
    if (has_response()) {
      if (response_ != NULL) response_->::com::spplus::buff::DevStateMsg_Response::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevStateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.spplus.buff.DevStateMsg.Request request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_response;
        break;
      }

      // optional .com.spplus.buff.DevStateMsg.Response response = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DevStateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.spplus.buff.DevStateMsg.Request request = 1;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->request(), output);
  }

  // optional .com.spplus.buff.DevStateMsg.Response response = 2;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DevStateMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.spplus.buff.DevStateMsg.Request request = 1;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->request(), target);
  }

  // optional .com.spplus.buff.DevStateMsg.Response response = 2;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DevStateMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.spplus.buff.DevStateMsg.Request request = 1;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

    // optional .com.spplus.buff.DevStateMsg.Response response = 2;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevStateMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevStateMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevStateMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevStateMsg::MergeFrom(const DevStateMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request()) {
      mutable_request()->::com::spplus::buff::DevStateMsg_Request::MergeFrom(from.request());
    }
    if (from.has_response()) {
      mutable_response()->::com::spplus::buff::DevStateMsg_Response::MergeFrom(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevStateMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevStateMsg::CopyFrom(const DevStateMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevStateMsg::IsInitialized() const {

  return true;
}

void DevStateMsg::Swap(DevStateMsg* other) {
  if (other != this) {
    std::swap(request_, other->request_);
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevStateMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevStateMsg_descriptor_;
  metadata.reflection = DevStateMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StationTypeMsg_Request::kSaveIdFieldNumber;
#endif  // !_MSC_VER

StationTypeMsg_Request::StationTypeMsg_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StationTypeMsg_Request::InitAsDefaultInstance() {
}

StationTypeMsg_Request::StationTypeMsg_Request(const StationTypeMsg_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StationTypeMsg_Request::SharedCtor() {
  _cached_size_ = 0;
  saveid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StationTypeMsg_Request::~StationTypeMsg_Request() {
  SharedDtor();
}

void StationTypeMsg_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StationTypeMsg_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StationTypeMsg_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StationTypeMsg_Request_descriptor_;
}

const StationTypeMsg_Request& StationTypeMsg_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

StationTypeMsg_Request* StationTypeMsg_Request::default_instance_ = NULL;

StationTypeMsg_Request* StationTypeMsg_Request::New() const {
  return new StationTypeMsg_Request;
}

void StationTypeMsg_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    saveid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StationTypeMsg_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 saveId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &saveid_)));
          set_has_saveid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StationTypeMsg_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 saveId = 1;
  if (has_saveid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->saveid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StationTypeMsg_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 saveId = 1;
  if (has_saveid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->saveid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StationTypeMsg_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 saveId = 1;
    if (has_saveid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->saveid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StationTypeMsg_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StationTypeMsg_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StationTypeMsg_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StationTypeMsg_Request::MergeFrom(const StationTypeMsg_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_saveid()) {
      set_saveid(from.saveid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StationTypeMsg_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StationTypeMsg_Request::CopyFrom(const StationTypeMsg_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationTypeMsg_Request::IsInitialized() const {

  return true;
}

void StationTypeMsg_Request::Swap(StationTypeMsg_Request* other) {
  if (other != this) {
    std::swap(saveid_, other->saveid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StationTypeMsg_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StationTypeMsg_Request_descriptor_;
  metadata.reflection = StationTypeMsg_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int StationTypeMsg_Response::kRescodeFieldNumber;
const int StationTypeMsg_Response::kTypeListFieldNumber;
#endif  // !_MSC_VER

StationTypeMsg_Response::StationTypeMsg_Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StationTypeMsg_Response::InitAsDefaultInstance() {
}

StationTypeMsg_Response::StationTypeMsg_Response(const StationTypeMsg_Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StationTypeMsg_Response::SharedCtor() {
  _cached_size_ = 0;
  rescode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StationTypeMsg_Response::~StationTypeMsg_Response() {
  SharedDtor();
}

void StationTypeMsg_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StationTypeMsg_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StationTypeMsg_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StationTypeMsg_Response_descriptor_;
}

const StationTypeMsg_Response& StationTypeMsg_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

StationTypeMsg_Response* StationTypeMsg_Response::default_instance_ = NULL;

StationTypeMsg_Response* StationTypeMsg_Response::New() const {
  return new StationTypeMsg_Response;
}

void StationTypeMsg_Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rescode_ = 0u;
  }
  typelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StationTypeMsg_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rescode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rescode_)));
          set_has_rescode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_typeList;
        break;
      }

      // repeated .com.spplus.buff.StationTypeBean typeList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_typeList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_typelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_typeList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StationTypeMsg_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rescode(), output);
  }

  // repeated .com.spplus.buff.StationTypeBean typeList = 2;
  for (int i = 0; i < this->typelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->typelist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StationTypeMsg_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rescode(), target);
  }

  // repeated .com.spplus.buff.StationTypeBean typeList = 2;
  for (int i = 0; i < this->typelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->typelist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StationTypeMsg_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 rescode = 1;
    if (has_rescode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rescode());
    }

  }
  // repeated .com.spplus.buff.StationTypeBean typeList = 2;
  total_size += 1 * this->typelist_size();
  for (int i = 0; i < this->typelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->typelist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StationTypeMsg_Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StationTypeMsg_Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StationTypeMsg_Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StationTypeMsg_Response::MergeFrom(const StationTypeMsg_Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  typelist_.MergeFrom(from.typelist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rescode()) {
      set_rescode(from.rescode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StationTypeMsg_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StationTypeMsg_Response::CopyFrom(const StationTypeMsg_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationTypeMsg_Response::IsInitialized() const {

  return true;
}

void StationTypeMsg_Response::Swap(StationTypeMsg_Response* other) {
  if (other != this) {
    std::swap(rescode_, other->rescode_);
    typelist_.Swap(&other->typelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StationTypeMsg_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StationTypeMsg_Response_descriptor_;
  metadata.reflection = StationTypeMsg_Response_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int StationTypeMsg::kRequestFieldNumber;
const int StationTypeMsg::kResponseFieldNumber;
#endif  // !_MSC_VER

StationTypeMsg::StationTypeMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StationTypeMsg::InitAsDefaultInstance() {
  request_ = const_cast< ::com::spplus::buff::StationTypeMsg_Request*>(&::com::spplus::buff::StationTypeMsg_Request::default_instance());
  response_ = const_cast< ::com::spplus::buff::StationTypeMsg_Response*>(&::com::spplus::buff::StationTypeMsg_Response::default_instance());
}

StationTypeMsg::StationTypeMsg(const StationTypeMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StationTypeMsg::SharedCtor() {
  _cached_size_ = 0;
  request_ = NULL;
  response_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StationTypeMsg::~StationTypeMsg() {
  SharedDtor();
}

void StationTypeMsg::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
    delete response_;
  }
}

void StationTypeMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StationTypeMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StationTypeMsg_descriptor_;
}

const StationTypeMsg& StationTypeMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

StationTypeMsg* StationTypeMsg::default_instance_ = NULL;

StationTypeMsg* StationTypeMsg::New() const {
  return new StationTypeMsg;
}

void StationTypeMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_request()) {
      if (request_ != NULL) request_->::com::spplus::buff::StationTypeMsg_Request::Clear();
    }
    if (has_response()) {
      if (response_ != NULL) response_->::com::spplus::buff::StationTypeMsg_Response::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StationTypeMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.spplus.buff.StationTypeMsg.Request request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_response;
        break;
      }

      // optional .com.spplus.buff.StationTypeMsg.Response response = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StationTypeMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.spplus.buff.StationTypeMsg.Request request = 1;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->request(), output);
  }

  // optional .com.spplus.buff.StationTypeMsg.Response response = 2;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StationTypeMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.spplus.buff.StationTypeMsg.Request request = 1;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->request(), target);
  }

  // optional .com.spplus.buff.StationTypeMsg.Response response = 2;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StationTypeMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.spplus.buff.StationTypeMsg.Request request = 1;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

    // optional .com.spplus.buff.StationTypeMsg.Response response = 2;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StationTypeMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StationTypeMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StationTypeMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StationTypeMsg::MergeFrom(const StationTypeMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request()) {
      mutable_request()->::com::spplus::buff::StationTypeMsg_Request::MergeFrom(from.request());
    }
    if (from.has_response()) {
      mutable_response()->::com::spplus::buff::StationTypeMsg_Response::MergeFrom(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StationTypeMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StationTypeMsg::CopyFrom(const StationTypeMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationTypeMsg::IsInitialized() const {

  return true;
}

void StationTypeMsg::Swap(StationTypeMsg* other) {
  if (other != this) {
    std::swap(request_, other->request_);
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StationTypeMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StationTypeMsg_descriptor_;
  metadata.reflection = StationTypeMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StationListMsg_Request::kStationIdFieldNumber;
#endif  // !_MSC_VER

StationListMsg_Request::StationListMsg_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StationListMsg_Request::InitAsDefaultInstance() {
}

StationListMsg_Request::StationListMsg_Request(const StationListMsg_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StationListMsg_Request::SharedCtor() {
  _cached_size_ = 0;
  stationid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StationListMsg_Request::~StationListMsg_Request() {
  SharedDtor();
}

void StationListMsg_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StationListMsg_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StationListMsg_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StationListMsg_Request_descriptor_;
}

const StationListMsg_Request& StationListMsg_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

StationListMsg_Request* StationListMsg_Request::default_instance_ = NULL;

StationListMsg_Request* StationListMsg_Request::New() const {
  return new StationListMsg_Request;
}

void StationListMsg_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stationid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StationListMsg_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 stationId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stationid_)));
          set_has_stationid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StationListMsg_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 stationId = 1;
  if (has_stationid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stationid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StationListMsg_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 stationId = 1;
  if (has_stationid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stationid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StationListMsg_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 stationId = 1;
    if (has_stationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stationid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StationListMsg_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StationListMsg_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StationListMsg_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StationListMsg_Request::MergeFrom(const StationListMsg_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stationid()) {
      set_stationid(from.stationid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StationListMsg_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StationListMsg_Request::CopyFrom(const StationListMsg_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationListMsg_Request::IsInitialized() const {

  return true;
}

void StationListMsg_Request::Swap(StationListMsg_Request* other) {
  if (other != this) {
    std::swap(stationid_, other->stationid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StationListMsg_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StationListMsg_Request_descriptor_;
  metadata.reflection = StationListMsg_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int StationListMsg_Response::kRescodeFieldNumber;
const int StationListMsg_Response::kStationListFieldNumber;
#endif  // !_MSC_VER

StationListMsg_Response::StationListMsg_Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StationListMsg_Response::InitAsDefaultInstance() {
}

StationListMsg_Response::StationListMsg_Response(const StationListMsg_Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StationListMsg_Response::SharedCtor() {
  _cached_size_ = 0;
  rescode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StationListMsg_Response::~StationListMsg_Response() {
  SharedDtor();
}

void StationListMsg_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StationListMsg_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StationListMsg_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StationListMsg_Response_descriptor_;
}

const StationListMsg_Response& StationListMsg_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

StationListMsg_Response* StationListMsg_Response::default_instance_ = NULL;

StationListMsg_Response* StationListMsg_Response::New() const {
  return new StationListMsg_Response;
}

void StationListMsg_Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rescode_ = 0u;
  }
  stationlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StationListMsg_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rescode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rescode_)));
          set_has_rescode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stationList;
        break;
      }

      // repeated .com.spplus.buff.StationBean stationList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stationList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stationlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stationList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StationListMsg_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rescode(), output);
  }

  // repeated .com.spplus.buff.StationBean stationList = 2;
  for (int i = 0; i < this->stationlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->stationlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StationListMsg_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 rescode = 1;
  if (has_rescode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rescode(), target);
  }

  // repeated .com.spplus.buff.StationBean stationList = 2;
  for (int i = 0; i < this->stationlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->stationlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StationListMsg_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 rescode = 1;
    if (has_rescode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rescode());
    }

  }
  // repeated .com.spplus.buff.StationBean stationList = 2;
  total_size += 1 * this->stationlist_size();
  for (int i = 0; i < this->stationlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stationlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StationListMsg_Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StationListMsg_Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StationListMsg_Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StationListMsg_Response::MergeFrom(const StationListMsg_Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  stationlist_.MergeFrom(from.stationlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rescode()) {
      set_rescode(from.rescode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StationListMsg_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StationListMsg_Response::CopyFrom(const StationListMsg_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationListMsg_Response::IsInitialized() const {

  return true;
}

void StationListMsg_Response::Swap(StationListMsg_Response* other) {
  if (other != this) {
    std::swap(rescode_, other->rescode_);
    stationlist_.Swap(&other->stationlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StationListMsg_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StationListMsg_Response_descriptor_;
  metadata.reflection = StationListMsg_Response_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int StationListMsg::kRequestFieldNumber;
const int StationListMsg::kResponseFieldNumber;
#endif  // !_MSC_VER

StationListMsg::StationListMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StationListMsg::InitAsDefaultInstance() {
  request_ = const_cast< ::com::spplus::buff::StationListMsg_Request*>(&::com::spplus::buff::StationListMsg_Request::default_instance());
  response_ = const_cast< ::com::spplus::buff::StationListMsg_Response*>(&::com::spplus::buff::StationListMsg_Response::default_instance());
}

StationListMsg::StationListMsg(const StationListMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StationListMsg::SharedCtor() {
  _cached_size_ = 0;
  request_ = NULL;
  response_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StationListMsg::~StationListMsg() {
  SharedDtor();
}

void StationListMsg::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
    delete response_;
  }
}

void StationListMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StationListMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StationListMsg_descriptor_;
}

const StationListMsg& StationListMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msgbody_2eproto();
  return *default_instance_;
}

StationListMsg* StationListMsg::default_instance_ = NULL;

StationListMsg* StationListMsg::New() const {
  return new StationListMsg;
}

void StationListMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_request()) {
      if (request_ != NULL) request_->::com::spplus::buff::StationListMsg_Request::Clear();
    }
    if (has_response()) {
      if (response_ != NULL) response_->::com::spplus::buff::StationListMsg_Response::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StationListMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.spplus.buff.StationListMsg.Request request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_response;
        break;
      }

      // optional .com.spplus.buff.StationListMsg.Response response = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StationListMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.spplus.buff.StationListMsg.Request request = 1;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->request(), output);
  }

  // optional .com.spplus.buff.StationListMsg.Response response = 2;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StationListMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.spplus.buff.StationListMsg.Request request = 1;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->request(), target);
  }

  // optional .com.spplus.buff.StationListMsg.Response response = 2;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StationListMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.spplus.buff.StationListMsg.Request request = 1;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

    // optional .com.spplus.buff.StationListMsg.Response response = 2;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StationListMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StationListMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StationListMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StationListMsg::MergeFrom(const StationListMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request()) {
      mutable_request()->::com::spplus::buff::StationListMsg_Request::MergeFrom(from.request());
    }
    if (from.has_response()) {
      mutable_response()->::com::spplus::buff::StationListMsg_Response::MergeFrom(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StationListMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StationListMsg::CopyFrom(const StationListMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationListMsg::IsInitialized() const {

  return true;
}

void StationListMsg::Swap(StationListMsg* other) {
  if (other != this) {
    std::swap(request_, other->request_);
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StationListMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StationListMsg_descriptor_;
  metadata.reflection = StationListMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace buff
}  // namespace spplus
}  // namespace com

// @@protoc_insertion_point(global_scope)
