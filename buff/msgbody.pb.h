// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgbody.proto

#ifndef PROTOBUF_msgbody_2eproto__INCLUDED
#define PROTOBUF_msgbody_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "msgbean.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace spplus {
namespace buff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msgbody_2eproto();
void protobuf_AssignDesc_msgbody_2eproto();
void protobuf_ShutdownFile_msgbody_2eproto();

class UserLoginMsg;
class UserLoginMsg_Request;
class UserLoginMsg_Response;
class UserListMsg;
class UserListMsg_Request;
class UserListMsg_Response;
class UserRoleListMsg;
class UserRoleListMsg_Request;
class UserRoleListMsg_Response;
class UserMgrMsg;
class UserMgrMsg_Request;
class UserMgrMsg_Response;
class DevStateMsg;
class DevStateMsg_Request;
class DevStateMsg_Response;
class StationTypeMsg;
class StationTypeMsg_Request;
class StationTypeMsg_Response;
class StationListMsg;
class StationListMsg_Request;
class StationListMsg_Response;

// ===================================================================

class UserLoginMsg_Request : public ::google::protobuf::Message {
 public:
  UserLoginMsg_Request();
  virtual ~UserLoginMsg_Request();

  UserLoginMsg_Request(const UserLoginMsg_Request& from);

  inline UserLoginMsg_Request& operator=(const UserLoginMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginMsg_Request& default_instance();

  void Swap(UserLoginMsg_Request* other);

  // implements Message ----------------------------------------------

  UserLoginMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLoginMsg_Request& from);
  void MergeFrom(const UserLoginMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes username = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const void* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional bytes userpwd = 2;
  inline bool has_userpwd() const;
  inline void clear_userpwd();
  static const int kUserpwdFieldNumber = 2;
  inline const ::std::string& userpwd() const;
  inline void set_userpwd(const ::std::string& value);
  inline void set_userpwd(const char* value);
  inline void set_userpwd(const void* value, size_t size);
  inline ::std::string* mutable_userpwd();
  inline ::std::string* release_userpwd();
  inline void set_allocated_userpwd(::std::string* userpwd);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserLoginMsg.Request)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_userpwd();
  inline void clear_has_userpwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* username_;
  ::std::string* userpwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserLoginMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class UserLoginMsg_Response : public ::google::protobuf::Message {
 public:
  UserLoginMsg_Response();
  virtual ~UserLoginMsg_Response();

  UserLoginMsg_Response(const UserLoginMsg_Response& from);

  inline UserLoginMsg_Response& operator=(const UserLoginMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginMsg_Response& default_instance();

  void Swap(UserLoginMsg_Response* other);

  // implements Message ----------------------------------------------

  UserLoginMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLoginMsg_Response& from);
  void MergeFrom(const UserLoginMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserLoginMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserLoginMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class UserLoginMsg : public ::google::protobuf::Message {
 public:
  UserLoginMsg();
  virtual ~UserLoginMsg();

  UserLoginMsg(const UserLoginMsg& from);

  inline UserLoginMsg& operator=(const UserLoginMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginMsg& default_instance();

  void Swap(UserLoginMsg* other);

  // implements Message ----------------------------------------------

  UserLoginMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLoginMsg& from);
  void MergeFrom(const UserLoginMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UserLoginMsg_Request Request;
  typedef UserLoginMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.UserLoginMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::UserLoginMsg_Request& request() const;
  inline ::com::spplus::buff::UserLoginMsg_Request* mutable_request();
  inline ::com::spplus::buff::UserLoginMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::UserLoginMsg_Request* request);

  // optional .com.spplus.buff.UserLoginMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::UserLoginMsg_Response& response() const;
  inline ::com::spplus::buff::UserLoginMsg_Response* mutable_response();
  inline ::com::spplus::buff::UserLoginMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::UserLoginMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserLoginMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::UserLoginMsg_Request* request_;
  ::com::spplus::buff::UserLoginMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserLoginMsg* default_instance_;
};
// -------------------------------------------------------------------

class UserListMsg_Request : public ::google::protobuf::Message {
 public:
  UserListMsg_Request();
  virtual ~UserListMsg_Request();

  UserListMsg_Request(const UserListMsg_Request& from);

  inline UserListMsg_Request& operator=(const UserListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserListMsg_Request& default_instance();

  void Swap(UserListMsg_Request* other);

  // implements Message ----------------------------------------------

  UserListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserListMsg_Request& from);
  void MergeFrom(const UserListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class UserListMsg_Response : public ::google::protobuf::Message {
 public:
  UserListMsg_Response();
  virtual ~UserListMsg_Response();

  UserListMsg_Response(const UserListMsg_Response& from);

  inline UserListMsg_Response& operator=(const UserListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserListMsg_Response& default_instance();

  void Swap(UserListMsg_Response* other);

  // implements Message ----------------------------------------------

  UserListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserListMsg_Response& from);
  void MergeFrom(const UserListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.UserBean userlist = 2;
  inline int userlist_size() const;
  inline void clear_userlist();
  static const int kUserlistFieldNumber = 2;
  inline const ::com::spplus::buff::UserBean& userlist(int index) const;
  inline ::com::spplus::buff::UserBean* mutable_userlist(int index);
  inline ::com::spplus::buff::UserBean* add_userlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >&
      userlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >*
      mutable_userlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean > userlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class UserListMsg : public ::google::protobuf::Message {
 public:
  UserListMsg();
  virtual ~UserListMsg();

  UserListMsg(const UserListMsg& from);

  inline UserListMsg& operator=(const UserListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserListMsg& default_instance();

  void Swap(UserListMsg* other);

  // implements Message ----------------------------------------------

  UserListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserListMsg& from);
  void MergeFrom(const UserListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UserListMsg_Request Request;
  typedef UserListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.UserListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::UserListMsg_Request& request() const;
  inline ::com::spplus::buff::UserListMsg_Request* mutable_request();
  inline ::com::spplus::buff::UserListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::UserListMsg_Request* request);

  // optional .com.spplus.buff.UserListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::UserListMsg_Response& response() const;
  inline ::com::spplus::buff::UserListMsg_Response* mutable_response();
  inline ::com::spplus::buff::UserListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::UserListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::UserListMsg_Request* request_;
  ::com::spplus::buff::UserListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserListMsg* default_instance_;
};
// -------------------------------------------------------------------

class UserRoleListMsg_Request : public ::google::protobuf::Message {
 public:
  UserRoleListMsg_Request();
  virtual ~UserRoleListMsg_Request();

  UserRoleListMsg_Request(const UserRoleListMsg_Request& from);

  inline UserRoleListMsg_Request& operator=(const UserRoleListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRoleListMsg_Request& default_instance();

  void Swap(UserRoleListMsg_Request* other);

  // implements Message ----------------------------------------------

  UserRoleListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserRoleListMsg_Request& from);
  void MergeFrom(const UserRoleListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserRoleListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserRoleListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class UserRoleListMsg_Response : public ::google::protobuf::Message {
 public:
  UserRoleListMsg_Response();
  virtual ~UserRoleListMsg_Response();

  UserRoleListMsg_Response(const UserRoleListMsg_Response& from);

  inline UserRoleListMsg_Response& operator=(const UserRoleListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRoleListMsg_Response& default_instance();

  void Swap(UserRoleListMsg_Response* other);

  // implements Message ----------------------------------------------

  UserRoleListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserRoleListMsg_Response& from);
  void MergeFrom(const UserRoleListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.UserRoleBean userrolelist = 2;
  inline int userrolelist_size() const;
  inline void clear_userrolelist();
  static const int kUserrolelistFieldNumber = 2;
  inline const ::com::spplus::buff::UserRoleBean& userrolelist(int index) const;
  inline ::com::spplus::buff::UserRoleBean* mutable_userrolelist(int index);
  inline ::com::spplus::buff::UserRoleBean* add_userrolelist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserRoleBean >&
      userrolelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserRoleBean >*
      mutable_userrolelist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserRoleListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserRoleBean > userrolelist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserRoleListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class UserRoleListMsg : public ::google::protobuf::Message {
 public:
  UserRoleListMsg();
  virtual ~UserRoleListMsg();

  UserRoleListMsg(const UserRoleListMsg& from);

  inline UserRoleListMsg& operator=(const UserRoleListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRoleListMsg& default_instance();

  void Swap(UserRoleListMsg* other);

  // implements Message ----------------------------------------------

  UserRoleListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserRoleListMsg& from);
  void MergeFrom(const UserRoleListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UserRoleListMsg_Request Request;
  typedef UserRoleListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.UserRoleListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::UserRoleListMsg_Request& request() const;
  inline ::com::spplus::buff::UserRoleListMsg_Request* mutable_request();
  inline ::com::spplus::buff::UserRoleListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::UserRoleListMsg_Request* request);

  // optional .com.spplus.buff.UserRoleListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::UserRoleListMsg_Response& response() const;
  inline ::com::spplus::buff::UserRoleListMsg_Response* mutable_response();
  inline ::com::spplus::buff::UserRoleListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::UserRoleListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserRoleListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::UserRoleListMsg_Request* request_;
  ::com::spplus::buff::UserRoleListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserRoleListMsg* default_instance_;
};
// -------------------------------------------------------------------

class UserMgrMsg_Request : public ::google::protobuf::Message {
 public:
  UserMgrMsg_Request();
  virtual ~UserMgrMsg_Request();

  UserMgrMsg_Request(const UserMgrMsg_Request& from);

  inline UserMgrMsg_Request& operator=(const UserMgrMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMgrMsg_Request& default_instance();

  void Swap(UserMgrMsg_Request* other);

  // implements Message ----------------------------------------------

  UserMgrMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMgrMsg_Request& from);
  void MergeFrom(const UserMgrMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes mgrsql = 1;
  inline bool has_mgrsql() const;
  inline void clear_mgrsql();
  static const int kMgrsqlFieldNumber = 1;
  inline const ::std::string& mgrsql() const;
  inline void set_mgrsql(const ::std::string& value);
  inline void set_mgrsql(const char* value);
  inline void set_mgrsql(const void* value, size_t size);
  inline ::std::string* mutable_mgrsql();
  inline ::std::string* release_mgrsql();
  inline void set_allocated_mgrsql(::std::string* mgrsql);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserMgrMsg.Request)
 private:
  inline void set_has_mgrsql();
  inline void clear_has_mgrsql();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* mgrsql_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserMgrMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class UserMgrMsg_Response : public ::google::protobuf::Message {
 public:
  UserMgrMsg_Response();
  virtual ~UserMgrMsg_Response();

  UserMgrMsg_Response(const UserMgrMsg_Response& from);

  inline UserMgrMsg_Response& operator=(const UserMgrMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMgrMsg_Response& default_instance();

  void Swap(UserMgrMsg_Response* other);

  // implements Message ----------------------------------------------

  UserMgrMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMgrMsg_Response& from);
  void MergeFrom(const UserMgrMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserMgrMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserMgrMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class UserMgrMsg : public ::google::protobuf::Message {
 public:
  UserMgrMsg();
  virtual ~UserMgrMsg();

  UserMgrMsg(const UserMgrMsg& from);

  inline UserMgrMsg& operator=(const UserMgrMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMgrMsg& default_instance();

  void Swap(UserMgrMsg* other);

  // implements Message ----------------------------------------------

  UserMgrMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMgrMsg& from);
  void MergeFrom(const UserMgrMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UserMgrMsg_Request Request;
  typedef UserMgrMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.UserMgrMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::UserMgrMsg_Request& request() const;
  inline ::com::spplus::buff::UserMgrMsg_Request* mutable_request();
  inline ::com::spplus::buff::UserMgrMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::UserMgrMsg_Request* request);

  // optional .com.spplus.buff.UserMgrMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::UserMgrMsg_Response& response() const;
  inline ::com::spplus::buff::UserMgrMsg_Response* mutable_response();
  inline ::com::spplus::buff::UserMgrMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::UserMgrMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserMgrMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::UserMgrMsg_Request* request_;
  ::com::spplus::buff::UserMgrMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserMgrMsg* default_instance_;
};
// -------------------------------------------------------------------

class DevStateMsg_Request : public ::google::protobuf::Message {
 public:
  DevStateMsg_Request();
  virtual ~DevStateMsg_Request();

  DevStateMsg_Request(const DevStateMsg_Request& from);

  inline DevStateMsg_Request& operator=(const DevStateMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DevStateMsg_Request& default_instance();

  void Swap(DevStateMsg_Request* other);

  // implements Message ----------------------------------------------

  DevStateMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DevStateMsg_Request& from);
  void MergeFrom(const DevStateMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 saveId = 1;
  inline bool has_saveid() const;
  inline void clear_saveid();
  static const int kSaveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 saveid() const;
  inline void set_saveid(::google::protobuf::uint32 value);

  // optional bytes stationCim = 2;
  inline bool has_stationcim() const;
  inline void clear_stationcim();
  static const int kStationCimFieldNumber = 2;
  inline const ::std::string& stationcim() const;
  inline void set_stationcim(const ::std::string& value);
  inline void set_stationcim(const char* value);
  inline void set_stationcim(const void* value, size_t size);
  inline ::std::string* mutable_stationcim();
  inline ::std::string* release_stationcim();
  inline void set_allocated_stationcim(::std::string* stationcim);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.DevStateMsg.Request)
 private:
  inline void set_has_saveid();
  inline void clear_has_saveid();
  inline void set_has_stationcim();
  inline void clear_has_stationcim();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stationcim_;
  ::google::protobuf::uint32 saveid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static DevStateMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class DevStateMsg_Response : public ::google::protobuf::Message {
 public:
  DevStateMsg_Response();
  virtual ~DevStateMsg_Response();

  DevStateMsg_Response(const DevStateMsg_Response& from);

  inline DevStateMsg_Response& operator=(const DevStateMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DevStateMsg_Response& default_instance();

  void Swap(DevStateMsg_Response* other);

  // implements Message ----------------------------------------------

  DevStateMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DevStateMsg_Response& from);
  void MergeFrom(const DevStateMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.StateBean devState = 2;
  inline int devstate_size() const;
  inline void clear_devstate();
  static const int kDevStateFieldNumber = 2;
  inline const ::com::spplus::buff::StateBean& devstate(int index) const;
  inline ::com::spplus::buff::StateBean* mutable_devstate(int index);
  inline ::com::spplus::buff::StateBean* add_devstate();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >&
      devstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >*
      mutable_devstate();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.DevStateMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean > devstate_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static DevStateMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class DevStateMsg : public ::google::protobuf::Message {
 public:
  DevStateMsg();
  virtual ~DevStateMsg();

  DevStateMsg(const DevStateMsg& from);

  inline DevStateMsg& operator=(const DevStateMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DevStateMsg& default_instance();

  void Swap(DevStateMsg* other);

  // implements Message ----------------------------------------------

  DevStateMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DevStateMsg& from);
  void MergeFrom(const DevStateMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DevStateMsg_Request Request;
  typedef DevStateMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.DevStateMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::DevStateMsg_Request& request() const;
  inline ::com::spplus::buff::DevStateMsg_Request* mutable_request();
  inline ::com::spplus::buff::DevStateMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::DevStateMsg_Request* request);

  // optional .com.spplus.buff.DevStateMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::DevStateMsg_Response& response() const;
  inline ::com::spplus::buff::DevStateMsg_Response* mutable_response();
  inline ::com::spplus::buff::DevStateMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::DevStateMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.DevStateMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::DevStateMsg_Request* request_;
  ::com::spplus::buff::DevStateMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static DevStateMsg* default_instance_;
};
// -------------------------------------------------------------------

class StationTypeMsg_Request : public ::google::protobuf::Message {
 public:
  StationTypeMsg_Request();
  virtual ~StationTypeMsg_Request();

  StationTypeMsg_Request(const StationTypeMsg_Request& from);

  inline StationTypeMsg_Request& operator=(const StationTypeMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationTypeMsg_Request& default_instance();

  void Swap(StationTypeMsg_Request* other);

  // implements Message ----------------------------------------------

  StationTypeMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationTypeMsg_Request& from);
  void MergeFrom(const StationTypeMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 saveId = 1;
  inline bool has_saveid() const;
  inline void clear_saveid();
  static const int kSaveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 saveid() const;
  inline void set_saveid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationTypeMsg.Request)
 private:
  inline void set_has_saveid();
  inline void clear_has_saveid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 saveid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationTypeMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class StationTypeMsg_Response : public ::google::protobuf::Message {
 public:
  StationTypeMsg_Response();
  virtual ~StationTypeMsg_Response();

  StationTypeMsg_Response(const StationTypeMsg_Response& from);

  inline StationTypeMsg_Response& operator=(const StationTypeMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationTypeMsg_Response& default_instance();

  void Swap(StationTypeMsg_Response* other);

  // implements Message ----------------------------------------------

  StationTypeMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationTypeMsg_Response& from);
  void MergeFrom(const StationTypeMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.StationTypeBean typeList = 2;
  inline int typelist_size() const;
  inline void clear_typelist();
  static const int kTypeListFieldNumber = 2;
  inline const ::com::spplus::buff::StationTypeBean& typelist(int index) const;
  inline ::com::spplus::buff::StationTypeBean* mutable_typelist(int index);
  inline ::com::spplus::buff::StationTypeBean* add_typelist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationTypeBean >&
      typelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationTypeBean >*
      mutable_typelist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationTypeMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationTypeBean > typelist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationTypeMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class StationTypeMsg : public ::google::protobuf::Message {
 public:
  StationTypeMsg();
  virtual ~StationTypeMsg();

  StationTypeMsg(const StationTypeMsg& from);

  inline StationTypeMsg& operator=(const StationTypeMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationTypeMsg& default_instance();

  void Swap(StationTypeMsg* other);

  // implements Message ----------------------------------------------

  StationTypeMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationTypeMsg& from);
  void MergeFrom(const StationTypeMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StationTypeMsg_Request Request;
  typedef StationTypeMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.StationTypeMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::StationTypeMsg_Request& request() const;
  inline ::com::spplus::buff::StationTypeMsg_Request* mutable_request();
  inline ::com::spplus::buff::StationTypeMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::StationTypeMsg_Request* request);

  // optional .com.spplus.buff.StationTypeMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::StationTypeMsg_Response& response() const;
  inline ::com::spplus::buff::StationTypeMsg_Response* mutable_response();
  inline ::com::spplus::buff::StationTypeMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::StationTypeMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationTypeMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::StationTypeMsg_Request* request_;
  ::com::spplus::buff::StationTypeMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationTypeMsg* default_instance_;
};
// -------------------------------------------------------------------

class StationListMsg_Request : public ::google::protobuf::Message {
 public:
  StationListMsg_Request();
  virtual ~StationListMsg_Request();

  StationListMsg_Request(const StationListMsg_Request& from);

  inline StationListMsg_Request& operator=(const StationListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationListMsg_Request& default_instance();

  void Swap(StationListMsg_Request* other);

  // implements Message ----------------------------------------------

  StationListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationListMsg_Request& from);
  void MergeFrom(const StationListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stationId = 1;
  inline bool has_stationid() const;
  inline void clear_stationid();
  static const int kStationIdFieldNumber = 1;
  inline ::google::protobuf::uint32 stationid() const;
  inline void set_stationid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationListMsg.Request)
 private:
  inline void set_has_stationid();
  inline void clear_has_stationid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 stationid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class StationListMsg_Response : public ::google::protobuf::Message {
 public:
  StationListMsg_Response();
  virtual ~StationListMsg_Response();

  StationListMsg_Response(const StationListMsg_Response& from);

  inline StationListMsg_Response& operator=(const StationListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationListMsg_Response& default_instance();

  void Swap(StationListMsg_Response* other);

  // implements Message ----------------------------------------------

  StationListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationListMsg_Response& from);
  void MergeFrom(const StationListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.StationBean stationList = 2;
  inline int stationlist_size() const;
  inline void clear_stationlist();
  static const int kStationListFieldNumber = 2;
  inline const ::com::spplus::buff::StationBean& stationlist(int index) const;
  inline ::com::spplus::buff::StationBean* mutable_stationlist(int index);
  inline ::com::spplus::buff::StationBean* add_stationlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >&
      stationlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >*
      mutable_stationlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean > stationlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class StationListMsg : public ::google::protobuf::Message {
 public:
  StationListMsg();
  virtual ~StationListMsg();

  StationListMsg(const StationListMsg& from);

  inline StationListMsg& operator=(const StationListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationListMsg& default_instance();

  void Swap(StationListMsg* other);

  // implements Message ----------------------------------------------

  StationListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationListMsg& from);
  void MergeFrom(const StationListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StationListMsg_Request Request;
  typedef StationListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.StationListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::StationListMsg_Request& request() const;
  inline ::com::spplus::buff::StationListMsg_Request* mutable_request();
  inline ::com::spplus::buff::StationListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::StationListMsg_Request* request);

  // optional .com.spplus.buff.StationListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::StationListMsg_Response& response() const;
  inline ::com::spplus::buff::StationListMsg_Response* mutable_response();
  inline ::com::spplus::buff::StationListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::StationListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::StationListMsg_Request* request_;
  ::com::spplus::buff::StationListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationListMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// UserLoginMsg_Request

// optional bytes username = 1;
inline bool UserLoginMsg_Request::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginMsg_Request::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginMsg_Request::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginMsg_Request::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& UserLoginMsg_Request::username() const {
  return *username_;
}
inline void UserLoginMsg_Request::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void UserLoginMsg_Request::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void UserLoginMsg_Request::set_username(const void* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserLoginMsg_Request::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* UserLoginMsg_Request::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserLoginMsg_Request::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes userpwd = 2;
inline bool UserLoginMsg_Request::has_userpwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLoginMsg_Request::set_has_userpwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLoginMsg_Request::clear_has_userpwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLoginMsg_Request::clear_userpwd() {
  if (userpwd_ != &::google::protobuf::internal::kEmptyString) {
    userpwd_->clear();
  }
  clear_has_userpwd();
}
inline const ::std::string& UserLoginMsg_Request::userpwd() const {
  return *userpwd_;
}
inline void UserLoginMsg_Request::set_userpwd(const ::std::string& value) {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::kEmptyString) {
    userpwd_ = new ::std::string;
  }
  userpwd_->assign(value);
}
inline void UserLoginMsg_Request::set_userpwd(const char* value) {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::kEmptyString) {
    userpwd_ = new ::std::string;
  }
  userpwd_->assign(value);
}
inline void UserLoginMsg_Request::set_userpwd(const void* value, size_t size) {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::kEmptyString) {
    userpwd_ = new ::std::string;
  }
  userpwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserLoginMsg_Request::mutable_userpwd() {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::kEmptyString) {
    userpwd_ = new ::std::string;
  }
  return userpwd_;
}
inline ::std::string* UserLoginMsg_Request::release_userpwd() {
  clear_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userpwd_;
    userpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserLoginMsg_Request::set_allocated_userpwd(::std::string* userpwd) {
  if (userpwd_ != &::google::protobuf::internal::kEmptyString) {
    delete userpwd_;
  }
  if (userpwd) {
    set_has_userpwd();
    userpwd_ = userpwd;
  } else {
    clear_has_userpwd();
    userpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UserLoginMsg_Response

// optional uint32 rescode = 1;
inline bool UserLoginMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 UserLoginMsg_Response::rescode() const {
  return rescode_;
}
inline void UserLoginMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// UserLoginMsg

// optional .com.spplus.buff.UserLoginMsg.Request request = 1;
inline bool UserLoginMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::UserLoginMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::UserLoginMsg_Request& UserLoginMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::UserLoginMsg_Request* UserLoginMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::UserLoginMsg_Request;
  return request_;
}
inline ::com::spplus::buff::UserLoginMsg_Request* UserLoginMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::UserLoginMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void UserLoginMsg::set_allocated_request(::com::spplus::buff::UserLoginMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.UserLoginMsg.Response response = 2;
inline bool UserLoginMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLoginMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLoginMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLoginMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::UserLoginMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::UserLoginMsg_Response& UserLoginMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::UserLoginMsg_Response* UserLoginMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::UserLoginMsg_Response;
  return response_;
}
inline ::com::spplus::buff::UserLoginMsg_Response* UserLoginMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::UserLoginMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void UserLoginMsg::set_allocated_response(::com::spplus::buff::UserLoginMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// UserListMsg_Request

// optional bytes reqdate = 1;
inline bool UserListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& UserListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void UserListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void UserListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void UserListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* UserListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UserListMsg_Response

// optional uint32 rescode = 1;
inline bool UserListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 UserListMsg_Response::rescode() const {
  return rescode_;
}
inline void UserListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.UserBean userlist = 2;
inline int UserListMsg_Response::userlist_size() const {
  return userlist_.size();
}
inline void UserListMsg_Response::clear_userlist() {
  userlist_.Clear();
}
inline const ::com::spplus::buff::UserBean& UserListMsg_Response::userlist(int index) const {
  return userlist_.Get(index);
}
inline ::com::spplus::buff::UserBean* UserListMsg_Response::mutable_userlist(int index) {
  return userlist_.Mutable(index);
}
inline ::com::spplus::buff::UserBean* UserListMsg_Response::add_userlist() {
  return userlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >&
UserListMsg_Response::userlist() const {
  return userlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >*
UserListMsg_Response::mutable_userlist() {
  return &userlist_;
}

// -------------------------------------------------------------------

// UserListMsg

// optional .com.spplus.buff.UserListMsg.Request request = 1;
inline bool UserListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::UserListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::UserListMsg_Request& UserListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::UserListMsg_Request* UserListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::UserListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::UserListMsg_Request* UserListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::UserListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void UserListMsg::set_allocated_request(::com::spplus::buff::UserListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.UserListMsg.Response response = 2;
inline bool UserListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::UserListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::UserListMsg_Response& UserListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::UserListMsg_Response* UserListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::UserListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::UserListMsg_Response* UserListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::UserListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void UserListMsg::set_allocated_response(::com::spplus::buff::UserListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// UserRoleListMsg_Request

// optional bytes reqdate = 1;
inline bool UserRoleListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRoleListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRoleListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRoleListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& UserRoleListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void UserRoleListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void UserRoleListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void UserRoleListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserRoleListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* UserRoleListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserRoleListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UserRoleListMsg_Response

// optional uint32 rescode = 1;
inline bool UserRoleListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRoleListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRoleListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRoleListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 UserRoleListMsg_Response::rescode() const {
  return rescode_;
}
inline void UserRoleListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.UserRoleBean userrolelist = 2;
inline int UserRoleListMsg_Response::userrolelist_size() const {
  return userrolelist_.size();
}
inline void UserRoleListMsg_Response::clear_userrolelist() {
  userrolelist_.Clear();
}
inline const ::com::spplus::buff::UserRoleBean& UserRoleListMsg_Response::userrolelist(int index) const {
  return userrolelist_.Get(index);
}
inline ::com::spplus::buff::UserRoleBean* UserRoleListMsg_Response::mutable_userrolelist(int index) {
  return userrolelist_.Mutable(index);
}
inline ::com::spplus::buff::UserRoleBean* UserRoleListMsg_Response::add_userrolelist() {
  return userrolelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserRoleBean >&
UserRoleListMsg_Response::userrolelist() const {
  return userrolelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserRoleBean >*
UserRoleListMsg_Response::mutable_userrolelist() {
  return &userrolelist_;
}

// -------------------------------------------------------------------

// UserRoleListMsg

// optional .com.spplus.buff.UserRoleListMsg.Request request = 1;
inline bool UserRoleListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRoleListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRoleListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRoleListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::UserRoleListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::UserRoleListMsg_Request& UserRoleListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::UserRoleListMsg_Request* UserRoleListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::UserRoleListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::UserRoleListMsg_Request* UserRoleListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::UserRoleListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void UserRoleListMsg::set_allocated_request(::com::spplus::buff::UserRoleListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.UserRoleListMsg.Response response = 2;
inline bool UserRoleListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserRoleListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserRoleListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserRoleListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::UserRoleListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::UserRoleListMsg_Response& UserRoleListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::UserRoleListMsg_Response* UserRoleListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::UserRoleListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::UserRoleListMsg_Response* UserRoleListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::UserRoleListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void UserRoleListMsg::set_allocated_response(::com::spplus::buff::UserRoleListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// UserMgrMsg_Request

// optional bytes mgrsql = 1;
inline bool UserMgrMsg_Request::has_mgrsql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMgrMsg_Request::set_has_mgrsql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMgrMsg_Request::clear_has_mgrsql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMgrMsg_Request::clear_mgrsql() {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    mgrsql_->clear();
  }
  clear_has_mgrsql();
}
inline const ::std::string& UserMgrMsg_Request::mgrsql() const {
  return *mgrsql_;
}
inline void UserMgrMsg_Request::set_mgrsql(const ::std::string& value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void UserMgrMsg_Request::set_mgrsql(const char* value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void UserMgrMsg_Request::set_mgrsql(const void* value, size_t size) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserMgrMsg_Request::mutable_mgrsql() {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  return mgrsql_;
}
inline ::std::string* UserMgrMsg_Request::release_mgrsql() {
  clear_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mgrsql_;
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserMgrMsg_Request::set_allocated_mgrsql(::std::string* mgrsql) {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    delete mgrsql_;
  }
  if (mgrsql) {
    set_has_mgrsql();
    mgrsql_ = mgrsql;
  } else {
    clear_has_mgrsql();
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UserMgrMsg_Response

// optional uint32 rescode = 1;
inline bool UserMgrMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMgrMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMgrMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMgrMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 UserMgrMsg_Response::rescode() const {
  return rescode_;
}
inline void UserMgrMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// UserMgrMsg

// optional .com.spplus.buff.UserMgrMsg.Request request = 1;
inline bool UserMgrMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMgrMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMgrMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMgrMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::UserMgrMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::UserMgrMsg_Request& UserMgrMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::UserMgrMsg_Request* UserMgrMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::UserMgrMsg_Request;
  return request_;
}
inline ::com::spplus::buff::UserMgrMsg_Request* UserMgrMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::UserMgrMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void UserMgrMsg::set_allocated_request(::com::spplus::buff::UserMgrMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.UserMgrMsg.Response response = 2;
inline bool UserMgrMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserMgrMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserMgrMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserMgrMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::UserMgrMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::UserMgrMsg_Response& UserMgrMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::UserMgrMsg_Response* UserMgrMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::UserMgrMsg_Response;
  return response_;
}
inline ::com::spplus::buff::UserMgrMsg_Response* UserMgrMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::UserMgrMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void UserMgrMsg::set_allocated_response(::com::spplus::buff::UserMgrMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// DevStateMsg_Request

// optional uint32 saveId = 1;
inline bool DevStateMsg_Request::has_saveid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DevStateMsg_Request::set_has_saveid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DevStateMsg_Request::clear_has_saveid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DevStateMsg_Request::clear_saveid() {
  saveid_ = 0u;
  clear_has_saveid();
}
inline ::google::protobuf::uint32 DevStateMsg_Request::saveid() const {
  return saveid_;
}
inline void DevStateMsg_Request::set_saveid(::google::protobuf::uint32 value) {
  set_has_saveid();
  saveid_ = value;
}

// optional bytes stationCim = 2;
inline bool DevStateMsg_Request::has_stationcim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DevStateMsg_Request::set_has_stationcim() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DevStateMsg_Request::clear_has_stationcim() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DevStateMsg_Request::clear_stationcim() {
  if (stationcim_ != &::google::protobuf::internal::kEmptyString) {
    stationcim_->clear();
  }
  clear_has_stationcim();
}
inline const ::std::string& DevStateMsg_Request::stationcim() const {
  return *stationcim_;
}
inline void DevStateMsg_Request::set_stationcim(const ::std::string& value) {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  stationcim_->assign(value);
}
inline void DevStateMsg_Request::set_stationcim(const char* value) {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  stationcim_->assign(value);
}
inline void DevStateMsg_Request::set_stationcim(const void* value, size_t size) {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  stationcim_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DevStateMsg_Request::mutable_stationcim() {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  return stationcim_;
}
inline ::std::string* DevStateMsg_Request::release_stationcim() {
  clear_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stationcim_;
    stationcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DevStateMsg_Request::set_allocated_stationcim(::std::string* stationcim) {
  if (stationcim_ != &::google::protobuf::internal::kEmptyString) {
    delete stationcim_;
  }
  if (stationcim) {
    set_has_stationcim();
    stationcim_ = stationcim;
  } else {
    clear_has_stationcim();
    stationcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DevStateMsg_Response

// optional uint32 rescode = 1;
inline bool DevStateMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DevStateMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DevStateMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DevStateMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 DevStateMsg_Response::rescode() const {
  return rescode_;
}
inline void DevStateMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.StateBean devState = 2;
inline int DevStateMsg_Response::devstate_size() const {
  return devstate_.size();
}
inline void DevStateMsg_Response::clear_devstate() {
  devstate_.Clear();
}
inline const ::com::spplus::buff::StateBean& DevStateMsg_Response::devstate(int index) const {
  return devstate_.Get(index);
}
inline ::com::spplus::buff::StateBean* DevStateMsg_Response::mutable_devstate(int index) {
  return devstate_.Mutable(index);
}
inline ::com::spplus::buff::StateBean* DevStateMsg_Response::add_devstate() {
  return devstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >&
DevStateMsg_Response::devstate() const {
  return devstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >*
DevStateMsg_Response::mutable_devstate() {
  return &devstate_;
}

// -------------------------------------------------------------------

// DevStateMsg

// optional .com.spplus.buff.DevStateMsg.Request request = 1;
inline bool DevStateMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DevStateMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DevStateMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DevStateMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::DevStateMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::DevStateMsg_Request& DevStateMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::DevStateMsg_Request* DevStateMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::DevStateMsg_Request;
  return request_;
}
inline ::com::spplus::buff::DevStateMsg_Request* DevStateMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::DevStateMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void DevStateMsg::set_allocated_request(::com::spplus::buff::DevStateMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.DevStateMsg.Response response = 2;
inline bool DevStateMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DevStateMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DevStateMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DevStateMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::DevStateMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::DevStateMsg_Response& DevStateMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::DevStateMsg_Response* DevStateMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::DevStateMsg_Response;
  return response_;
}
inline ::com::spplus::buff::DevStateMsg_Response* DevStateMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::DevStateMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void DevStateMsg::set_allocated_response(::com::spplus::buff::DevStateMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// StationTypeMsg_Request

// optional uint32 saveId = 1;
inline bool StationTypeMsg_Request::has_saveid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationTypeMsg_Request::set_has_saveid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationTypeMsg_Request::clear_has_saveid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationTypeMsg_Request::clear_saveid() {
  saveid_ = 0u;
  clear_has_saveid();
}
inline ::google::protobuf::uint32 StationTypeMsg_Request::saveid() const {
  return saveid_;
}
inline void StationTypeMsg_Request::set_saveid(::google::protobuf::uint32 value) {
  set_has_saveid();
  saveid_ = value;
}

// -------------------------------------------------------------------

// StationTypeMsg_Response

// optional uint32 rescode = 1;
inline bool StationTypeMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationTypeMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationTypeMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationTypeMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 StationTypeMsg_Response::rescode() const {
  return rescode_;
}
inline void StationTypeMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.StationTypeBean typeList = 2;
inline int StationTypeMsg_Response::typelist_size() const {
  return typelist_.size();
}
inline void StationTypeMsg_Response::clear_typelist() {
  typelist_.Clear();
}
inline const ::com::spplus::buff::StationTypeBean& StationTypeMsg_Response::typelist(int index) const {
  return typelist_.Get(index);
}
inline ::com::spplus::buff::StationTypeBean* StationTypeMsg_Response::mutable_typelist(int index) {
  return typelist_.Mutable(index);
}
inline ::com::spplus::buff::StationTypeBean* StationTypeMsg_Response::add_typelist() {
  return typelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationTypeBean >&
StationTypeMsg_Response::typelist() const {
  return typelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationTypeBean >*
StationTypeMsg_Response::mutable_typelist() {
  return &typelist_;
}

// -------------------------------------------------------------------

// StationTypeMsg

// optional .com.spplus.buff.StationTypeMsg.Request request = 1;
inline bool StationTypeMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationTypeMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationTypeMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationTypeMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::StationTypeMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::StationTypeMsg_Request& StationTypeMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::StationTypeMsg_Request* StationTypeMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::StationTypeMsg_Request;
  return request_;
}
inline ::com::spplus::buff::StationTypeMsg_Request* StationTypeMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::StationTypeMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void StationTypeMsg::set_allocated_request(::com::spplus::buff::StationTypeMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.StationTypeMsg.Response response = 2;
inline bool StationTypeMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StationTypeMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StationTypeMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StationTypeMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::StationTypeMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::StationTypeMsg_Response& StationTypeMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::StationTypeMsg_Response* StationTypeMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::StationTypeMsg_Response;
  return response_;
}
inline ::com::spplus::buff::StationTypeMsg_Response* StationTypeMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::StationTypeMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void StationTypeMsg::set_allocated_response(::com::spplus::buff::StationTypeMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// StationListMsg_Request

// optional uint32 stationId = 1;
inline bool StationListMsg_Request::has_stationid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationListMsg_Request::set_has_stationid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationListMsg_Request::clear_has_stationid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationListMsg_Request::clear_stationid() {
  stationid_ = 0u;
  clear_has_stationid();
}
inline ::google::protobuf::uint32 StationListMsg_Request::stationid() const {
  return stationid_;
}
inline void StationListMsg_Request::set_stationid(::google::protobuf::uint32 value) {
  set_has_stationid();
  stationid_ = value;
}

// -------------------------------------------------------------------

// StationListMsg_Response

// optional uint32 rescode = 1;
inline bool StationListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 StationListMsg_Response::rescode() const {
  return rescode_;
}
inline void StationListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.StationBean stationList = 2;
inline int StationListMsg_Response::stationlist_size() const {
  return stationlist_.size();
}
inline void StationListMsg_Response::clear_stationlist() {
  stationlist_.Clear();
}
inline const ::com::spplus::buff::StationBean& StationListMsg_Response::stationlist(int index) const {
  return stationlist_.Get(index);
}
inline ::com::spplus::buff::StationBean* StationListMsg_Response::mutable_stationlist(int index) {
  return stationlist_.Mutable(index);
}
inline ::com::spplus::buff::StationBean* StationListMsg_Response::add_stationlist() {
  return stationlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >&
StationListMsg_Response::stationlist() const {
  return stationlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >*
StationListMsg_Response::mutable_stationlist() {
  return &stationlist_;
}

// -------------------------------------------------------------------

// StationListMsg

// optional .com.spplus.buff.StationListMsg.Request request = 1;
inline bool StationListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::StationListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::StationListMsg_Request& StationListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::StationListMsg_Request* StationListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::StationListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::StationListMsg_Request* StationListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::StationListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void StationListMsg::set_allocated_request(::com::spplus::buff::StationListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.StationListMsg.Response response = 2;
inline bool StationListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StationListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StationListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StationListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::StationListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::StationListMsg_Response& StationListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::StationListMsg_Response* StationListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::StationListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::StationListMsg_Response* StationListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::StationListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void StationListMsg::set_allocated_response(::com::spplus::buff::StationListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace buff
}  // namespace spplus
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msgbody_2eproto__INCLUDED
