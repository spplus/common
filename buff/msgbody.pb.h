// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgbody.proto

#ifndef PROTOBUF_msgbody_2eproto__INCLUDED
#define PROTOBUF_msgbody_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "msgbean.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace spplus {
namespace buff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msgbody_2eproto();
void protobuf_AssignDesc_msgbody_2eproto();
void protobuf_ShutdownFile_msgbody_2eproto();

class UserLoginMsg;
class UserLoginMsg_Request;
class UserLoginMsg_Response;
class UserListMsg;
class UserListMsg_Request;
class UserListMsg_Response;
class UserRoleListMsg;
class UserRoleListMsg_Request;
class UserRoleListMsg_Response;
class UserMgrMsg;
class UserMgrMsg_Request;
class UserMgrMsg_Response;
class StationTypeMgrMsg;
class StationTypeMgrMsg_Request;
class StationTypeMgrMsg_Response;
class StationMgrMsg;
class StationMgrMsg_Request;
class StationMgrMsg_Response;
class RuleListMsg;
class RuleListMsg_Request;
class RuleListMsg_Response;
class RuleMgrMsg;
class RuleMgrMsg_Request;
class RuleMgrMsg_Response;
class StationRuleListMsg;
class StationRuleListMsg_Request;
class StationRuleListMsg_Response;
class StationRuleMgrMsg;
class StationRuleMgrMsg_Request;
class StationRuleMgrMsg_Response;
class CircleListMsg;
class CircleListMsg_Request;
class CircleListMsg_Response;
class SignListMsg;
class SignListMsg_Request;
class SignListMsg_Response;
class GswitchListMsg;
class GswitchListMsg_Request;
class GswitchListMsg_Response;
class MsetListMsg;
class MsetListMsg_Request;
class MsetListMsg_Response;
class EventListMsg;
class EventListMsg_Request;
class EventListMsg_Response;
class DevStateMsg;
class DevStateMsg_Request;
class DevStateMsg_Response;
class StationTypeMsg;
class StationTypeMsg_Request;
class StationTypeMsg_Response;
class StationListMsg;
class StationListMsg_Request;
class StationListMsg_Response;
class TagMsg;
class TagMsg_Request;
class TagMsg_Response;
class OprationMsg;
class OprationMsg_Request;
class OprationMsg_Response;
class PowerSetMsg;
class PowerSetMsg_Request;
class PowerSetMsg_Response;
class LineSetMsg;
class LineSetMsg_Request;
class LineSetMsg_Response;
class SavingListMsg;
class SavingListMsg_Request;
class SavingListMsg_Response;
class WriteSavingMsg;
class WriteSavingMsg_Request;
class WriteSavingMsg_Response;
class TicketMsionListMsg;
class TicketMsionListMsg_Request;
class TicketMsionListMsg_Response;
class TicketMgrMsg;
class TicketMgrMsg_Request;
class TicketMgrMsg_Response;
class TicketListMsg;
class TicketListMsg_Request;
class TicketListMsg_Response;

// ===================================================================

class UserLoginMsg_Request : public ::google::protobuf::Message {
 public:
  UserLoginMsg_Request();
  virtual ~UserLoginMsg_Request();

  UserLoginMsg_Request(const UserLoginMsg_Request& from);

  inline UserLoginMsg_Request& operator=(const UserLoginMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginMsg_Request& default_instance();

  void Swap(UserLoginMsg_Request* other);

  // implements Message ----------------------------------------------

  UserLoginMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLoginMsg_Request& from);
  void MergeFrom(const UserLoginMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes username = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const void* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional bytes userpwd = 2;
  inline bool has_userpwd() const;
  inline void clear_userpwd();
  static const int kUserpwdFieldNumber = 2;
  inline const ::std::string& userpwd() const;
  inline void set_userpwd(const ::std::string& value);
  inline void set_userpwd(const char* value);
  inline void set_userpwd(const void* value, size_t size);
  inline ::std::string* mutable_userpwd();
  inline ::std::string* release_userpwd();
  inline void set_allocated_userpwd(::std::string* userpwd);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserLoginMsg.Request)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_userpwd();
  inline void clear_has_userpwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* username_;
  ::std::string* userpwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserLoginMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class UserLoginMsg_Response : public ::google::protobuf::Message {
 public:
  UserLoginMsg_Response();
  virtual ~UserLoginMsg_Response();

  UserLoginMsg_Response(const UserLoginMsg_Response& from);

  inline UserLoginMsg_Response& operator=(const UserLoginMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginMsg_Response& default_instance();

  void Swap(UserLoginMsg_Response* other);

  // implements Message ----------------------------------------------

  UserLoginMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLoginMsg_Response& from);
  void MergeFrom(const UserLoginMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.UserBean userlist = 2;
  inline int userlist_size() const;
  inline void clear_userlist();
  static const int kUserlistFieldNumber = 2;
  inline const ::com::spplus::buff::UserBean& userlist(int index) const;
  inline ::com::spplus::buff::UserBean* mutable_userlist(int index);
  inline ::com::spplus::buff::UserBean* add_userlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >&
      userlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >*
      mutable_userlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserLoginMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean > userlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserLoginMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class UserLoginMsg : public ::google::protobuf::Message {
 public:
  UserLoginMsg();
  virtual ~UserLoginMsg();

  UserLoginMsg(const UserLoginMsg& from);

  inline UserLoginMsg& operator=(const UserLoginMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginMsg& default_instance();

  void Swap(UserLoginMsg* other);

  // implements Message ----------------------------------------------

  UserLoginMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLoginMsg& from);
  void MergeFrom(const UserLoginMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UserLoginMsg_Request Request;
  typedef UserLoginMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.UserLoginMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::UserLoginMsg_Request& request() const;
  inline ::com::spplus::buff::UserLoginMsg_Request* mutable_request();
  inline ::com::spplus::buff::UserLoginMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::UserLoginMsg_Request* request);

  // optional .com.spplus.buff.UserLoginMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::UserLoginMsg_Response& response() const;
  inline ::com::spplus::buff::UserLoginMsg_Response* mutable_response();
  inline ::com::spplus::buff::UserLoginMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::UserLoginMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserLoginMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::UserLoginMsg_Request* request_;
  ::com::spplus::buff::UserLoginMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserLoginMsg* default_instance_;
};
// -------------------------------------------------------------------

class UserListMsg_Request : public ::google::protobuf::Message {
 public:
  UserListMsg_Request();
  virtual ~UserListMsg_Request();

  UserListMsg_Request(const UserListMsg_Request& from);

  inline UserListMsg_Request& operator=(const UserListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserListMsg_Request& default_instance();

  void Swap(UserListMsg_Request* other);

  // implements Message ----------------------------------------------

  UserListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserListMsg_Request& from);
  void MergeFrom(const UserListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class UserListMsg_Response : public ::google::protobuf::Message {
 public:
  UserListMsg_Response();
  virtual ~UserListMsg_Response();

  UserListMsg_Response(const UserListMsg_Response& from);

  inline UserListMsg_Response& operator=(const UserListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserListMsg_Response& default_instance();

  void Swap(UserListMsg_Response* other);

  // implements Message ----------------------------------------------

  UserListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserListMsg_Response& from);
  void MergeFrom(const UserListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.UserBean userlist = 2;
  inline int userlist_size() const;
  inline void clear_userlist();
  static const int kUserlistFieldNumber = 2;
  inline const ::com::spplus::buff::UserBean& userlist(int index) const;
  inline ::com::spplus::buff::UserBean* mutable_userlist(int index);
  inline ::com::spplus::buff::UserBean* add_userlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >&
      userlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >*
      mutable_userlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean > userlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class UserListMsg : public ::google::protobuf::Message {
 public:
  UserListMsg();
  virtual ~UserListMsg();

  UserListMsg(const UserListMsg& from);

  inline UserListMsg& operator=(const UserListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserListMsg& default_instance();

  void Swap(UserListMsg* other);

  // implements Message ----------------------------------------------

  UserListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserListMsg& from);
  void MergeFrom(const UserListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UserListMsg_Request Request;
  typedef UserListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.UserListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::UserListMsg_Request& request() const;
  inline ::com::spplus::buff::UserListMsg_Request* mutable_request();
  inline ::com::spplus::buff::UserListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::UserListMsg_Request* request);

  // optional .com.spplus.buff.UserListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::UserListMsg_Response& response() const;
  inline ::com::spplus::buff::UserListMsg_Response* mutable_response();
  inline ::com::spplus::buff::UserListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::UserListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::UserListMsg_Request* request_;
  ::com::spplus::buff::UserListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserListMsg* default_instance_;
};
// -------------------------------------------------------------------

class UserRoleListMsg_Request : public ::google::protobuf::Message {
 public:
  UserRoleListMsg_Request();
  virtual ~UserRoleListMsg_Request();

  UserRoleListMsg_Request(const UserRoleListMsg_Request& from);

  inline UserRoleListMsg_Request& operator=(const UserRoleListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRoleListMsg_Request& default_instance();

  void Swap(UserRoleListMsg_Request* other);

  // implements Message ----------------------------------------------

  UserRoleListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserRoleListMsg_Request& from);
  void MergeFrom(const UserRoleListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserRoleListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserRoleListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class UserRoleListMsg_Response : public ::google::protobuf::Message {
 public:
  UserRoleListMsg_Response();
  virtual ~UserRoleListMsg_Response();

  UserRoleListMsg_Response(const UserRoleListMsg_Response& from);

  inline UserRoleListMsg_Response& operator=(const UserRoleListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRoleListMsg_Response& default_instance();

  void Swap(UserRoleListMsg_Response* other);

  // implements Message ----------------------------------------------

  UserRoleListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserRoleListMsg_Response& from);
  void MergeFrom(const UserRoleListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.UserRoleBean userrolelist = 2;
  inline int userrolelist_size() const;
  inline void clear_userrolelist();
  static const int kUserrolelistFieldNumber = 2;
  inline const ::com::spplus::buff::UserRoleBean& userrolelist(int index) const;
  inline ::com::spplus::buff::UserRoleBean* mutable_userrolelist(int index);
  inline ::com::spplus::buff::UserRoleBean* add_userrolelist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserRoleBean >&
      userrolelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserRoleBean >*
      mutable_userrolelist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserRoleListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserRoleBean > userrolelist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserRoleListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class UserRoleListMsg : public ::google::protobuf::Message {
 public:
  UserRoleListMsg();
  virtual ~UserRoleListMsg();

  UserRoleListMsg(const UserRoleListMsg& from);

  inline UserRoleListMsg& operator=(const UserRoleListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRoleListMsg& default_instance();

  void Swap(UserRoleListMsg* other);

  // implements Message ----------------------------------------------

  UserRoleListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserRoleListMsg& from);
  void MergeFrom(const UserRoleListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UserRoleListMsg_Request Request;
  typedef UserRoleListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.UserRoleListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::UserRoleListMsg_Request& request() const;
  inline ::com::spplus::buff::UserRoleListMsg_Request* mutable_request();
  inline ::com::spplus::buff::UserRoleListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::UserRoleListMsg_Request* request);

  // optional .com.spplus.buff.UserRoleListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::UserRoleListMsg_Response& response() const;
  inline ::com::spplus::buff::UserRoleListMsg_Response* mutable_response();
  inline ::com::spplus::buff::UserRoleListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::UserRoleListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserRoleListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::UserRoleListMsg_Request* request_;
  ::com::spplus::buff::UserRoleListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserRoleListMsg* default_instance_;
};
// -------------------------------------------------------------------

class UserMgrMsg_Request : public ::google::protobuf::Message {
 public:
  UserMgrMsg_Request();
  virtual ~UserMgrMsg_Request();

  UserMgrMsg_Request(const UserMgrMsg_Request& from);

  inline UserMgrMsg_Request& operator=(const UserMgrMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMgrMsg_Request& default_instance();

  void Swap(UserMgrMsg_Request* other);

  // implements Message ----------------------------------------------

  UserMgrMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMgrMsg_Request& from);
  void MergeFrom(const UserMgrMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes mgrsql = 1;
  inline bool has_mgrsql() const;
  inline void clear_mgrsql();
  static const int kMgrsqlFieldNumber = 1;
  inline const ::std::string& mgrsql() const;
  inline void set_mgrsql(const ::std::string& value);
  inline void set_mgrsql(const char* value);
  inline void set_mgrsql(const void* value, size_t size);
  inline ::std::string* mutable_mgrsql();
  inline ::std::string* release_mgrsql();
  inline void set_allocated_mgrsql(::std::string* mgrsql);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserMgrMsg.Request)
 private:
  inline void set_has_mgrsql();
  inline void clear_has_mgrsql();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* mgrsql_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserMgrMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class UserMgrMsg_Response : public ::google::protobuf::Message {
 public:
  UserMgrMsg_Response();
  virtual ~UserMgrMsg_Response();

  UserMgrMsg_Response(const UserMgrMsg_Response& from);

  inline UserMgrMsg_Response& operator=(const UserMgrMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMgrMsg_Response& default_instance();

  void Swap(UserMgrMsg_Response* other);

  // implements Message ----------------------------------------------

  UserMgrMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMgrMsg_Response& from);
  void MergeFrom(const UserMgrMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserMgrMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserMgrMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class UserMgrMsg : public ::google::protobuf::Message {
 public:
  UserMgrMsg();
  virtual ~UserMgrMsg();

  UserMgrMsg(const UserMgrMsg& from);

  inline UserMgrMsg& operator=(const UserMgrMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMgrMsg& default_instance();

  void Swap(UserMgrMsg* other);

  // implements Message ----------------------------------------------

  UserMgrMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMgrMsg& from);
  void MergeFrom(const UserMgrMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UserMgrMsg_Request Request;
  typedef UserMgrMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.UserMgrMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::UserMgrMsg_Request& request() const;
  inline ::com::spplus::buff::UserMgrMsg_Request* mutable_request();
  inline ::com::spplus::buff::UserMgrMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::UserMgrMsg_Request* request);

  // optional .com.spplus.buff.UserMgrMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::UserMgrMsg_Response& response() const;
  inline ::com::spplus::buff::UserMgrMsg_Response* mutable_response();
  inline ::com::spplus::buff::UserMgrMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::UserMgrMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserMgrMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::UserMgrMsg_Request* request_;
  ::com::spplus::buff::UserMgrMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserMgrMsg* default_instance_;
};
// -------------------------------------------------------------------

class StationTypeMgrMsg_Request : public ::google::protobuf::Message {
 public:
  StationTypeMgrMsg_Request();
  virtual ~StationTypeMgrMsg_Request();

  StationTypeMgrMsg_Request(const StationTypeMgrMsg_Request& from);

  inline StationTypeMgrMsg_Request& operator=(const StationTypeMgrMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationTypeMgrMsg_Request& default_instance();

  void Swap(StationTypeMgrMsg_Request* other);

  // implements Message ----------------------------------------------

  StationTypeMgrMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationTypeMgrMsg_Request& from);
  void MergeFrom(const StationTypeMgrMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes mgrsql = 1;
  inline bool has_mgrsql() const;
  inline void clear_mgrsql();
  static const int kMgrsqlFieldNumber = 1;
  inline const ::std::string& mgrsql() const;
  inline void set_mgrsql(const ::std::string& value);
  inline void set_mgrsql(const char* value);
  inline void set_mgrsql(const void* value, size_t size);
  inline ::std::string* mutable_mgrsql();
  inline ::std::string* release_mgrsql();
  inline void set_allocated_mgrsql(::std::string* mgrsql);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationTypeMgrMsg.Request)
 private:
  inline void set_has_mgrsql();
  inline void clear_has_mgrsql();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* mgrsql_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationTypeMgrMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class StationTypeMgrMsg_Response : public ::google::protobuf::Message {
 public:
  StationTypeMgrMsg_Response();
  virtual ~StationTypeMgrMsg_Response();

  StationTypeMgrMsg_Response(const StationTypeMgrMsg_Response& from);

  inline StationTypeMgrMsg_Response& operator=(const StationTypeMgrMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationTypeMgrMsg_Response& default_instance();

  void Swap(StationTypeMgrMsg_Response* other);

  // implements Message ----------------------------------------------

  StationTypeMgrMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationTypeMgrMsg_Response& from);
  void MergeFrom(const StationTypeMgrMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationTypeMgrMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationTypeMgrMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class StationTypeMgrMsg : public ::google::protobuf::Message {
 public:
  StationTypeMgrMsg();
  virtual ~StationTypeMgrMsg();

  StationTypeMgrMsg(const StationTypeMgrMsg& from);

  inline StationTypeMgrMsg& operator=(const StationTypeMgrMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationTypeMgrMsg& default_instance();

  void Swap(StationTypeMgrMsg* other);

  // implements Message ----------------------------------------------

  StationTypeMgrMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationTypeMgrMsg& from);
  void MergeFrom(const StationTypeMgrMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StationTypeMgrMsg_Request Request;
  typedef StationTypeMgrMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.StationTypeMgrMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::StationTypeMgrMsg_Request& request() const;
  inline ::com::spplus::buff::StationTypeMgrMsg_Request* mutable_request();
  inline ::com::spplus::buff::StationTypeMgrMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::StationTypeMgrMsg_Request* request);

  // optional .com.spplus.buff.StationTypeMgrMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::StationTypeMgrMsg_Response& response() const;
  inline ::com::spplus::buff::StationTypeMgrMsg_Response* mutable_response();
  inline ::com::spplus::buff::StationTypeMgrMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::StationTypeMgrMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationTypeMgrMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::StationTypeMgrMsg_Request* request_;
  ::com::spplus::buff::StationTypeMgrMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationTypeMgrMsg* default_instance_;
};
// -------------------------------------------------------------------

class StationMgrMsg_Request : public ::google::protobuf::Message {
 public:
  StationMgrMsg_Request();
  virtual ~StationMgrMsg_Request();

  StationMgrMsg_Request(const StationMgrMsg_Request& from);

  inline StationMgrMsg_Request& operator=(const StationMgrMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationMgrMsg_Request& default_instance();

  void Swap(StationMgrMsg_Request* other);

  // implements Message ----------------------------------------------

  StationMgrMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationMgrMsg_Request& from);
  void MergeFrom(const StationMgrMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // repeated .com.spplus.buff.StationBean stationlist = 2;
  inline int stationlist_size() const;
  inline void clear_stationlist();
  static const int kStationlistFieldNumber = 2;
  inline const ::com::spplus::buff::StationBean& stationlist(int index) const;
  inline ::com::spplus::buff::StationBean* mutable_stationlist(int index);
  inline ::com::spplus::buff::StationBean* add_stationlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >&
      stationlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >*
      mutable_stationlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationMgrMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;
  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean > stationlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationMgrMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class StationMgrMsg_Response : public ::google::protobuf::Message {
 public:
  StationMgrMsg_Response();
  virtual ~StationMgrMsg_Response();

  StationMgrMsg_Response(const StationMgrMsg_Response& from);

  inline StationMgrMsg_Response& operator=(const StationMgrMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationMgrMsg_Response& default_instance();

  void Swap(StationMgrMsg_Response* other);

  // implements Message ----------------------------------------------

  StationMgrMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationMgrMsg_Response& from);
  void MergeFrom(const StationMgrMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationMgrMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationMgrMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class StationMgrMsg : public ::google::protobuf::Message {
 public:
  StationMgrMsg();
  virtual ~StationMgrMsg();

  StationMgrMsg(const StationMgrMsg& from);

  inline StationMgrMsg& operator=(const StationMgrMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationMgrMsg& default_instance();

  void Swap(StationMgrMsg* other);

  // implements Message ----------------------------------------------

  StationMgrMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationMgrMsg& from);
  void MergeFrom(const StationMgrMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StationMgrMsg_Request Request;
  typedef StationMgrMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.StationMgrMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::StationMgrMsg_Request& request() const;
  inline ::com::spplus::buff::StationMgrMsg_Request* mutable_request();
  inline ::com::spplus::buff::StationMgrMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::StationMgrMsg_Request* request);

  // optional .com.spplus.buff.StationMgrMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::StationMgrMsg_Response& response() const;
  inline ::com::spplus::buff::StationMgrMsg_Response* mutable_response();
  inline ::com::spplus::buff::StationMgrMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::StationMgrMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationMgrMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::StationMgrMsg_Request* request_;
  ::com::spplus::buff::StationMgrMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationMgrMsg* default_instance_;
};
// -------------------------------------------------------------------

class RuleListMsg_Request : public ::google::protobuf::Message {
 public:
  RuleListMsg_Request();
  virtual ~RuleListMsg_Request();

  RuleListMsg_Request(const RuleListMsg_Request& from);

  inline RuleListMsg_Request& operator=(const RuleListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RuleListMsg_Request& default_instance();

  void Swap(RuleListMsg_Request* other);

  // implements Message ----------------------------------------------

  RuleListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RuleListMsg_Request& from);
  void MergeFrom(const RuleListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.RuleListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static RuleListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class RuleListMsg_Response : public ::google::protobuf::Message {
 public:
  RuleListMsg_Response();
  virtual ~RuleListMsg_Response();

  RuleListMsg_Response(const RuleListMsg_Response& from);

  inline RuleListMsg_Response& operator=(const RuleListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RuleListMsg_Response& default_instance();

  void Swap(RuleListMsg_Response* other);

  // implements Message ----------------------------------------------

  RuleListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RuleListMsg_Response& from);
  void MergeFrom(const RuleListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.RuleBean rulelist = 2;
  inline int rulelist_size() const;
  inline void clear_rulelist();
  static const int kRulelistFieldNumber = 2;
  inline const ::com::spplus::buff::RuleBean& rulelist(int index) const;
  inline ::com::spplus::buff::RuleBean* mutable_rulelist(int index);
  inline ::com::spplus::buff::RuleBean* add_rulelist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::RuleBean >&
      rulelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::RuleBean >*
      mutable_rulelist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.RuleListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::RuleBean > rulelist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static RuleListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class RuleListMsg : public ::google::protobuf::Message {
 public:
  RuleListMsg();
  virtual ~RuleListMsg();

  RuleListMsg(const RuleListMsg& from);

  inline RuleListMsg& operator=(const RuleListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RuleListMsg& default_instance();

  void Swap(RuleListMsg* other);

  // implements Message ----------------------------------------------

  RuleListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RuleListMsg& from);
  void MergeFrom(const RuleListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RuleListMsg_Request Request;
  typedef RuleListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.RuleListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::RuleListMsg_Request& request() const;
  inline ::com::spplus::buff::RuleListMsg_Request* mutable_request();
  inline ::com::spplus::buff::RuleListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::RuleListMsg_Request* request);

  // optional .com.spplus.buff.RuleListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::RuleListMsg_Response& response() const;
  inline ::com::spplus::buff::RuleListMsg_Response* mutable_response();
  inline ::com::spplus::buff::RuleListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::RuleListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.RuleListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::RuleListMsg_Request* request_;
  ::com::spplus::buff::RuleListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static RuleListMsg* default_instance_;
};
// -------------------------------------------------------------------

class RuleMgrMsg_Request : public ::google::protobuf::Message {
 public:
  RuleMgrMsg_Request();
  virtual ~RuleMgrMsg_Request();

  RuleMgrMsg_Request(const RuleMgrMsg_Request& from);

  inline RuleMgrMsg_Request& operator=(const RuleMgrMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RuleMgrMsg_Request& default_instance();

  void Swap(RuleMgrMsg_Request* other);

  // implements Message ----------------------------------------------

  RuleMgrMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RuleMgrMsg_Request& from);
  void MergeFrom(const RuleMgrMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes mgrsql = 1;
  inline bool has_mgrsql() const;
  inline void clear_mgrsql();
  static const int kMgrsqlFieldNumber = 1;
  inline const ::std::string& mgrsql() const;
  inline void set_mgrsql(const ::std::string& value);
  inline void set_mgrsql(const char* value);
  inline void set_mgrsql(const void* value, size_t size);
  inline ::std::string* mutable_mgrsql();
  inline ::std::string* release_mgrsql();
  inline void set_allocated_mgrsql(::std::string* mgrsql);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.RuleMgrMsg.Request)
 private:
  inline void set_has_mgrsql();
  inline void clear_has_mgrsql();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* mgrsql_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static RuleMgrMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class RuleMgrMsg_Response : public ::google::protobuf::Message {
 public:
  RuleMgrMsg_Response();
  virtual ~RuleMgrMsg_Response();

  RuleMgrMsg_Response(const RuleMgrMsg_Response& from);

  inline RuleMgrMsg_Response& operator=(const RuleMgrMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RuleMgrMsg_Response& default_instance();

  void Swap(RuleMgrMsg_Response* other);

  // implements Message ----------------------------------------------

  RuleMgrMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RuleMgrMsg_Response& from);
  void MergeFrom(const RuleMgrMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.RuleMgrMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static RuleMgrMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class RuleMgrMsg : public ::google::protobuf::Message {
 public:
  RuleMgrMsg();
  virtual ~RuleMgrMsg();

  RuleMgrMsg(const RuleMgrMsg& from);

  inline RuleMgrMsg& operator=(const RuleMgrMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RuleMgrMsg& default_instance();

  void Swap(RuleMgrMsg* other);

  // implements Message ----------------------------------------------

  RuleMgrMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RuleMgrMsg& from);
  void MergeFrom(const RuleMgrMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RuleMgrMsg_Request Request;
  typedef RuleMgrMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.RuleMgrMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::RuleMgrMsg_Request& request() const;
  inline ::com::spplus::buff::RuleMgrMsg_Request* mutable_request();
  inline ::com::spplus::buff::RuleMgrMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::RuleMgrMsg_Request* request);

  // optional .com.spplus.buff.RuleMgrMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::RuleMgrMsg_Response& response() const;
  inline ::com::spplus::buff::RuleMgrMsg_Response* mutable_response();
  inline ::com::spplus::buff::RuleMgrMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::RuleMgrMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.RuleMgrMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::RuleMgrMsg_Request* request_;
  ::com::spplus::buff::RuleMgrMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static RuleMgrMsg* default_instance_;
};
// -------------------------------------------------------------------

class StationRuleListMsg_Request : public ::google::protobuf::Message {
 public:
  StationRuleListMsg_Request();
  virtual ~StationRuleListMsg_Request();

  StationRuleListMsg_Request(const StationRuleListMsg_Request& from);

  inline StationRuleListMsg_Request& operator=(const StationRuleListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationRuleListMsg_Request& default_instance();

  void Swap(StationRuleListMsg_Request* other);

  // implements Message ----------------------------------------------

  StationRuleListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationRuleListMsg_Request& from);
  void MergeFrom(const StationRuleListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationRuleListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationRuleListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class StationRuleListMsg_Response : public ::google::protobuf::Message {
 public:
  StationRuleListMsg_Response();
  virtual ~StationRuleListMsg_Response();

  StationRuleListMsg_Response(const StationRuleListMsg_Response& from);

  inline StationRuleListMsg_Response& operator=(const StationRuleListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationRuleListMsg_Response& default_instance();

  void Swap(StationRuleListMsg_Response* other);

  // implements Message ----------------------------------------------

  StationRuleListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationRuleListMsg_Response& from);
  void MergeFrom(const StationRuleListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.StationRuleBean starulelist = 2;
  inline int starulelist_size() const;
  inline void clear_starulelist();
  static const int kStarulelistFieldNumber = 2;
  inline const ::com::spplus::buff::StationRuleBean& starulelist(int index) const;
  inline ::com::spplus::buff::StationRuleBean* mutable_starulelist(int index);
  inline ::com::spplus::buff::StationRuleBean* add_starulelist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationRuleBean >&
      starulelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationRuleBean >*
      mutable_starulelist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationRuleListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationRuleBean > starulelist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationRuleListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class StationRuleListMsg : public ::google::protobuf::Message {
 public:
  StationRuleListMsg();
  virtual ~StationRuleListMsg();

  StationRuleListMsg(const StationRuleListMsg& from);

  inline StationRuleListMsg& operator=(const StationRuleListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationRuleListMsg& default_instance();

  void Swap(StationRuleListMsg* other);

  // implements Message ----------------------------------------------

  StationRuleListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationRuleListMsg& from);
  void MergeFrom(const StationRuleListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StationRuleListMsg_Request Request;
  typedef StationRuleListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.StationRuleListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::StationRuleListMsg_Request& request() const;
  inline ::com::spplus::buff::StationRuleListMsg_Request* mutable_request();
  inline ::com::spplus::buff::StationRuleListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::StationRuleListMsg_Request* request);

  // optional .com.spplus.buff.StationRuleListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::StationRuleListMsg_Response& response() const;
  inline ::com::spplus::buff::StationRuleListMsg_Response* mutable_response();
  inline ::com::spplus::buff::StationRuleListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::StationRuleListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationRuleListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::StationRuleListMsg_Request* request_;
  ::com::spplus::buff::StationRuleListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationRuleListMsg* default_instance_;
};
// -------------------------------------------------------------------

class StationRuleMgrMsg_Request : public ::google::protobuf::Message {
 public:
  StationRuleMgrMsg_Request();
  virtual ~StationRuleMgrMsg_Request();

  StationRuleMgrMsg_Request(const StationRuleMgrMsg_Request& from);

  inline StationRuleMgrMsg_Request& operator=(const StationRuleMgrMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationRuleMgrMsg_Request& default_instance();

  void Swap(StationRuleMgrMsg_Request* other);

  // implements Message ----------------------------------------------

  StationRuleMgrMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationRuleMgrMsg_Request& from);
  void MergeFrom(const StationRuleMgrMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reqtype = 1;
  inline bool has_reqtype() const;
  inline void clear_reqtype();
  static const int kReqtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 reqtype() const;
  inline void set_reqtype(::google::protobuf::uint32 value);

  // optional bytes mgrsql = 2;
  inline bool has_mgrsql() const;
  inline void clear_mgrsql();
  static const int kMgrsqlFieldNumber = 2;
  inline const ::std::string& mgrsql() const;
  inline void set_mgrsql(const ::std::string& value);
  inline void set_mgrsql(const char* value);
  inline void set_mgrsql(const void* value, size_t size);
  inline ::std::string* mutable_mgrsql();
  inline ::std::string* release_mgrsql();
  inline void set_allocated_mgrsql(::std::string* mgrsql);

  // repeated .com.spplus.buff.StationRuleBean stationrllist = 3;
  inline int stationrllist_size() const;
  inline void clear_stationrllist();
  static const int kStationrllistFieldNumber = 3;
  inline const ::com::spplus::buff::StationRuleBean& stationrllist(int index) const;
  inline ::com::spplus::buff::StationRuleBean* mutable_stationrllist(int index);
  inline ::com::spplus::buff::StationRuleBean* add_stationrllist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationRuleBean >&
      stationrllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationRuleBean >*
      mutable_stationrllist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationRuleMgrMsg.Request)
 private:
  inline void set_has_reqtype();
  inline void clear_has_reqtype();
  inline void set_has_mgrsql();
  inline void clear_has_mgrsql();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* mgrsql_;
  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationRuleBean > stationrllist_;
  ::google::protobuf::uint32 reqtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationRuleMgrMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class StationRuleMgrMsg_Response : public ::google::protobuf::Message {
 public:
  StationRuleMgrMsg_Response();
  virtual ~StationRuleMgrMsg_Response();

  StationRuleMgrMsg_Response(const StationRuleMgrMsg_Response& from);

  inline StationRuleMgrMsg_Response& operator=(const StationRuleMgrMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationRuleMgrMsg_Response& default_instance();

  void Swap(StationRuleMgrMsg_Response* other);

  // implements Message ----------------------------------------------

  StationRuleMgrMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationRuleMgrMsg_Response& from);
  void MergeFrom(const StationRuleMgrMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationRuleMgrMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationRuleMgrMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class StationRuleMgrMsg : public ::google::protobuf::Message {
 public:
  StationRuleMgrMsg();
  virtual ~StationRuleMgrMsg();

  StationRuleMgrMsg(const StationRuleMgrMsg& from);

  inline StationRuleMgrMsg& operator=(const StationRuleMgrMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationRuleMgrMsg& default_instance();

  void Swap(StationRuleMgrMsg* other);

  // implements Message ----------------------------------------------

  StationRuleMgrMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationRuleMgrMsg& from);
  void MergeFrom(const StationRuleMgrMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StationRuleMgrMsg_Request Request;
  typedef StationRuleMgrMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.StationRuleMgrMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::StationRuleMgrMsg_Request& request() const;
  inline ::com::spplus::buff::StationRuleMgrMsg_Request* mutable_request();
  inline ::com::spplus::buff::StationRuleMgrMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::StationRuleMgrMsg_Request* request);

  // optional .com.spplus.buff.StationRuleMgrMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::StationRuleMgrMsg_Response& response() const;
  inline ::com::spplus::buff::StationRuleMgrMsg_Response* mutable_response();
  inline ::com::spplus::buff::StationRuleMgrMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::StationRuleMgrMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationRuleMgrMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::StationRuleMgrMsg_Request* request_;
  ::com::spplus::buff::StationRuleMgrMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationRuleMgrMsg* default_instance_;
};
// -------------------------------------------------------------------

class CircleListMsg_Request : public ::google::protobuf::Message {
 public:
  CircleListMsg_Request();
  virtual ~CircleListMsg_Request();

  CircleListMsg_Request(const CircleListMsg_Request& from);

  inline CircleListMsg_Request& operator=(const CircleListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CircleListMsg_Request& default_instance();

  void Swap(CircleListMsg_Request* other);

  // implements Message ----------------------------------------------

  CircleListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CircleListMsg_Request& from);
  void MergeFrom(const CircleListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 saveId = 1;
  inline bool has_saveid() const;
  inline void clear_saveid();
  static const int kSaveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 saveid() const;
  inline void set_saveid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.CircleListMsg.Request)
 private:
  inline void set_has_saveid();
  inline void clear_has_saveid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 saveid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static CircleListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class CircleListMsg_Response : public ::google::protobuf::Message {
 public:
  CircleListMsg_Response();
  virtual ~CircleListMsg_Response();

  CircleListMsg_Response(const CircleListMsg_Response& from);

  inline CircleListMsg_Response& operator=(const CircleListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CircleListMsg_Response& default_instance();

  void Swap(CircleListMsg_Response* other);

  // implements Message ----------------------------------------------

  CircleListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CircleListMsg_Response& from);
  void MergeFrom(const CircleListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.CircleQueryBean circlelist = 2;
  inline int circlelist_size() const;
  inline void clear_circlelist();
  static const int kCirclelistFieldNumber = 2;
  inline const ::com::spplus::buff::CircleQueryBean& circlelist(int index) const;
  inline ::com::spplus::buff::CircleQueryBean* mutable_circlelist(int index);
  inline ::com::spplus::buff::CircleQueryBean* add_circlelist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::CircleQueryBean >&
      circlelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::CircleQueryBean >*
      mutable_circlelist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.CircleListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::CircleQueryBean > circlelist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static CircleListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class CircleListMsg : public ::google::protobuf::Message {
 public:
  CircleListMsg();
  virtual ~CircleListMsg();

  CircleListMsg(const CircleListMsg& from);

  inline CircleListMsg& operator=(const CircleListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CircleListMsg& default_instance();

  void Swap(CircleListMsg* other);

  // implements Message ----------------------------------------------

  CircleListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CircleListMsg& from);
  void MergeFrom(const CircleListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CircleListMsg_Request Request;
  typedef CircleListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.CircleListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::CircleListMsg_Request& request() const;
  inline ::com::spplus::buff::CircleListMsg_Request* mutable_request();
  inline ::com::spplus::buff::CircleListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::CircleListMsg_Request* request);

  // optional .com.spplus.buff.CircleListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::CircleListMsg_Response& response() const;
  inline ::com::spplus::buff::CircleListMsg_Response* mutable_response();
  inline ::com::spplus::buff::CircleListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::CircleListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.CircleListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::CircleListMsg_Request* request_;
  ::com::spplus::buff::CircleListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static CircleListMsg* default_instance_;
};
// -------------------------------------------------------------------

class SignListMsg_Request : public ::google::protobuf::Message {
 public:
  SignListMsg_Request();
  virtual ~SignListMsg_Request();

  SignListMsg_Request(const SignListMsg_Request& from);

  inline SignListMsg_Request& operator=(const SignListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignListMsg_Request& default_instance();

  void Swap(SignListMsg_Request* other);

  // implements Message ----------------------------------------------

  SignListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignListMsg_Request& from);
  void MergeFrom(const SignListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.SignListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static SignListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class SignListMsg_Response : public ::google::protobuf::Message {
 public:
  SignListMsg_Response();
  virtual ~SignListMsg_Response();

  SignListMsg_Response(const SignListMsg_Response& from);

  inline SignListMsg_Response& operator=(const SignListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignListMsg_Response& default_instance();

  void Swap(SignListMsg_Response* other);

  // implements Message ----------------------------------------------

  SignListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignListMsg_Response& from);
  void MergeFrom(const SignListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.SignQueryBean signlist = 2;
  inline int signlist_size() const;
  inline void clear_signlist();
  static const int kSignlistFieldNumber = 2;
  inline const ::com::spplus::buff::SignQueryBean& signlist(int index) const;
  inline ::com::spplus::buff::SignQueryBean* mutable_signlist(int index);
  inline ::com::spplus::buff::SignQueryBean* add_signlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::SignQueryBean >&
      signlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::SignQueryBean >*
      mutable_signlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.SignListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::SignQueryBean > signlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static SignListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class SignListMsg : public ::google::protobuf::Message {
 public:
  SignListMsg();
  virtual ~SignListMsg();

  SignListMsg(const SignListMsg& from);

  inline SignListMsg& operator=(const SignListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignListMsg& default_instance();

  void Swap(SignListMsg* other);

  // implements Message ----------------------------------------------

  SignListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignListMsg& from);
  void MergeFrom(const SignListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SignListMsg_Request Request;
  typedef SignListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.SignListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::SignListMsg_Request& request() const;
  inline ::com::spplus::buff::SignListMsg_Request* mutable_request();
  inline ::com::spplus::buff::SignListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::SignListMsg_Request* request);

  // optional .com.spplus.buff.SignListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::SignListMsg_Response& response() const;
  inline ::com::spplus::buff::SignListMsg_Response* mutable_response();
  inline ::com::spplus::buff::SignListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::SignListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.SignListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::SignListMsg_Request* request_;
  ::com::spplus::buff::SignListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static SignListMsg* default_instance_;
};
// -------------------------------------------------------------------

class GswitchListMsg_Request : public ::google::protobuf::Message {
 public:
  GswitchListMsg_Request();
  virtual ~GswitchListMsg_Request();

  GswitchListMsg_Request(const GswitchListMsg_Request& from);

  inline GswitchListMsg_Request& operator=(const GswitchListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GswitchListMsg_Request& default_instance();

  void Swap(GswitchListMsg_Request* other);

  // implements Message ----------------------------------------------

  GswitchListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GswitchListMsg_Request& from);
  void MergeFrom(const GswitchListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.GswitchListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static GswitchListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class GswitchListMsg_Response : public ::google::protobuf::Message {
 public:
  GswitchListMsg_Response();
  virtual ~GswitchListMsg_Response();

  GswitchListMsg_Response(const GswitchListMsg_Response& from);

  inline GswitchListMsg_Response& operator=(const GswitchListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GswitchListMsg_Response& default_instance();

  void Swap(GswitchListMsg_Response* other);

  // implements Message ----------------------------------------------

  GswitchListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GswitchListMsg_Response& from);
  void MergeFrom(const GswitchListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.GswitchQueryBean gswitchlist = 2;
  inline int gswitchlist_size() const;
  inline void clear_gswitchlist();
  static const int kGswitchlistFieldNumber = 2;
  inline const ::com::spplus::buff::GswitchQueryBean& gswitchlist(int index) const;
  inline ::com::spplus::buff::GswitchQueryBean* mutable_gswitchlist(int index);
  inline ::com::spplus::buff::GswitchQueryBean* add_gswitchlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::GswitchQueryBean >&
      gswitchlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::GswitchQueryBean >*
      mutable_gswitchlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.GswitchListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::GswitchQueryBean > gswitchlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static GswitchListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class GswitchListMsg : public ::google::protobuf::Message {
 public:
  GswitchListMsg();
  virtual ~GswitchListMsg();

  GswitchListMsg(const GswitchListMsg& from);

  inline GswitchListMsg& operator=(const GswitchListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GswitchListMsg& default_instance();

  void Swap(GswitchListMsg* other);

  // implements Message ----------------------------------------------

  GswitchListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GswitchListMsg& from);
  void MergeFrom(const GswitchListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GswitchListMsg_Request Request;
  typedef GswitchListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.GswitchListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::GswitchListMsg_Request& request() const;
  inline ::com::spplus::buff::GswitchListMsg_Request* mutable_request();
  inline ::com::spplus::buff::GswitchListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::GswitchListMsg_Request* request);

  // optional .com.spplus.buff.GswitchListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::GswitchListMsg_Response& response() const;
  inline ::com::spplus::buff::GswitchListMsg_Response* mutable_response();
  inline ::com::spplus::buff::GswitchListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::GswitchListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.GswitchListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::GswitchListMsg_Request* request_;
  ::com::spplus::buff::GswitchListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static GswitchListMsg* default_instance_;
};
// -------------------------------------------------------------------

class MsetListMsg_Request : public ::google::protobuf::Message {
 public:
  MsetListMsg_Request();
  virtual ~MsetListMsg_Request();

  MsetListMsg_Request(const MsetListMsg_Request& from);

  inline MsetListMsg_Request& operator=(const MsetListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsetListMsg_Request& default_instance();

  void Swap(MsetListMsg_Request* other);

  // implements Message ----------------------------------------------

  MsetListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsetListMsg_Request& from);
  void MergeFrom(const MsetListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.MsetListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static MsetListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class MsetListMsg_Response : public ::google::protobuf::Message {
 public:
  MsetListMsg_Response();
  virtual ~MsetListMsg_Response();

  MsetListMsg_Response(const MsetListMsg_Response& from);

  inline MsetListMsg_Response& operator=(const MsetListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsetListMsg_Response& default_instance();

  void Swap(MsetListMsg_Response* other);

  // implements Message ----------------------------------------------

  MsetListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsetListMsg_Response& from);
  void MergeFrom(const MsetListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.MsetQueryBean msetlist = 2;
  inline int msetlist_size() const;
  inline void clear_msetlist();
  static const int kMsetlistFieldNumber = 2;
  inline const ::com::spplus::buff::MsetQueryBean& msetlist(int index) const;
  inline ::com::spplus::buff::MsetQueryBean* mutable_msetlist(int index);
  inline ::com::spplus::buff::MsetQueryBean* add_msetlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::MsetQueryBean >&
      msetlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::MsetQueryBean >*
      mutable_msetlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.MsetListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::MsetQueryBean > msetlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static MsetListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class MsetListMsg : public ::google::protobuf::Message {
 public:
  MsetListMsg();
  virtual ~MsetListMsg();

  MsetListMsg(const MsetListMsg& from);

  inline MsetListMsg& operator=(const MsetListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsetListMsg& default_instance();

  void Swap(MsetListMsg* other);

  // implements Message ----------------------------------------------

  MsetListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsetListMsg& from);
  void MergeFrom(const MsetListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsetListMsg_Request Request;
  typedef MsetListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.MsetListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::MsetListMsg_Request& request() const;
  inline ::com::spplus::buff::MsetListMsg_Request* mutable_request();
  inline ::com::spplus::buff::MsetListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::MsetListMsg_Request* request);

  // optional .com.spplus.buff.MsetListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::MsetListMsg_Response& response() const;
  inline ::com::spplus::buff::MsetListMsg_Response* mutable_response();
  inline ::com::spplus::buff::MsetListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::MsetListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.MsetListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::MsetListMsg_Request* request_;
  ::com::spplus::buff::MsetListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static MsetListMsg* default_instance_;
};
// -------------------------------------------------------------------

class EventListMsg_Request : public ::google::protobuf::Message {
 public:
  EventListMsg_Request();
  virtual ~EventListMsg_Request();

  EventListMsg_Request(const EventListMsg_Request& from);

  inline EventListMsg_Request& operator=(const EventListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventListMsg_Request& default_instance();

  void Swap(EventListMsg_Request* other);

  // implements Message ----------------------------------------------

  EventListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventListMsg_Request& from);
  void MergeFrom(const EventListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.EventListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static EventListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class EventListMsg_Response : public ::google::protobuf::Message {
 public:
  EventListMsg_Response();
  virtual ~EventListMsg_Response();

  EventListMsg_Response(const EventListMsg_Response& from);

  inline EventListMsg_Response& operator=(const EventListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventListMsg_Response& default_instance();

  void Swap(EventListMsg_Response* other);

  // implements Message ----------------------------------------------

  EventListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventListMsg_Response& from);
  void MergeFrom(const EventListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.EventQueryBean eventlist = 2;
  inline int eventlist_size() const;
  inline void clear_eventlist();
  static const int kEventlistFieldNumber = 2;
  inline const ::com::spplus::buff::EventQueryBean& eventlist(int index) const;
  inline ::com::spplus::buff::EventQueryBean* mutable_eventlist(int index);
  inline ::com::spplus::buff::EventQueryBean* add_eventlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::EventQueryBean >&
      eventlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::EventQueryBean >*
      mutable_eventlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.EventListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::EventQueryBean > eventlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static EventListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class EventListMsg : public ::google::protobuf::Message {
 public:
  EventListMsg();
  virtual ~EventListMsg();

  EventListMsg(const EventListMsg& from);

  inline EventListMsg& operator=(const EventListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventListMsg& default_instance();

  void Swap(EventListMsg* other);

  // implements Message ----------------------------------------------

  EventListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventListMsg& from);
  void MergeFrom(const EventListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EventListMsg_Request Request;
  typedef EventListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.EventListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::EventListMsg_Request& request() const;
  inline ::com::spplus::buff::EventListMsg_Request* mutable_request();
  inline ::com::spplus::buff::EventListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::EventListMsg_Request* request);

  // optional .com.spplus.buff.EventListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::EventListMsg_Response& response() const;
  inline ::com::spplus::buff::EventListMsg_Response* mutable_response();
  inline ::com::spplus::buff::EventListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::EventListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.EventListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::EventListMsg_Request* request_;
  ::com::spplus::buff::EventListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static EventListMsg* default_instance_;
};
// -------------------------------------------------------------------

class DevStateMsg_Request : public ::google::protobuf::Message {
 public:
  DevStateMsg_Request();
  virtual ~DevStateMsg_Request();

  DevStateMsg_Request(const DevStateMsg_Request& from);

  inline DevStateMsg_Request& operator=(const DevStateMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DevStateMsg_Request& default_instance();

  void Swap(DevStateMsg_Request* other);

  // implements Message ----------------------------------------------

  DevStateMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DevStateMsg_Request& from);
  void MergeFrom(const DevStateMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 saveId = 1;
  inline bool has_saveid() const;
  inline void clear_saveid();
  static const int kSaveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 saveid() const;
  inline void set_saveid(::google::protobuf::uint32 value);

  // optional bytes stationCim = 2;
  inline bool has_stationcim() const;
  inline void clear_stationcim();
  static const int kStationCimFieldNumber = 2;
  inline const ::std::string& stationcim() const;
  inline void set_stationcim(const ::std::string& value);
  inline void set_stationcim(const char* value);
  inline void set_stationcim(const void* value, size_t size);
  inline ::std::string* mutable_stationcim();
  inline ::std::string* release_stationcim();
  inline void set_allocated_stationcim(::std::string* stationcim);

  // optional bytes unitCim = 3;
  inline bool has_unitcim() const;
  inline void clear_unitcim();
  static const int kUnitCimFieldNumber = 3;
  inline const ::std::string& unitcim() const;
  inline void set_unitcim(const ::std::string& value);
  inline void set_unitcim(const char* value);
  inline void set_unitcim(const void* value, size_t size);
  inline ::std::string* mutable_unitcim();
  inline ::std::string* release_unitcim();
  inline void set_allocated_unitcim(::std::string* unitcim);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.DevStateMsg.Request)
 private:
  inline void set_has_saveid();
  inline void clear_has_saveid();
  inline void set_has_stationcim();
  inline void clear_has_stationcim();
  inline void set_has_unitcim();
  inline void clear_has_unitcim();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stationcim_;
  ::std::string* unitcim_;
  ::google::protobuf::uint32 saveid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static DevStateMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class DevStateMsg_Response : public ::google::protobuf::Message {
 public:
  DevStateMsg_Response();
  virtual ~DevStateMsg_Response();

  DevStateMsg_Response(const DevStateMsg_Response& from);

  inline DevStateMsg_Response& operator=(const DevStateMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DevStateMsg_Response& default_instance();

  void Swap(DevStateMsg_Response* other);

  // implements Message ----------------------------------------------

  DevStateMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DevStateMsg_Response& from);
  void MergeFrom(const DevStateMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.StateBean devState = 2;
  inline int devstate_size() const;
  inline void clear_devstate();
  static const int kDevStateFieldNumber = 2;
  inline const ::com::spplus::buff::StateBean& devstate(int index) const;
  inline ::com::spplus::buff::StateBean* mutable_devstate(int index);
  inline ::com::spplus::buff::StateBean* add_devstate();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >&
      devstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >*
      mutable_devstate();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.DevStateMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean > devstate_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static DevStateMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class DevStateMsg : public ::google::protobuf::Message {
 public:
  DevStateMsg();
  virtual ~DevStateMsg();

  DevStateMsg(const DevStateMsg& from);

  inline DevStateMsg& operator=(const DevStateMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DevStateMsg& default_instance();

  void Swap(DevStateMsg* other);

  // implements Message ----------------------------------------------

  DevStateMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DevStateMsg& from);
  void MergeFrom(const DevStateMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DevStateMsg_Request Request;
  typedef DevStateMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.DevStateMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::DevStateMsg_Request& request() const;
  inline ::com::spplus::buff::DevStateMsg_Request* mutable_request();
  inline ::com::spplus::buff::DevStateMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::DevStateMsg_Request* request);

  // optional .com.spplus.buff.DevStateMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::DevStateMsg_Response& response() const;
  inline ::com::spplus::buff::DevStateMsg_Response* mutable_response();
  inline ::com::spplus::buff::DevStateMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::DevStateMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.DevStateMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::DevStateMsg_Request* request_;
  ::com::spplus::buff::DevStateMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static DevStateMsg* default_instance_;
};
// -------------------------------------------------------------------

class StationTypeMsg_Request : public ::google::protobuf::Message {
 public:
  StationTypeMsg_Request();
  virtual ~StationTypeMsg_Request();

  StationTypeMsg_Request(const StationTypeMsg_Request& from);

  inline StationTypeMsg_Request& operator=(const StationTypeMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationTypeMsg_Request& default_instance();

  void Swap(StationTypeMsg_Request* other);

  // implements Message ----------------------------------------------

  StationTypeMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationTypeMsg_Request& from);
  void MergeFrom(const StationTypeMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 saveId = 1;
  inline bool has_saveid() const;
  inline void clear_saveid();
  static const int kSaveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 saveid() const;
  inline void set_saveid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationTypeMsg.Request)
 private:
  inline void set_has_saveid();
  inline void clear_has_saveid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 saveid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationTypeMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class StationTypeMsg_Response : public ::google::protobuf::Message {
 public:
  StationTypeMsg_Response();
  virtual ~StationTypeMsg_Response();

  StationTypeMsg_Response(const StationTypeMsg_Response& from);

  inline StationTypeMsg_Response& operator=(const StationTypeMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationTypeMsg_Response& default_instance();

  void Swap(StationTypeMsg_Response* other);

  // implements Message ----------------------------------------------

  StationTypeMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationTypeMsg_Response& from);
  void MergeFrom(const StationTypeMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.StationTypeBean typeList = 2;
  inline int typelist_size() const;
  inline void clear_typelist();
  static const int kTypeListFieldNumber = 2;
  inline const ::com::spplus::buff::StationTypeBean& typelist(int index) const;
  inline ::com::spplus::buff::StationTypeBean* mutable_typelist(int index);
  inline ::com::spplus::buff::StationTypeBean* add_typelist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationTypeBean >&
      typelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationTypeBean >*
      mutable_typelist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationTypeMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationTypeBean > typelist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationTypeMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class StationTypeMsg : public ::google::protobuf::Message {
 public:
  StationTypeMsg();
  virtual ~StationTypeMsg();

  StationTypeMsg(const StationTypeMsg& from);

  inline StationTypeMsg& operator=(const StationTypeMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationTypeMsg& default_instance();

  void Swap(StationTypeMsg* other);

  // implements Message ----------------------------------------------

  StationTypeMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationTypeMsg& from);
  void MergeFrom(const StationTypeMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StationTypeMsg_Request Request;
  typedef StationTypeMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.StationTypeMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::StationTypeMsg_Request& request() const;
  inline ::com::spplus::buff::StationTypeMsg_Request* mutable_request();
  inline ::com::spplus::buff::StationTypeMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::StationTypeMsg_Request* request);

  // optional .com.spplus.buff.StationTypeMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::StationTypeMsg_Response& response() const;
  inline ::com::spplus::buff::StationTypeMsg_Response* mutable_response();
  inline ::com::spplus::buff::StationTypeMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::StationTypeMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationTypeMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::StationTypeMsg_Request* request_;
  ::com::spplus::buff::StationTypeMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationTypeMsg* default_instance_;
};
// -------------------------------------------------------------------

class StationListMsg_Request : public ::google::protobuf::Message {
 public:
  StationListMsg_Request();
  virtual ~StationListMsg_Request();

  StationListMsg_Request(const StationListMsg_Request& from);

  inline StationListMsg_Request& operator=(const StationListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationListMsg_Request& default_instance();

  void Swap(StationListMsg_Request* other);

  // implements Message ----------------------------------------------

  StationListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationListMsg_Request& from);
  void MergeFrom(const StationListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stationId = 1;
  inline bool has_stationid() const;
  inline void clear_stationid();
  static const int kStationIdFieldNumber = 1;
  inline ::google::protobuf::uint32 stationid() const;
  inline void set_stationid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationListMsg.Request)
 private:
  inline void set_has_stationid();
  inline void clear_has_stationid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 stationid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class StationListMsg_Response : public ::google::protobuf::Message {
 public:
  StationListMsg_Response();
  virtual ~StationListMsg_Response();

  StationListMsg_Response(const StationListMsg_Response& from);

  inline StationListMsg_Response& operator=(const StationListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationListMsg_Response& default_instance();

  void Swap(StationListMsg_Response* other);

  // implements Message ----------------------------------------------

  StationListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationListMsg_Response& from);
  void MergeFrom(const StationListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.StationBean stationList = 2;
  inline int stationlist_size() const;
  inline void clear_stationlist();
  static const int kStationListFieldNumber = 2;
  inline const ::com::spplus::buff::StationBean& stationlist(int index) const;
  inline ::com::spplus::buff::StationBean* mutable_stationlist(int index);
  inline ::com::spplus::buff::StationBean* add_stationlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >&
      stationlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >*
      mutable_stationlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean > stationlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class StationListMsg : public ::google::protobuf::Message {
 public:
  StationListMsg();
  virtual ~StationListMsg();

  StationListMsg(const StationListMsg& from);

  inline StationListMsg& operator=(const StationListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StationListMsg& default_instance();

  void Swap(StationListMsg* other);

  // implements Message ----------------------------------------------

  StationListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationListMsg& from);
  void MergeFrom(const StationListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StationListMsg_Request Request;
  typedef StationListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.StationListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::StationListMsg_Request& request() const;
  inline ::com::spplus::buff::StationListMsg_Request* mutable_request();
  inline ::com::spplus::buff::StationListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::StationListMsg_Request* request);

  // optional .com.spplus.buff.StationListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::StationListMsg_Response& response() const;
  inline ::com::spplus::buff::StationListMsg_Response* mutable_response();
  inline ::com::spplus::buff::StationListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::StationListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.StationListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::StationListMsg_Request* request_;
  ::com::spplus::buff::StationListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static StationListMsg* default_instance_;
};
// -------------------------------------------------------------------

class TagMsg_Request : public ::google::protobuf::Message {
 public:
  TagMsg_Request();
  virtual ~TagMsg_Request();

  TagMsg_Request(const TagMsg_Request& from);

  inline TagMsg_Request& operator=(const TagMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TagMsg_Request& default_instance();

  void Swap(TagMsg_Request* other);

  // implements Message ----------------------------------------------

  TagMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TagMsg_Request& from);
  void MergeFrom(const TagMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 saveId = 1;
  inline bool has_saveid() const;
  inline void clear_saveid();
  static const int kSaveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 saveid() const;
  inline void set_saveid(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional bytes unitCim = 3;
  inline bool has_unitcim() const;
  inline void clear_unitcim();
  static const int kUnitCimFieldNumber = 3;
  inline const ::std::string& unitcim() const;
  inline void set_unitcim(const ::std::string& value);
  inline void set_unitcim(const char* value);
  inline void set_unitcim(const void* value, size_t size);
  inline ::std::string* mutable_unitcim();
  inline ::std::string* release_unitcim();
  inline void set_allocated_unitcim(::std::string* unitcim);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TagMsg.Request)
 private:
  inline void set_has_saveid();
  inline void clear_has_saveid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_unitcim();
  inline void clear_has_unitcim();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 saveid_;
  ::google::protobuf::uint32 type_;
  ::std::string* unitcim_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TagMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class TagMsg_Response : public ::google::protobuf::Message {
 public:
  TagMsg_Response();
  virtual ~TagMsg_Response();

  TagMsg_Response(const TagMsg_Response& from);

  inline TagMsg_Response& operator=(const TagMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TagMsg_Response& default_instance();

  void Swap(TagMsg_Response* other);

  // implements Message ----------------------------------------------

  TagMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TagMsg_Response& from);
  void MergeFrom(const TagMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // optional bytes resmsg = 2;
  inline bool has_resmsg() const;
  inline void clear_resmsg();
  static const int kResmsgFieldNumber = 2;
  inline const ::std::string& resmsg() const;
  inline void set_resmsg(const ::std::string& value);
  inline void set_resmsg(const char* value);
  inline void set_resmsg(const void* value, size_t size);
  inline ::std::string* mutable_resmsg();
  inline ::std::string* release_resmsg();
  inline void set_allocated_resmsg(::std::string* resmsg);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TagMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();
  inline void set_has_resmsg();
  inline void clear_has_resmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* resmsg_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TagMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class TagMsg : public ::google::protobuf::Message {
 public:
  TagMsg();
  virtual ~TagMsg();

  TagMsg(const TagMsg& from);

  inline TagMsg& operator=(const TagMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TagMsg& default_instance();

  void Swap(TagMsg* other);

  // implements Message ----------------------------------------------

  TagMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TagMsg& from);
  void MergeFrom(const TagMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TagMsg_Request Request;
  typedef TagMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.TagMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::TagMsg_Request& request() const;
  inline ::com::spplus::buff::TagMsg_Request* mutable_request();
  inline ::com::spplus::buff::TagMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::TagMsg_Request* request);

  // optional .com.spplus.buff.TagMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::TagMsg_Response& response() const;
  inline ::com::spplus::buff::TagMsg_Response* mutable_response();
  inline ::com::spplus::buff::TagMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::TagMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TagMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::TagMsg_Request* request_;
  ::com::spplus::buff::TagMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TagMsg* default_instance_;
};
// -------------------------------------------------------------------

class OprationMsg_Request : public ::google::protobuf::Message {
 public:
  OprationMsg_Request();
  virtual ~OprationMsg_Request();

  OprationMsg_Request(const OprationMsg_Request& from);

  inline OprationMsg_Request& operator=(const OprationMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OprationMsg_Request& default_instance();

  void Swap(OprationMsg_Request* other);

  // implements Message ----------------------------------------------

  OprationMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OprationMsg_Request& from);
  void MergeFrom(const OprationMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 saveId = 1;
  inline bool has_saveid() const;
  inline void clear_saveid();
  static const int kSaveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 saveid() const;
  inline void set_saveid(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional bytes unitCim = 3;
  inline bool has_unitcim() const;
  inline void clear_unitcim();
  static const int kUnitCimFieldNumber = 3;
  inline const ::std::string& unitcim() const;
  inline void set_unitcim(const ::std::string& value);
  inline void set_unitcim(const char* value);
  inline void set_unitcim(const void* value, size_t size);
  inline ::std::string* mutable_unitcim();
  inline ::std::string* release_unitcim();
  inline void set_allocated_unitcim(::std::string* unitcim);

  // optional bool ischeck = 4;
  inline bool has_ischeck() const;
  inline void clear_ischeck();
  static const int kIscheckFieldNumber = 4;
  inline bool ischeck() const;
  inline void set_ischeck(bool value);

  // optional uint32 unittype = 5;
  inline bool has_unittype() const;
  inline void clear_unittype();
  static const int kUnittypeFieldNumber = 5;
  inline ::google::protobuf::uint32 unittype() const;
  inline void set_unittype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.OprationMsg.Request)
 private:
  inline void set_has_saveid();
  inline void clear_has_saveid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_unitcim();
  inline void clear_has_unitcim();
  inline void set_has_ischeck();
  inline void clear_has_ischeck();
  inline void set_has_unittype();
  inline void clear_has_unittype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 saveid_;
  ::google::protobuf::uint32 type_;
  ::std::string* unitcim_;
  bool ischeck_;
  ::google::protobuf::uint32 unittype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static OprationMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class OprationMsg_Response : public ::google::protobuf::Message {
 public:
  OprationMsg_Response();
  virtual ~OprationMsg_Response();

  OprationMsg_Response(const OprationMsg_Response& from);

  inline OprationMsg_Response& operator=(const OprationMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OprationMsg_Response& default_instance();

  void Swap(OprationMsg_Response* other);

  // implements Message ----------------------------------------------

  OprationMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OprationMsg_Response& from);
  void MergeFrom(const OprationMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // optional bytes resmsg = 2;
  inline bool has_resmsg() const;
  inline void clear_resmsg();
  static const int kResmsgFieldNumber = 2;
  inline const ::std::string& resmsg() const;
  inline void set_resmsg(const ::std::string& value);
  inline void set_resmsg(const char* value);
  inline void set_resmsg(const void* value, size_t size);
  inline ::std::string* mutable_resmsg();
  inline ::std::string* release_resmsg();
  inline void set_allocated_resmsg(::std::string* resmsg);

  // repeated .com.spplus.buff.StateBean devState = 3;
  inline int devstate_size() const;
  inline void clear_devstate();
  static const int kDevStateFieldNumber = 3;
  inline const ::com::spplus::buff::StateBean& devstate(int index) const;
  inline ::com::spplus::buff::StateBean* mutable_devstate(int index);
  inline ::com::spplus::buff::StateBean* add_devstate();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >&
      devstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >*
      mutable_devstate();

  // repeated .com.spplus.buff.RuleBean ruleList = 4;
  inline int rulelist_size() const;
  inline void clear_rulelist();
  static const int kRuleListFieldNumber = 4;
  inline const ::com::spplus::buff::RuleBean& rulelist(int index) const;
  inline ::com::spplus::buff::RuleBean* mutable_rulelist(int index);
  inline ::com::spplus::buff::RuleBean* add_rulelist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::RuleBean >&
      rulelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::RuleBean >*
      mutable_rulelist();

  // optional uint32 optype = 5;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 5;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.OprationMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();
  inline void set_has_resmsg();
  inline void clear_has_resmsg();
  inline void set_has_optype();
  inline void clear_has_optype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* resmsg_;
  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean > devstate_;
  ::google::protobuf::uint32 rescode_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::RuleBean > rulelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static OprationMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class OprationMsg : public ::google::protobuf::Message {
 public:
  OprationMsg();
  virtual ~OprationMsg();

  OprationMsg(const OprationMsg& from);

  inline OprationMsg& operator=(const OprationMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OprationMsg& default_instance();

  void Swap(OprationMsg* other);

  // implements Message ----------------------------------------------

  OprationMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OprationMsg& from);
  void MergeFrom(const OprationMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef OprationMsg_Request Request;
  typedef OprationMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.OprationMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::OprationMsg_Request& request() const;
  inline ::com::spplus::buff::OprationMsg_Request* mutable_request();
  inline ::com::spplus::buff::OprationMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::OprationMsg_Request* request);

  // optional .com.spplus.buff.OprationMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::OprationMsg_Response& response() const;
  inline ::com::spplus::buff::OprationMsg_Response* mutable_response();
  inline ::com::spplus::buff::OprationMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::OprationMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.OprationMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::OprationMsg_Request* request_;
  ::com::spplus::buff::OprationMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static OprationMsg* default_instance_;
};
// -------------------------------------------------------------------

class PowerSetMsg_Request : public ::google::protobuf::Message {
 public:
  PowerSetMsg_Request();
  virtual ~PowerSetMsg_Request();

  PowerSetMsg_Request(const PowerSetMsg_Request& from);

  inline PowerSetMsg_Request& operator=(const PowerSetMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerSetMsg_Request& default_instance();

  void Swap(PowerSetMsg_Request* other);

  // implements Message ----------------------------------------------

  PowerSetMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PowerSetMsg_Request& from);
  void MergeFrom(const PowerSetMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes stationCim = 1;
  inline bool has_stationcim() const;
  inline void clear_stationcim();
  static const int kStationCimFieldNumber = 1;
  inline const ::std::string& stationcim() const;
  inline void set_stationcim(const ::std::string& value);
  inline void set_stationcim(const char* value);
  inline void set_stationcim(const void* value, size_t size);
  inline ::std::string* mutable_stationcim();
  inline ::std::string* release_stationcim();
  inline void set_allocated_stationcim(::std::string* stationcim);

  // optional bytes unitCim = 2;
  inline bool has_unitcim() const;
  inline void clear_unitcim();
  static const int kUnitCimFieldNumber = 2;
  inline const ::std::string& unitcim() const;
  inline void set_unitcim(const ::std::string& value);
  inline void set_unitcim(const char* value);
  inline void set_unitcim(const void* value, size_t size);
  inline ::std::string* mutable_unitcim();
  inline ::std::string* release_unitcim();
  inline void set_allocated_unitcim(::std::string* unitcim);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.PowerSetMsg.Request)
 private:
  inline void set_has_stationcim();
  inline void clear_has_stationcim();
  inline void set_has_unitcim();
  inline void clear_has_unitcim();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stationcim_;
  ::std::string* unitcim_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static PowerSetMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class PowerSetMsg_Response : public ::google::protobuf::Message {
 public:
  PowerSetMsg_Response();
  virtual ~PowerSetMsg_Response();

  PowerSetMsg_Response(const PowerSetMsg_Response& from);

  inline PowerSetMsg_Response& operator=(const PowerSetMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerSetMsg_Response& default_instance();

  void Swap(PowerSetMsg_Response* other);

  // implements Message ----------------------------------------------

  PowerSetMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PowerSetMsg_Response& from);
  void MergeFrom(const PowerSetMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // optional bytes resmsg = 2;
  inline bool has_resmsg() const;
  inline void clear_resmsg();
  static const int kResmsgFieldNumber = 2;
  inline const ::std::string& resmsg() const;
  inline void set_resmsg(const ::std::string& value);
  inline void set_resmsg(const char* value);
  inline void set_resmsg(const void* value, size_t size);
  inline ::std::string* mutable_resmsg();
  inline ::std::string* release_resmsg();
  inline void set_allocated_resmsg(::std::string* resmsg);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.PowerSetMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();
  inline void set_has_resmsg();
  inline void clear_has_resmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* resmsg_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static PowerSetMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class PowerSetMsg : public ::google::protobuf::Message {
 public:
  PowerSetMsg();
  virtual ~PowerSetMsg();

  PowerSetMsg(const PowerSetMsg& from);

  inline PowerSetMsg& operator=(const PowerSetMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerSetMsg& default_instance();

  void Swap(PowerSetMsg* other);

  // implements Message ----------------------------------------------

  PowerSetMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PowerSetMsg& from);
  void MergeFrom(const PowerSetMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PowerSetMsg_Request Request;
  typedef PowerSetMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.PowerSetMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::PowerSetMsg_Request& request() const;
  inline ::com::spplus::buff::PowerSetMsg_Request* mutable_request();
  inline ::com::spplus::buff::PowerSetMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::PowerSetMsg_Request* request);

  // optional .com.spplus.buff.PowerSetMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::PowerSetMsg_Response& response() const;
  inline ::com::spplus::buff::PowerSetMsg_Response* mutable_response();
  inline ::com::spplus::buff::PowerSetMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::PowerSetMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.PowerSetMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::PowerSetMsg_Request* request_;
  ::com::spplus::buff::PowerSetMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static PowerSetMsg* default_instance_;
};
// -------------------------------------------------------------------

class LineSetMsg_Request : public ::google::protobuf::Message {
 public:
  LineSetMsg_Request();
  virtual ~LineSetMsg_Request();

  LineSetMsg_Request(const LineSetMsg_Request& from);

  inline LineSetMsg_Request& operator=(const LineSetMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LineSetMsg_Request& default_instance();

  void Swap(LineSetMsg_Request* other);

  // implements Message ----------------------------------------------

  LineSetMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LineSetMsg_Request& from);
  void MergeFrom(const LineSetMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes unitCim = 1;
  inline bool has_unitcim() const;
  inline void clear_unitcim();
  static const int kUnitCimFieldNumber = 1;
  inline const ::std::string& unitcim() const;
  inline void set_unitcim(const ::std::string& value);
  inline void set_unitcim(const char* value);
  inline void set_unitcim(const void* value, size_t size);
  inline ::std::string* mutable_unitcim();
  inline ::std::string* release_unitcim();
  inline void set_allocated_unitcim(::std::string* unitcim);

  // optional bytes stationOneCim = 2;
  inline bool has_stationonecim() const;
  inline void clear_stationonecim();
  static const int kStationOneCimFieldNumber = 2;
  inline const ::std::string& stationonecim() const;
  inline void set_stationonecim(const ::std::string& value);
  inline void set_stationonecim(const char* value);
  inline void set_stationonecim(const void* value, size_t size);
  inline ::std::string* mutable_stationonecim();
  inline ::std::string* release_stationonecim();
  inline void set_allocated_stationonecim(::std::string* stationonecim);

  // optional bytes stationOtherCim = 3;
  inline bool has_stationothercim() const;
  inline void clear_stationothercim();
  static const int kStationOtherCimFieldNumber = 3;
  inline const ::std::string& stationothercim() const;
  inline void set_stationothercim(const ::std::string& value);
  inline void set_stationothercim(const char* value);
  inline void set_stationothercim(const void* value, size_t size);
  inline ::std::string* mutable_stationothercim();
  inline ::std::string* release_stationothercim();
  inline void set_allocated_stationothercim(::std::string* stationothercim);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.LineSetMsg.Request)
 private:
  inline void set_has_unitcim();
  inline void clear_has_unitcim();
  inline void set_has_stationonecim();
  inline void clear_has_stationonecim();
  inline void set_has_stationothercim();
  inline void clear_has_stationothercim();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* unitcim_;
  ::std::string* stationonecim_;
  ::std::string* stationothercim_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static LineSetMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class LineSetMsg_Response : public ::google::protobuf::Message {
 public:
  LineSetMsg_Response();
  virtual ~LineSetMsg_Response();

  LineSetMsg_Response(const LineSetMsg_Response& from);

  inline LineSetMsg_Response& operator=(const LineSetMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LineSetMsg_Response& default_instance();

  void Swap(LineSetMsg_Response* other);

  // implements Message ----------------------------------------------

  LineSetMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LineSetMsg_Response& from);
  void MergeFrom(const LineSetMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // optional bytes resmsg = 2;
  inline bool has_resmsg() const;
  inline void clear_resmsg();
  static const int kResmsgFieldNumber = 2;
  inline const ::std::string& resmsg() const;
  inline void set_resmsg(const ::std::string& value);
  inline void set_resmsg(const char* value);
  inline void set_resmsg(const void* value, size_t size);
  inline ::std::string* mutable_resmsg();
  inline ::std::string* release_resmsg();
  inline void set_allocated_resmsg(::std::string* resmsg);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.LineSetMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();
  inline void set_has_resmsg();
  inline void clear_has_resmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* resmsg_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static LineSetMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class LineSetMsg : public ::google::protobuf::Message {
 public:
  LineSetMsg();
  virtual ~LineSetMsg();

  LineSetMsg(const LineSetMsg& from);

  inline LineSetMsg& operator=(const LineSetMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LineSetMsg& default_instance();

  void Swap(LineSetMsg* other);

  // implements Message ----------------------------------------------

  LineSetMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LineSetMsg& from);
  void MergeFrom(const LineSetMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LineSetMsg_Request Request;
  typedef LineSetMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.LineSetMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::LineSetMsg_Request& request() const;
  inline ::com::spplus::buff::LineSetMsg_Request* mutable_request();
  inline ::com::spplus::buff::LineSetMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::LineSetMsg_Request* request);

  // optional .com.spplus.buff.LineSetMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::LineSetMsg_Response& response() const;
  inline ::com::spplus::buff::LineSetMsg_Response* mutable_response();
  inline ::com::spplus::buff::LineSetMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::LineSetMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.LineSetMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::LineSetMsg_Request* request_;
  ::com::spplus::buff::LineSetMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static LineSetMsg* default_instance_;
};
// -------------------------------------------------------------------

class SavingListMsg_Request : public ::google::protobuf::Message {
 public:
  SavingListMsg_Request();
  virtual ~SavingListMsg_Request();

  SavingListMsg_Request(const SavingListMsg_Request& from);

  inline SavingListMsg_Request& operator=(const SavingListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SavingListMsg_Request& default_instance();

  void Swap(SavingListMsg_Request* other);

  // implements Message ----------------------------------------------

  SavingListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SavingListMsg_Request& from);
  void MergeFrom(const SavingListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const void* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.SavingListMsg.Request)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static SavingListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class SavingListMsg_Response : public ::google::protobuf::Message {
 public:
  SavingListMsg_Response();
  virtual ~SavingListMsg_Response();

  SavingListMsg_Response(const SavingListMsg_Response& from);

  inline SavingListMsg_Response& operator=(const SavingListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SavingListMsg_Response& default_instance();

  void Swap(SavingListMsg_Response* other);

  // implements Message ----------------------------------------------

  SavingListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SavingListMsg_Response& from);
  void MergeFrom(const SavingListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.spplus.buff.SavingBean saveList = 1;
  inline int savelist_size() const;
  inline void clear_savelist();
  static const int kSaveListFieldNumber = 1;
  inline const ::com::spplus::buff::SavingBean& savelist(int index) const;
  inline ::com::spplus::buff::SavingBean* mutable_savelist(int index);
  inline ::com::spplus::buff::SavingBean* add_savelist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::SavingBean >&
      savelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::SavingBean >*
      mutable_savelist();

  // optional uint32 rescode = 2;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.SavingListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::SavingBean > savelist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static SavingListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class SavingListMsg : public ::google::protobuf::Message {
 public:
  SavingListMsg();
  virtual ~SavingListMsg();

  SavingListMsg(const SavingListMsg& from);

  inline SavingListMsg& operator=(const SavingListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SavingListMsg& default_instance();

  void Swap(SavingListMsg* other);

  // implements Message ----------------------------------------------

  SavingListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SavingListMsg& from);
  void MergeFrom(const SavingListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SavingListMsg_Request Request;
  typedef SavingListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.SavingListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::SavingListMsg_Request& request() const;
  inline ::com::spplus::buff::SavingListMsg_Request* mutable_request();
  inline ::com::spplus::buff::SavingListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::SavingListMsg_Request* request);

  // optional .com.spplus.buff.SavingListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::SavingListMsg_Response& response() const;
  inline ::com::spplus::buff::SavingListMsg_Response* mutable_response();
  inline ::com::spplus::buff::SavingListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::SavingListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.SavingListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::SavingListMsg_Request* request_;
  ::com::spplus::buff::SavingListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static SavingListMsg* default_instance_;
};
// -------------------------------------------------------------------

class WriteSavingMsg_Request : public ::google::protobuf::Message {
 public:
  WriteSavingMsg_Request();
  virtual ~WriteSavingMsg_Request();

  WriteSavingMsg_Request(const WriteSavingMsg_Request& from);

  inline WriteSavingMsg_Request& operator=(const WriteSavingMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteSavingMsg_Request& default_instance();

  void Swap(WriteSavingMsg_Request* other);

  // implements Message ----------------------------------------------

  WriteSavingMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteSavingMsg_Request& from);
  void MergeFrom(const WriteSavingMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes saveName = 1;
  inline bool has_savename() const;
  inline void clear_savename();
  static const int kSaveNameFieldNumber = 1;
  inline const ::std::string& savename() const;
  inline void set_savename(const ::std::string& value);
  inline void set_savename(const char* value);
  inline void set_savename(const void* value, size_t size);
  inline ::std::string* mutable_savename();
  inline ::std::string* release_savename();
  inline void set_allocated_savename(::std::string* savename);

  // optional uint32 saveId = 2;
  inline bool has_saveid() const;
  inline void clear_saveid();
  static const int kSaveIdFieldNumber = 2;
  inline ::google::protobuf::uint32 saveid() const;
  inline void set_saveid(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.StateBean stateList = 3;
  inline int statelist_size() const;
  inline void clear_statelist();
  static const int kStateListFieldNumber = 3;
  inline const ::com::spplus::buff::StateBean& statelist(int index) const;
  inline ::com::spplus::buff::StateBean* mutable_statelist(int index);
  inline ::com::spplus::buff::StateBean* add_statelist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >&
      statelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >*
      mutable_statelist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.WriteSavingMsg.Request)
 private:
  inline void set_has_savename();
  inline void clear_has_savename();
  inline void set_has_saveid();
  inline void clear_has_saveid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* savename_;
  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean > statelist_;
  ::google::protobuf::uint32 saveid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static WriteSavingMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class WriteSavingMsg_Response : public ::google::protobuf::Message {
 public:
  WriteSavingMsg_Response();
  virtual ~WriteSavingMsg_Response();

  WriteSavingMsg_Response(const WriteSavingMsg_Response& from);

  inline WriteSavingMsg_Response& operator=(const WriteSavingMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteSavingMsg_Response& default_instance();

  void Swap(WriteSavingMsg_Response* other);

  // implements Message ----------------------------------------------

  WriteSavingMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteSavingMsg_Response& from);
  void MergeFrom(const WriteSavingMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.WriteSavingMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static WriteSavingMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class WriteSavingMsg : public ::google::protobuf::Message {
 public:
  WriteSavingMsg();
  virtual ~WriteSavingMsg();

  WriteSavingMsg(const WriteSavingMsg& from);

  inline WriteSavingMsg& operator=(const WriteSavingMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteSavingMsg& default_instance();

  void Swap(WriteSavingMsg* other);

  // implements Message ----------------------------------------------

  WriteSavingMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteSavingMsg& from);
  void MergeFrom(const WriteSavingMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WriteSavingMsg_Request Request;
  typedef WriteSavingMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.WriteSavingMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::WriteSavingMsg_Request& request() const;
  inline ::com::spplus::buff::WriteSavingMsg_Request* mutable_request();
  inline ::com::spplus::buff::WriteSavingMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::WriteSavingMsg_Request* request);

  // optional .com.spplus.buff.WriteSavingMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::WriteSavingMsg_Response& response() const;
  inline ::com::spplus::buff::WriteSavingMsg_Response* mutable_response();
  inline ::com::spplus::buff::WriteSavingMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::WriteSavingMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.WriteSavingMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::WriteSavingMsg_Request* request_;
  ::com::spplus::buff::WriteSavingMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static WriteSavingMsg* default_instance_;
};
// -------------------------------------------------------------------

class TicketMsionListMsg_Request : public ::google::protobuf::Message {
 public:
  TicketMsionListMsg_Request();
  virtual ~TicketMsionListMsg_Request();

  TicketMsionListMsg_Request(const TicketMsionListMsg_Request& from);

  inline TicketMsionListMsg_Request& operator=(const TicketMsionListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TicketMsionListMsg_Request& default_instance();

  void Swap(TicketMsionListMsg_Request* other);

  // implements Message ----------------------------------------------

  TicketMsionListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TicketMsionListMsg_Request& from);
  void MergeFrom(const TicketMsionListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TicketMsionListMsg.Request)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TicketMsionListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class TicketMsionListMsg_Response : public ::google::protobuf::Message {
 public:
  TicketMsionListMsg_Response();
  virtual ~TicketMsionListMsg_Response();

  TicketMsionListMsg_Response(const TicketMsionListMsg_Response& from);

  inline TicketMsionListMsg_Response& operator=(const TicketMsionListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TicketMsionListMsg_Response& default_instance();

  void Swap(TicketMsionListMsg_Response* other);

  // implements Message ----------------------------------------------

  TicketMsionListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TicketMsionListMsg_Response& from);
  void MergeFrom(const TicketMsionListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.TicketMsionBean tktMsionlist = 2;
  inline int tktmsionlist_size() const;
  inline void clear_tktmsionlist();
  static const int kTktMsionlistFieldNumber = 2;
  inline const ::com::spplus::buff::TicketMsionBean& tktmsionlist(int index) const;
  inline ::com::spplus::buff::TicketMsionBean* mutable_tktmsionlist(int index);
  inline ::com::spplus::buff::TicketMsionBean* add_tktmsionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::TicketMsionBean >&
      tktmsionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::TicketMsionBean >*
      mutable_tktmsionlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TicketMsionListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::TicketMsionBean > tktmsionlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TicketMsionListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class TicketMsionListMsg : public ::google::protobuf::Message {
 public:
  TicketMsionListMsg();
  virtual ~TicketMsionListMsg();

  TicketMsionListMsg(const TicketMsionListMsg& from);

  inline TicketMsionListMsg& operator=(const TicketMsionListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TicketMsionListMsg& default_instance();

  void Swap(TicketMsionListMsg* other);

  // implements Message ----------------------------------------------

  TicketMsionListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TicketMsionListMsg& from);
  void MergeFrom(const TicketMsionListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TicketMsionListMsg_Request Request;
  typedef TicketMsionListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.TicketMsionListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::TicketMsionListMsg_Request& request() const;
  inline ::com::spplus::buff::TicketMsionListMsg_Request* mutable_request();
  inline ::com::spplus::buff::TicketMsionListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::TicketMsionListMsg_Request* request);

  // optional .com.spplus.buff.TicketMsionListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::TicketMsionListMsg_Response& response() const;
  inline ::com::spplus::buff::TicketMsionListMsg_Response* mutable_response();
  inline ::com::spplus::buff::TicketMsionListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::TicketMsionListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TicketMsionListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::TicketMsionListMsg_Request* request_;
  ::com::spplus::buff::TicketMsionListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TicketMsionListMsg* default_instance_;
};
// -------------------------------------------------------------------

class TicketMgrMsg_Request : public ::google::protobuf::Message {
 public:
  TicketMgrMsg_Request();
  virtual ~TicketMgrMsg_Request();

  TicketMgrMsg_Request(const TicketMgrMsg_Request& from);

  inline TicketMgrMsg_Request& operator=(const TicketMgrMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TicketMgrMsg_Request& default_instance();

  void Swap(TicketMgrMsg_Request* other);

  // implements Message ----------------------------------------------

  TicketMgrMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TicketMgrMsg_Request& from);
  void MergeFrom(const TicketMgrMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes mgrsql = 1;
  inline bool has_mgrsql() const;
  inline void clear_mgrsql();
  static const int kMgrsqlFieldNumber = 1;
  inline const ::std::string& mgrsql() const;
  inline void set_mgrsql(const ::std::string& value);
  inline void set_mgrsql(const char* value);
  inline void set_mgrsql(const void* value, size_t size);
  inline ::std::string* mutable_mgrsql();
  inline ::std::string* release_mgrsql();
  inline void set_allocated_mgrsql(::std::string* mgrsql);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TicketMgrMsg.Request)
 private:
  inline void set_has_mgrsql();
  inline void clear_has_mgrsql();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* mgrsql_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TicketMgrMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class TicketMgrMsg_Response : public ::google::protobuf::Message {
 public:
  TicketMgrMsg_Response();
  virtual ~TicketMgrMsg_Response();

  TicketMgrMsg_Response(const TicketMgrMsg_Response& from);

  inline TicketMgrMsg_Response& operator=(const TicketMgrMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TicketMgrMsg_Response& default_instance();

  void Swap(TicketMgrMsg_Response* other);

  // implements Message ----------------------------------------------

  TicketMgrMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TicketMgrMsg_Response& from);
  void MergeFrom(const TicketMgrMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TicketMgrMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TicketMgrMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class TicketMgrMsg : public ::google::protobuf::Message {
 public:
  TicketMgrMsg();
  virtual ~TicketMgrMsg();

  TicketMgrMsg(const TicketMgrMsg& from);

  inline TicketMgrMsg& operator=(const TicketMgrMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TicketMgrMsg& default_instance();

  void Swap(TicketMgrMsg* other);

  // implements Message ----------------------------------------------

  TicketMgrMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TicketMgrMsg& from);
  void MergeFrom(const TicketMgrMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TicketMgrMsg_Request Request;
  typedef TicketMgrMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.TicketMgrMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::TicketMgrMsg_Request& request() const;
  inline ::com::spplus::buff::TicketMgrMsg_Request* mutable_request();
  inline ::com::spplus::buff::TicketMgrMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::TicketMgrMsg_Request* request);

  // optional .com.spplus.buff.TicketMgrMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::TicketMgrMsg_Response& response() const;
  inline ::com::spplus::buff::TicketMgrMsg_Response* mutable_response();
  inline ::com::spplus::buff::TicketMgrMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::TicketMgrMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TicketMgrMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::TicketMgrMsg_Request* request_;
  ::com::spplus::buff::TicketMgrMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TicketMgrMsg* default_instance_;
};
// -------------------------------------------------------------------

class TicketListMsg_Request : public ::google::protobuf::Message {
 public:
  TicketListMsg_Request();
  virtual ~TicketListMsg_Request();

  TicketListMsg_Request(const TicketListMsg_Request& from);

  inline TicketListMsg_Request& operator=(const TicketListMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TicketListMsg_Request& default_instance();

  void Swap(TicketListMsg_Request* other);

  // implements Message ----------------------------------------------

  TicketListMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TicketListMsg_Request& from);
  void MergeFrom(const TicketListMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reqdate = 1;
  inline bool has_reqdate() const;
  inline void clear_reqdate();
  static const int kReqdateFieldNumber = 1;
  inline const ::std::string& reqdate() const;
  inline void set_reqdate(const ::std::string& value);
  inline void set_reqdate(const char* value);
  inline void set_reqdate(const void* value, size_t size);
  inline ::std::string* mutable_reqdate();
  inline ::std::string* release_reqdate();
  inline void set_allocated_reqdate(::std::string* reqdate);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TicketListMsg.Request)
 private:
  inline void set_has_reqdate();
  inline void clear_has_reqdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reqdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TicketListMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class TicketListMsg_Response : public ::google::protobuf::Message {
 public:
  TicketListMsg_Response();
  virtual ~TicketListMsg_Response();

  TicketListMsg_Response(const TicketListMsg_Response& from);

  inline TicketListMsg_Response& operator=(const TicketListMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TicketListMsg_Response& default_instance();

  void Swap(TicketListMsg_Response* other);

  // implements Message ----------------------------------------------

  TicketListMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TicketListMsg_Response& from);
  void MergeFrom(const TicketListMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // repeated .com.spplus.buff.TicketBean ticketlist = 2;
  inline int ticketlist_size() const;
  inline void clear_ticketlist();
  static const int kTicketlistFieldNumber = 2;
  inline const ::com::spplus::buff::TicketBean& ticketlist(int index) const;
  inline ::com::spplus::buff::TicketBean* mutable_ticketlist(int index);
  inline ::com::spplus::buff::TicketBean* add_ticketlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::TicketBean >&
      ticketlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::TicketBean >*
      mutable_ticketlist();

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TicketListMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::TicketBean > ticketlist_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TicketListMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class TicketListMsg : public ::google::protobuf::Message {
 public:
  TicketListMsg();
  virtual ~TicketListMsg();

  TicketListMsg(const TicketListMsg& from);

  inline TicketListMsg& operator=(const TicketListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TicketListMsg& default_instance();

  void Swap(TicketListMsg* other);

  // implements Message ----------------------------------------------

  TicketListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TicketListMsg& from);
  void MergeFrom(const TicketListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TicketListMsg_Request Request;
  typedef TicketListMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.TicketListMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::TicketListMsg_Request& request() const;
  inline ::com::spplus::buff::TicketListMsg_Request* mutable_request();
  inline ::com::spplus::buff::TicketListMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::TicketListMsg_Request* request);

  // optional .com.spplus.buff.TicketListMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::TicketListMsg_Response& response() const;
  inline ::com::spplus::buff::TicketListMsg_Response* mutable_response();
  inline ::com::spplus::buff::TicketListMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::TicketListMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.TicketListMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::TicketListMsg_Request* request_;
  ::com::spplus::buff::TicketListMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static TicketListMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// UserLoginMsg_Request

// optional bytes username = 1;
inline bool UserLoginMsg_Request::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginMsg_Request::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginMsg_Request::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginMsg_Request::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& UserLoginMsg_Request::username() const {
  return *username_;
}
inline void UserLoginMsg_Request::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void UserLoginMsg_Request::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void UserLoginMsg_Request::set_username(const void* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserLoginMsg_Request::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* UserLoginMsg_Request::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserLoginMsg_Request::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes userpwd = 2;
inline bool UserLoginMsg_Request::has_userpwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLoginMsg_Request::set_has_userpwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLoginMsg_Request::clear_has_userpwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLoginMsg_Request::clear_userpwd() {
  if (userpwd_ != &::google::protobuf::internal::kEmptyString) {
    userpwd_->clear();
  }
  clear_has_userpwd();
}
inline const ::std::string& UserLoginMsg_Request::userpwd() const {
  return *userpwd_;
}
inline void UserLoginMsg_Request::set_userpwd(const ::std::string& value) {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::kEmptyString) {
    userpwd_ = new ::std::string;
  }
  userpwd_->assign(value);
}
inline void UserLoginMsg_Request::set_userpwd(const char* value) {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::kEmptyString) {
    userpwd_ = new ::std::string;
  }
  userpwd_->assign(value);
}
inline void UserLoginMsg_Request::set_userpwd(const void* value, size_t size) {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::kEmptyString) {
    userpwd_ = new ::std::string;
  }
  userpwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserLoginMsg_Request::mutable_userpwd() {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::kEmptyString) {
    userpwd_ = new ::std::string;
  }
  return userpwd_;
}
inline ::std::string* UserLoginMsg_Request::release_userpwd() {
  clear_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userpwd_;
    userpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserLoginMsg_Request::set_allocated_userpwd(::std::string* userpwd) {
  if (userpwd_ != &::google::protobuf::internal::kEmptyString) {
    delete userpwd_;
  }
  if (userpwd) {
    set_has_userpwd();
    userpwd_ = userpwd;
  } else {
    clear_has_userpwd();
    userpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UserLoginMsg_Response

// optional uint32 rescode = 1;
inline bool UserLoginMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 UserLoginMsg_Response::rescode() const {
  return rescode_;
}
inline void UserLoginMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.UserBean userlist = 2;
inline int UserLoginMsg_Response::userlist_size() const {
  return userlist_.size();
}
inline void UserLoginMsg_Response::clear_userlist() {
  userlist_.Clear();
}
inline const ::com::spplus::buff::UserBean& UserLoginMsg_Response::userlist(int index) const {
  return userlist_.Get(index);
}
inline ::com::spplus::buff::UserBean* UserLoginMsg_Response::mutable_userlist(int index) {
  return userlist_.Mutable(index);
}
inline ::com::spplus::buff::UserBean* UserLoginMsg_Response::add_userlist() {
  return userlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >&
UserLoginMsg_Response::userlist() const {
  return userlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >*
UserLoginMsg_Response::mutable_userlist() {
  return &userlist_;
}

// -------------------------------------------------------------------

// UserLoginMsg

// optional .com.spplus.buff.UserLoginMsg.Request request = 1;
inline bool UserLoginMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::UserLoginMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::UserLoginMsg_Request& UserLoginMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::UserLoginMsg_Request* UserLoginMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::UserLoginMsg_Request;
  return request_;
}
inline ::com::spplus::buff::UserLoginMsg_Request* UserLoginMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::UserLoginMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void UserLoginMsg::set_allocated_request(::com::spplus::buff::UserLoginMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.UserLoginMsg.Response response = 2;
inline bool UserLoginMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLoginMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLoginMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLoginMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::UserLoginMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::UserLoginMsg_Response& UserLoginMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::UserLoginMsg_Response* UserLoginMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::UserLoginMsg_Response;
  return response_;
}
inline ::com::spplus::buff::UserLoginMsg_Response* UserLoginMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::UserLoginMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void UserLoginMsg::set_allocated_response(::com::spplus::buff::UserLoginMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// UserListMsg_Request

// optional bytes reqdate = 1;
inline bool UserListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& UserListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void UserListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void UserListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void UserListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* UserListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UserListMsg_Response

// optional uint32 rescode = 1;
inline bool UserListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 UserListMsg_Response::rescode() const {
  return rescode_;
}
inline void UserListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.UserBean userlist = 2;
inline int UserListMsg_Response::userlist_size() const {
  return userlist_.size();
}
inline void UserListMsg_Response::clear_userlist() {
  userlist_.Clear();
}
inline const ::com::spplus::buff::UserBean& UserListMsg_Response::userlist(int index) const {
  return userlist_.Get(index);
}
inline ::com::spplus::buff::UserBean* UserListMsg_Response::mutable_userlist(int index) {
  return userlist_.Mutable(index);
}
inline ::com::spplus::buff::UserBean* UserListMsg_Response::add_userlist() {
  return userlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >&
UserListMsg_Response::userlist() const {
  return userlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserBean >*
UserListMsg_Response::mutable_userlist() {
  return &userlist_;
}

// -------------------------------------------------------------------

// UserListMsg

// optional .com.spplus.buff.UserListMsg.Request request = 1;
inline bool UserListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::UserListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::UserListMsg_Request& UserListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::UserListMsg_Request* UserListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::UserListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::UserListMsg_Request* UserListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::UserListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void UserListMsg::set_allocated_request(::com::spplus::buff::UserListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.UserListMsg.Response response = 2;
inline bool UserListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::UserListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::UserListMsg_Response& UserListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::UserListMsg_Response* UserListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::UserListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::UserListMsg_Response* UserListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::UserListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void UserListMsg::set_allocated_response(::com::spplus::buff::UserListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// UserRoleListMsg_Request

// optional bytes reqdate = 1;
inline bool UserRoleListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRoleListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRoleListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRoleListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& UserRoleListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void UserRoleListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void UserRoleListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void UserRoleListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserRoleListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* UserRoleListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserRoleListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UserRoleListMsg_Response

// optional uint32 rescode = 1;
inline bool UserRoleListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRoleListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRoleListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRoleListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 UserRoleListMsg_Response::rescode() const {
  return rescode_;
}
inline void UserRoleListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.UserRoleBean userrolelist = 2;
inline int UserRoleListMsg_Response::userrolelist_size() const {
  return userrolelist_.size();
}
inline void UserRoleListMsg_Response::clear_userrolelist() {
  userrolelist_.Clear();
}
inline const ::com::spplus::buff::UserRoleBean& UserRoleListMsg_Response::userrolelist(int index) const {
  return userrolelist_.Get(index);
}
inline ::com::spplus::buff::UserRoleBean* UserRoleListMsg_Response::mutable_userrolelist(int index) {
  return userrolelist_.Mutable(index);
}
inline ::com::spplus::buff::UserRoleBean* UserRoleListMsg_Response::add_userrolelist() {
  return userrolelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserRoleBean >&
UserRoleListMsg_Response::userrolelist() const {
  return userrolelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::UserRoleBean >*
UserRoleListMsg_Response::mutable_userrolelist() {
  return &userrolelist_;
}

// -------------------------------------------------------------------

// UserRoleListMsg

// optional .com.spplus.buff.UserRoleListMsg.Request request = 1;
inline bool UserRoleListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRoleListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRoleListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRoleListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::UserRoleListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::UserRoleListMsg_Request& UserRoleListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::UserRoleListMsg_Request* UserRoleListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::UserRoleListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::UserRoleListMsg_Request* UserRoleListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::UserRoleListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void UserRoleListMsg::set_allocated_request(::com::spplus::buff::UserRoleListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.UserRoleListMsg.Response response = 2;
inline bool UserRoleListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserRoleListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserRoleListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserRoleListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::UserRoleListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::UserRoleListMsg_Response& UserRoleListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::UserRoleListMsg_Response* UserRoleListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::UserRoleListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::UserRoleListMsg_Response* UserRoleListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::UserRoleListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void UserRoleListMsg::set_allocated_response(::com::spplus::buff::UserRoleListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// UserMgrMsg_Request

// optional bytes mgrsql = 1;
inline bool UserMgrMsg_Request::has_mgrsql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMgrMsg_Request::set_has_mgrsql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMgrMsg_Request::clear_has_mgrsql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMgrMsg_Request::clear_mgrsql() {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    mgrsql_->clear();
  }
  clear_has_mgrsql();
}
inline const ::std::string& UserMgrMsg_Request::mgrsql() const {
  return *mgrsql_;
}
inline void UserMgrMsg_Request::set_mgrsql(const ::std::string& value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void UserMgrMsg_Request::set_mgrsql(const char* value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void UserMgrMsg_Request::set_mgrsql(const void* value, size_t size) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserMgrMsg_Request::mutable_mgrsql() {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  return mgrsql_;
}
inline ::std::string* UserMgrMsg_Request::release_mgrsql() {
  clear_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mgrsql_;
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserMgrMsg_Request::set_allocated_mgrsql(::std::string* mgrsql) {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    delete mgrsql_;
  }
  if (mgrsql) {
    set_has_mgrsql();
    mgrsql_ = mgrsql;
  } else {
    clear_has_mgrsql();
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UserMgrMsg_Response

// optional uint32 rescode = 1;
inline bool UserMgrMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMgrMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMgrMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMgrMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 UserMgrMsg_Response::rescode() const {
  return rescode_;
}
inline void UserMgrMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// UserMgrMsg

// optional .com.spplus.buff.UserMgrMsg.Request request = 1;
inline bool UserMgrMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMgrMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMgrMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMgrMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::UserMgrMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::UserMgrMsg_Request& UserMgrMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::UserMgrMsg_Request* UserMgrMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::UserMgrMsg_Request;
  return request_;
}
inline ::com::spplus::buff::UserMgrMsg_Request* UserMgrMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::UserMgrMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void UserMgrMsg::set_allocated_request(::com::spplus::buff::UserMgrMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.UserMgrMsg.Response response = 2;
inline bool UserMgrMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserMgrMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserMgrMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserMgrMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::UserMgrMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::UserMgrMsg_Response& UserMgrMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::UserMgrMsg_Response* UserMgrMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::UserMgrMsg_Response;
  return response_;
}
inline ::com::spplus::buff::UserMgrMsg_Response* UserMgrMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::UserMgrMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void UserMgrMsg::set_allocated_response(::com::spplus::buff::UserMgrMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// StationTypeMgrMsg_Request

// optional bytes mgrsql = 1;
inline bool StationTypeMgrMsg_Request::has_mgrsql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationTypeMgrMsg_Request::set_has_mgrsql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationTypeMgrMsg_Request::clear_has_mgrsql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationTypeMgrMsg_Request::clear_mgrsql() {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    mgrsql_->clear();
  }
  clear_has_mgrsql();
}
inline const ::std::string& StationTypeMgrMsg_Request::mgrsql() const {
  return *mgrsql_;
}
inline void StationTypeMgrMsg_Request::set_mgrsql(const ::std::string& value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void StationTypeMgrMsg_Request::set_mgrsql(const char* value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void StationTypeMgrMsg_Request::set_mgrsql(const void* value, size_t size) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StationTypeMgrMsg_Request::mutable_mgrsql() {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  return mgrsql_;
}
inline ::std::string* StationTypeMgrMsg_Request::release_mgrsql() {
  clear_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mgrsql_;
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StationTypeMgrMsg_Request::set_allocated_mgrsql(::std::string* mgrsql) {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    delete mgrsql_;
  }
  if (mgrsql) {
    set_has_mgrsql();
    mgrsql_ = mgrsql;
  } else {
    clear_has_mgrsql();
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// StationTypeMgrMsg_Response

// optional uint32 rescode = 1;
inline bool StationTypeMgrMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationTypeMgrMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationTypeMgrMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationTypeMgrMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 StationTypeMgrMsg_Response::rescode() const {
  return rescode_;
}
inline void StationTypeMgrMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// StationTypeMgrMsg

// optional .com.spplus.buff.StationTypeMgrMsg.Request request = 1;
inline bool StationTypeMgrMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationTypeMgrMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationTypeMgrMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationTypeMgrMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::StationTypeMgrMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::StationTypeMgrMsg_Request& StationTypeMgrMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::StationTypeMgrMsg_Request* StationTypeMgrMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::StationTypeMgrMsg_Request;
  return request_;
}
inline ::com::spplus::buff::StationTypeMgrMsg_Request* StationTypeMgrMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::StationTypeMgrMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void StationTypeMgrMsg::set_allocated_request(::com::spplus::buff::StationTypeMgrMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.StationTypeMgrMsg.Response response = 2;
inline bool StationTypeMgrMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StationTypeMgrMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StationTypeMgrMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StationTypeMgrMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::StationTypeMgrMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::StationTypeMgrMsg_Response& StationTypeMgrMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::StationTypeMgrMsg_Response* StationTypeMgrMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::StationTypeMgrMsg_Response;
  return response_;
}
inline ::com::spplus::buff::StationTypeMgrMsg_Response* StationTypeMgrMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::StationTypeMgrMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void StationTypeMgrMsg::set_allocated_response(::com::spplus::buff::StationTypeMgrMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// StationMgrMsg_Request

// optional bytes reqdate = 1;
inline bool StationMgrMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationMgrMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationMgrMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationMgrMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& StationMgrMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void StationMgrMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void StationMgrMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void StationMgrMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StationMgrMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* StationMgrMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StationMgrMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .com.spplus.buff.StationBean stationlist = 2;
inline int StationMgrMsg_Request::stationlist_size() const {
  return stationlist_.size();
}
inline void StationMgrMsg_Request::clear_stationlist() {
  stationlist_.Clear();
}
inline const ::com::spplus::buff::StationBean& StationMgrMsg_Request::stationlist(int index) const {
  return stationlist_.Get(index);
}
inline ::com::spplus::buff::StationBean* StationMgrMsg_Request::mutable_stationlist(int index) {
  return stationlist_.Mutable(index);
}
inline ::com::spplus::buff::StationBean* StationMgrMsg_Request::add_stationlist() {
  return stationlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >&
StationMgrMsg_Request::stationlist() const {
  return stationlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >*
StationMgrMsg_Request::mutable_stationlist() {
  return &stationlist_;
}

// -------------------------------------------------------------------

// StationMgrMsg_Response

// optional uint32 rescode = 1;
inline bool StationMgrMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationMgrMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationMgrMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationMgrMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 StationMgrMsg_Response::rescode() const {
  return rescode_;
}
inline void StationMgrMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// StationMgrMsg

// optional .com.spplus.buff.StationMgrMsg.Request request = 1;
inline bool StationMgrMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationMgrMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationMgrMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationMgrMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::StationMgrMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::StationMgrMsg_Request& StationMgrMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::StationMgrMsg_Request* StationMgrMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::StationMgrMsg_Request;
  return request_;
}
inline ::com::spplus::buff::StationMgrMsg_Request* StationMgrMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::StationMgrMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void StationMgrMsg::set_allocated_request(::com::spplus::buff::StationMgrMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.StationMgrMsg.Response response = 2;
inline bool StationMgrMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StationMgrMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StationMgrMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StationMgrMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::StationMgrMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::StationMgrMsg_Response& StationMgrMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::StationMgrMsg_Response* StationMgrMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::StationMgrMsg_Response;
  return response_;
}
inline ::com::spplus::buff::StationMgrMsg_Response* StationMgrMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::StationMgrMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void StationMgrMsg::set_allocated_response(::com::spplus::buff::StationMgrMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// RuleListMsg_Request

// optional bytes reqdate = 1;
inline bool RuleListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RuleListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RuleListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RuleListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& RuleListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void RuleListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void RuleListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void RuleListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RuleListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* RuleListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RuleListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RuleListMsg_Response

// optional uint32 rescode = 1;
inline bool RuleListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RuleListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RuleListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RuleListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 RuleListMsg_Response::rescode() const {
  return rescode_;
}
inline void RuleListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.RuleBean rulelist = 2;
inline int RuleListMsg_Response::rulelist_size() const {
  return rulelist_.size();
}
inline void RuleListMsg_Response::clear_rulelist() {
  rulelist_.Clear();
}
inline const ::com::spplus::buff::RuleBean& RuleListMsg_Response::rulelist(int index) const {
  return rulelist_.Get(index);
}
inline ::com::spplus::buff::RuleBean* RuleListMsg_Response::mutable_rulelist(int index) {
  return rulelist_.Mutable(index);
}
inline ::com::spplus::buff::RuleBean* RuleListMsg_Response::add_rulelist() {
  return rulelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::RuleBean >&
RuleListMsg_Response::rulelist() const {
  return rulelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::RuleBean >*
RuleListMsg_Response::mutable_rulelist() {
  return &rulelist_;
}

// -------------------------------------------------------------------

// RuleListMsg

// optional .com.spplus.buff.RuleListMsg.Request request = 1;
inline bool RuleListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RuleListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RuleListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RuleListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::RuleListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::RuleListMsg_Request& RuleListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::RuleListMsg_Request* RuleListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::RuleListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::RuleListMsg_Request* RuleListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::RuleListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void RuleListMsg::set_allocated_request(::com::spplus::buff::RuleListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.RuleListMsg.Response response = 2;
inline bool RuleListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RuleListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RuleListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RuleListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::RuleListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::RuleListMsg_Response& RuleListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::RuleListMsg_Response* RuleListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::RuleListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::RuleListMsg_Response* RuleListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::RuleListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void RuleListMsg::set_allocated_response(::com::spplus::buff::RuleListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// RuleMgrMsg_Request

// optional bytes mgrsql = 1;
inline bool RuleMgrMsg_Request::has_mgrsql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RuleMgrMsg_Request::set_has_mgrsql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RuleMgrMsg_Request::clear_has_mgrsql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RuleMgrMsg_Request::clear_mgrsql() {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    mgrsql_->clear();
  }
  clear_has_mgrsql();
}
inline const ::std::string& RuleMgrMsg_Request::mgrsql() const {
  return *mgrsql_;
}
inline void RuleMgrMsg_Request::set_mgrsql(const ::std::string& value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void RuleMgrMsg_Request::set_mgrsql(const char* value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void RuleMgrMsg_Request::set_mgrsql(const void* value, size_t size) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RuleMgrMsg_Request::mutable_mgrsql() {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  return mgrsql_;
}
inline ::std::string* RuleMgrMsg_Request::release_mgrsql() {
  clear_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mgrsql_;
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RuleMgrMsg_Request::set_allocated_mgrsql(::std::string* mgrsql) {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    delete mgrsql_;
  }
  if (mgrsql) {
    set_has_mgrsql();
    mgrsql_ = mgrsql;
  } else {
    clear_has_mgrsql();
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RuleMgrMsg_Response

// optional uint32 rescode = 1;
inline bool RuleMgrMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RuleMgrMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RuleMgrMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RuleMgrMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 RuleMgrMsg_Response::rescode() const {
  return rescode_;
}
inline void RuleMgrMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// RuleMgrMsg

// optional .com.spplus.buff.RuleMgrMsg.Request request = 1;
inline bool RuleMgrMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RuleMgrMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RuleMgrMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RuleMgrMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::RuleMgrMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::RuleMgrMsg_Request& RuleMgrMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::RuleMgrMsg_Request* RuleMgrMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::RuleMgrMsg_Request;
  return request_;
}
inline ::com::spplus::buff::RuleMgrMsg_Request* RuleMgrMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::RuleMgrMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void RuleMgrMsg::set_allocated_request(::com::spplus::buff::RuleMgrMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.RuleMgrMsg.Response response = 2;
inline bool RuleMgrMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RuleMgrMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RuleMgrMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RuleMgrMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::RuleMgrMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::RuleMgrMsg_Response& RuleMgrMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::RuleMgrMsg_Response* RuleMgrMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::RuleMgrMsg_Response;
  return response_;
}
inline ::com::spplus::buff::RuleMgrMsg_Response* RuleMgrMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::RuleMgrMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void RuleMgrMsg::set_allocated_response(::com::spplus::buff::RuleMgrMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// StationRuleListMsg_Request

// optional bytes reqdate = 1;
inline bool StationRuleListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationRuleListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationRuleListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationRuleListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& StationRuleListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void StationRuleListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void StationRuleListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void StationRuleListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StationRuleListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* StationRuleListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StationRuleListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// StationRuleListMsg_Response

// optional uint32 rescode = 1;
inline bool StationRuleListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationRuleListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationRuleListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationRuleListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 StationRuleListMsg_Response::rescode() const {
  return rescode_;
}
inline void StationRuleListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.StationRuleBean starulelist = 2;
inline int StationRuleListMsg_Response::starulelist_size() const {
  return starulelist_.size();
}
inline void StationRuleListMsg_Response::clear_starulelist() {
  starulelist_.Clear();
}
inline const ::com::spplus::buff::StationRuleBean& StationRuleListMsg_Response::starulelist(int index) const {
  return starulelist_.Get(index);
}
inline ::com::spplus::buff::StationRuleBean* StationRuleListMsg_Response::mutable_starulelist(int index) {
  return starulelist_.Mutable(index);
}
inline ::com::spplus::buff::StationRuleBean* StationRuleListMsg_Response::add_starulelist() {
  return starulelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationRuleBean >&
StationRuleListMsg_Response::starulelist() const {
  return starulelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationRuleBean >*
StationRuleListMsg_Response::mutable_starulelist() {
  return &starulelist_;
}

// -------------------------------------------------------------------

// StationRuleListMsg

// optional .com.spplus.buff.StationRuleListMsg.Request request = 1;
inline bool StationRuleListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationRuleListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationRuleListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationRuleListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::StationRuleListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::StationRuleListMsg_Request& StationRuleListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::StationRuleListMsg_Request* StationRuleListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::StationRuleListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::StationRuleListMsg_Request* StationRuleListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::StationRuleListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void StationRuleListMsg::set_allocated_request(::com::spplus::buff::StationRuleListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.StationRuleListMsg.Response response = 2;
inline bool StationRuleListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StationRuleListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StationRuleListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StationRuleListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::StationRuleListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::StationRuleListMsg_Response& StationRuleListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::StationRuleListMsg_Response* StationRuleListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::StationRuleListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::StationRuleListMsg_Response* StationRuleListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::StationRuleListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void StationRuleListMsg::set_allocated_response(::com::spplus::buff::StationRuleListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// StationRuleMgrMsg_Request

// optional uint32 reqtype = 1;
inline bool StationRuleMgrMsg_Request::has_reqtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationRuleMgrMsg_Request::set_has_reqtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationRuleMgrMsg_Request::clear_has_reqtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationRuleMgrMsg_Request::clear_reqtype() {
  reqtype_ = 0u;
  clear_has_reqtype();
}
inline ::google::protobuf::uint32 StationRuleMgrMsg_Request::reqtype() const {
  return reqtype_;
}
inline void StationRuleMgrMsg_Request::set_reqtype(::google::protobuf::uint32 value) {
  set_has_reqtype();
  reqtype_ = value;
}

// optional bytes mgrsql = 2;
inline bool StationRuleMgrMsg_Request::has_mgrsql() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StationRuleMgrMsg_Request::set_has_mgrsql() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StationRuleMgrMsg_Request::clear_has_mgrsql() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StationRuleMgrMsg_Request::clear_mgrsql() {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    mgrsql_->clear();
  }
  clear_has_mgrsql();
}
inline const ::std::string& StationRuleMgrMsg_Request::mgrsql() const {
  return *mgrsql_;
}
inline void StationRuleMgrMsg_Request::set_mgrsql(const ::std::string& value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void StationRuleMgrMsg_Request::set_mgrsql(const char* value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void StationRuleMgrMsg_Request::set_mgrsql(const void* value, size_t size) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StationRuleMgrMsg_Request::mutable_mgrsql() {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  return mgrsql_;
}
inline ::std::string* StationRuleMgrMsg_Request::release_mgrsql() {
  clear_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mgrsql_;
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StationRuleMgrMsg_Request::set_allocated_mgrsql(::std::string* mgrsql) {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    delete mgrsql_;
  }
  if (mgrsql) {
    set_has_mgrsql();
    mgrsql_ = mgrsql;
  } else {
    clear_has_mgrsql();
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .com.spplus.buff.StationRuleBean stationrllist = 3;
inline int StationRuleMgrMsg_Request::stationrllist_size() const {
  return stationrllist_.size();
}
inline void StationRuleMgrMsg_Request::clear_stationrllist() {
  stationrllist_.Clear();
}
inline const ::com::spplus::buff::StationRuleBean& StationRuleMgrMsg_Request::stationrllist(int index) const {
  return stationrllist_.Get(index);
}
inline ::com::spplus::buff::StationRuleBean* StationRuleMgrMsg_Request::mutable_stationrllist(int index) {
  return stationrllist_.Mutable(index);
}
inline ::com::spplus::buff::StationRuleBean* StationRuleMgrMsg_Request::add_stationrllist() {
  return stationrllist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationRuleBean >&
StationRuleMgrMsg_Request::stationrllist() const {
  return stationrllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationRuleBean >*
StationRuleMgrMsg_Request::mutable_stationrllist() {
  return &stationrllist_;
}

// -------------------------------------------------------------------

// StationRuleMgrMsg_Response

// optional uint32 rescode = 1;
inline bool StationRuleMgrMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationRuleMgrMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationRuleMgrMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationRuleMgrMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 StationRuleMgrMsg_Response::rescode() const {
  return rescode_;
}
inline void StationRuleMgrMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// StationRuleMgrMsg

// optional .com.spplus.buff.StationRuleMgrMsg.Request request = 1;
inline bool StationRuleMgrMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationRuleMgrMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationRuleMgrMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationRuleMgrMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::StationRuleMgrMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::StationRuleMgrMsg_Request& StationRuleMgrMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::StationRuleMgrMsg_Request* StationRuleMgrMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::StationRuleMgrMsg_Request;
  return request_;
}
inline ::com::spplus::buff::StationRuleMgrMsg_Request* StationRuleMgrMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::StationRuleMgrMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void StationRuleMgrMsg::set_allocated_request(::com::spplus::buff::StationRuleMgrMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.StationRuleMgrMsg.Response response = 2;
inline bool StationRuleMgrMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StationRuleMgrMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StationRuleMgrMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StationRuleMgrMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::StationRuleMgrMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::StationRuleMgrMsg_Response& StationRuleMgrMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::StationRuleMgrMsg_Response* StationRuleMgrMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::StationRuleMgrMsg_Response;
  return response_;
}
inline ::com::spplus::buff::StationRuleMgrMsg_Response* StationRuleMgrMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::StationRuleMgrMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void StationRuleMgrMsg::set_allocated_response(::com::spplus::buff::StationRuleMgrMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// CircleListMsg_Request

// optional uint32 saveId = 1;
inline bool CircleListMsg_Request::has_saveid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CircleListMsg_Request::set_has_saveid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CircleListMsg_Request::clear_has_saveid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CircleListMsg_Request::clear_saveid() {
  saveid_ = 0u;
  clear_has_saveid();
}
inline ::google::protobuf::uint32 CircleListMsg_Request::saveid() const {
  return saveid_;
}
inline void CircleListMsg_Request::set_saveid(::google::protobuf::uint32 value) {
  set_has_saveid();
  saveid_ = value;
}

// -------------------------------------------------------------------

// CircleListMsg_Response

// optional uint32 rescode = 1;
inline bool CircleListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CircleListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CircleListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CircleListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 CircleListMsg_Response::rescode() const {
  return rescode_;
}
inline void CircleListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.CircleQueryBean circlelist = 2;
inline int CircleListMsg_Response::circlelist_size() const {
  return circlelist_.size();
}
inline void CircleListMsg_Response::clear_circlelist() {
  circlelist_.Clear();
}
inline const ::com::spplus::buff::CircleQueryBean& CircleListMsg_Response::circlelist(int index) const {
  return circlelist_.Get(index);
}
inline ::com::spplus::buff::CircleQueryBean* CircleListMsg_Response::mutable_circlelist(int index) {
  return circlelist_.Mutable(index);
}
inline ::com::spplus::buff::CircleQueryBean* CircleListMsg_Response::add_circlelist() {
  return circlelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::CircleQueryBean >&
CircleListMsg_Response::circlelist() const {
  return circlelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::CircleQueryBean >*
CircleListMsg_Response::mutable_circlelist() {
  return &circlelist_;
}

// -------------------------------------------------------------------

// CircleListMsg

// optional .com.spplus.buff.CircleListMsg.Request request = 1;
inline bool CircleListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CircleListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CircleListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CircleListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::CircleListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::CircleListMsg_Request& CircleListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::CircleListMsg_Request* CircleListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::CircleListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::CircleListMsg_Request* CircleListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::CircleListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void CircleListMsg::set_allocated_request(::com::spplus::buff::CircleListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.CircleListMsg.Response response = 2;
inline bool CircleListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CircleListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CircleListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CircleListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::CircleListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::CircleListMsg_Response& CircleListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::CircleListMsg_Response* CircleListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::CircleListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::CircleListMsg_Response* CircleListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::CircleListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void CircleListMsg::set_allocated_response(::com::spplus::buff::CircleListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// SignListMsg_Request

// optional bytes reqdate = 1;
inline bool SignListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& SignListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void SignListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void SignListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void SignListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SignListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* SignListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SignListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SignListMsg_Response

// optional uint32 rescode = 1;
inline bool SignListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 SignListMsg_Response::rescode() const {
  return rescode_;
}
inline void SignListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.SignQueryBean signlist = 2;
inline int SignListMsg_Response::signlist_size() const {
  return signlist_.size();
}
inline void SignListMsg_Response::clear_signlist() {
  signlist_.Clear();
}
inline const ::com::spplus::buff::SignQueryBean& SignListMsg_Response::signlist(int index) const {
  return signlist_.Get(index);
}
inline ::com::spplus::buff::SignQueryBean* SignListMsg_Response::mutable_signlist(int index) {
  return signlist_.Mutable(index);
}
inline ::com::spplus::buff::SignQueryBean* SignListMsg_Response::add_signlist() {
  return signlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::SignQueryBean >&
SignListMsg_Response::signlist() const {
  return signlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::SignQueryBean >*
SignListMsg_Response::mutable_signlist() {
  return &signlist_;
}

// -------------------------------------------------------------------

// SignListMsg

// optional .com.spplus.buff.SignListMsg.Request request = 1;
inline bool SignListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::SignListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::SignListMsg_Request& SignListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::SignListMsg_Request* SignListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::SignListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::SignListMsg_Request* SignListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::SignListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void SignListMsg::set_allocated_request(::com::spplus::buff::SignListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.SignListMsg.Response response = 2;
inline bool SignListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SignListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SignListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SignListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::SignListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::SignListMsg_Response& SignListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::SignListMsg_Response* SignListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::SignListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::SignListMsg_Response* SignListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::SignListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void SignListMsg::set_allocated_response(::com::spplus::buff::SignListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// GswitchListMsg_Request

// optional bytes reqdate = 1;
inline bool GswitchListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GswitchListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GswitchListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GswitchListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& GswitchListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void GswitchListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void GswitchListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void GswitchListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GswitchListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* GswitchListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GswitchListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GswitchListMsg_Response

// optional uint32 rescode = 1;
inline bool GswitchListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GswitchListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GswitchListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GswitchListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 GswitchListMsg_Response::rescode() const {
  return rescode_;
}
inline void GswitchListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.GswitchQueryBean gswitchlist = 2;
inline int GswitchListMsg_Response::gswitchlist_size() const {
  return gswitchlist_.size();
}
inline void GswitchListMsg_Response::clear_gswitchlist() {
  gswitchlist_.Clear();
}
inline const ::com::spplus::buff::GswitchQueryBean& GswitchListMsg_Response::gswitchlist(int index) const {
  return gswitchlist_.Get(index);
}
inline ::com::spplus::buff::GswitchQueryBean* GswitchListMsg_Response::mutable_gswitchlist(int index) {
  return gswitchlist_.Mutable(index);
}
inline ::com::spplus::buff::GswitchQueryBean* GswitchListMsg_Response::add_gswitchlist() {
  return gswitchlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::GswitchQueryBean >&
GswitchListMsg_Response::gswitchlist() const {
  return gswitchlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::GswitchQueryBean >*
GswitchListMsg_Response::mutable_gswitchlist() {
  return &gswitchlist_;
}

// -------------------------------------------------------------------

// GswitchListMsg

// optional .com.spplus.buff.GswitchListMsg.Request request = 1;
inline bool GswitchListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GswitchListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GswitchListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GswitchListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::GswitchListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::GswitchListMsg_Request& GswitchListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::GswitchListMsg_Request* GswitchListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::GswitchListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::GswitchListMsg_Request* GswitchListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::GswitchListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void GswitchListMsg::set_allocated_request(::com::spplus::buff::GswitchListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.GswitchListMsg.Response response = 2;
inline bool GswitchListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GswitchListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GswitchListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GswitchListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::GswitchListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::GswitchListMsg_Response& GswitchListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::GswitchListMsg_Response* GswitchListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::GswitchListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::GswitchListMsg_Response* GswitchListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::GswitchListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void GswitchListMsg::set_allocated_response(::com::spplus::buff::GswitchListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// MsetListMsg_Request

// optional bytes reqdate = 1;
inline bool MsetListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsetListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsetListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsetListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& MsetListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void MsetListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void MsetListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void MsetListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsetListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* MsetListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsetListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsetListMsg_Response

// optional uint32 rescode = 1;
inline bool MsetListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsetListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsetListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsetListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 MsetListMsg_Response::rescode() const {
  return rescode_;
}
inline void MsetListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.MsetQueryBean msetlist = 2;
inline int MsetListMsg_Response::msetlist_size() const {
  return msetlist_.size();
}
inline void MsetListMsg_Response::clear_msetlist() {
  msetlist_.Clear();
}
inline const ::com::spplus::buff::MsetQueryBean& MsetListMsg_Response::msetlist(int index) const {
  return msetlist_.Get(index);
}
inline ::com::spplus::buff::MsetQueryBean* MsetListMsg_Response::mutable_msetlist(int index) {
  return msetlist_.Mutable(index);
}
inline ::com::spplus::buff::MsetQueryBean* MsetListMsg_Response::add_msetlist() {
  return msetlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::MsetQueryBean >&
MsetListMsg_Response::msetlist() const {
  return msetlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::MsetQueryBean >*
MsetListMsg_Response::mutable_msetlist() {
  return &msetlist_;
}

// -------------------------------------------------------------------

// MsetListMsg

// optional .com.spplus.buff.MsetListMsg.Request request = 1;
inline bool MsetListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsetListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsetListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsetListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::MsetListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::MsetListMsg_Request& MsetListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::MsetListMsg_Request* MsetListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::MsetListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::MsetListMsg_Request* MsetListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::MsetListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void MsetListMsg::set_allocated_request(::com::spplus::buff::MsetListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.MsetListMsg.Response response = 2;
inline bool MsetListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsetListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsetListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsetListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::MsetListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::MsetListMsg_Response& MsetListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::MsetListMsg_Response* MsetListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::MsetListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::MsetListMsg_Response* MsetListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::MsetListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void MsetListMsg::set_allocated_response(::com::spplus::buff::MsetListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// EventListMsg_Request

// optional bytes reqdate = 1;
inline bool EventListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& EventListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void EventListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void EventListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void EventListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EventListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* EventListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void EventListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// EventListMsg_Response

// optional uint32 rescode = 1;
inline bool EventListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 EventListMsg_Response::rescode() const {
  return rescode_;
}
inline void EventListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.EventQueryBean eventlist = 2;
inline int EventListMsg_Response::eventlist_size() const {
  return eventlist_.size();
}
inline void EventListMsg_Response::clear_eventlist() {
  eventlist_.Clear();
}
inline const ::com::spplus::buff::EventQueryBean& EventListMsg_Response::eventlist(int index) const {
  return eventlist_.Get(index);
}
inline ::com::spplus::buff::EventQueryBean* EventListMsg_Response::mutable_eventlist(int index) {
  return eventlist_.Mutable(index);
}
inline ::com::spplus::buff::EventQueryBean* EventListMsg_Response::add_eventlist() {
  return eventlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::EventQueryBean >&
EventListMsg_Response::eventlist() const {
  return eventlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::EventQueryBean >*
EventListMsg_Response::mutable_eventlist() {
  return &eventlist_;
}

// -------------------------------------------------------------------

// EventListMsg

// optional .com.spplus.buff.EventListMsg.Request request = 1;
inline bool EventListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::EventListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::EventListMsg_Request& EventListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::EventListMsg_Request* EventListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::EventListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::EventListMsg_Request* EventListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::EventListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void EventListMsg::set_allocated_request(::com::spplus::buff::EventListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.EventListMsg.Response response = 2;
inline bool EventListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::EventListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::EventListMsg_Response& EventListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::EventListMsg_Response* EventListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::EventListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::EventListMsg_Response* EventListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::EventListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void EventListMsg::set_allocated_response(::com::spplus::buff::EventListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// DevStateMsg_Request

// optional uint32 saveId = 1;
inline bool DevStateMsg_Request::has_saveid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DevStateMsg_Request::set_has_saveid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DevStateMsg_Request::clear_has_saveid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DevStateMsg_Request::clear_saveid() {
  saveid_ = 0u;
  clear_has_saveid();
}
inline ::google::protobuf::uint32 DevStateMsg_Request::saveid() const {
  return saveid_;
}
inline void DevStateMsg_Request::set_saveid(::google::protobuf::uint32 value) {
  set_has_saveid();
  saveid_ = value;
}

// optional bytes stationCim = 2;
inline bool DevStateMsg_Request::has_stationcim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DevStateMsg_Request::set_has_stationcim() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DevStateMsg_Request::clear_has_stationcim() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DevStateMsg_Request::clear_stationcim() {
  if (stationcim_ != &::google::protobuf::internal::kEmptyString) {
    stationcim_->clear();
  }
  clear_has_stationcim();
}
inline const ::std::string& DevStateMsg_Request::stationcim() const {
  return *stationcim_;
}
inline void DevStateMsg_Request::set_stationcim(const ::std::string& value) {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  stationcim_->assign(value);
}
inline void DevStateMsg_Request::set_stationcim(const char* value) {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  stationcim_->assign(value);
}
inline void DevStateMsg_Request::set_stationcim(const void* value, size_t size) {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  stationcim_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DevStateMsg_Request::mutable_stationcim() {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  return stationcim_;
}
inline ::std::string* DevStateMsg_Request::release_stationcim() {
  clear_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stationcim_;
    stationcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DevStateMsg_Request::set_allocated_stationcim(::std::string* stationcim) {
  if (stationcim_ != &::google::protobuf::internal::kEmptyString) {
    delete stationcim_;
  }
  if (stationcim) {
    set_has_stationcim();
    stationcim_ = stationcim;
  } else {
    clear_has_stationcim();
    stationcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes unitCim = 3;
inline bool DevStateMsg_Request::has_unitcim() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DevStateMsg_Request::set_has_unitcim() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DevStateMsg_Request::clear_has_unitcim() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DevStateMsg_Request::clear_unitcim() {
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    unitcim_->clear();
  }
  clear_has_unitcim();
}
inline const ::std::string& DevStateMsg_Request::unitcim() const {
  return *unitcim_;
}
inline void DevStateMsg_Request::set_unitcim(const ::std::string& value) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(value);
}
inline void DevStateMsg_Request::set_unitcim(const char* value) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(value);
}
inline void DevStateMsg_Request::set_unitcim(const void* value, size_t size) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DevStateMsg_Request::mutable_unitcim() {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  return unitcim_;
}
inline ::std::string* DevStateMsg_Request::release_unitcim() {
  clear_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unitcim_;
    unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DevStateMsg_Request::set_allocated_unitcim(::std::string* unitcim) {
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    delete unitcim_;
  }
  if (unitcim) {
    set_has_unitcim();
    unitcim_ = unitcim;
  } else {
    clear_has_unitcim();
    unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DevStateMsg_Response

// optional uint32 rescode = 1;
inline bool DevStateMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DevStateMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DevStateMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DevStateMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 DevStateMsg_Response::rescode() const {
  return rescode_;
}
inline void DevStateMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.StateBean devState = 2;
inline int DevStateMsg_Response::devstate_size() const {
  return devstate_.size();
}
inline void DevStateMsg_Response::clear_devstate() {
  devstate_.Clear();
}
inline const ::com::spplus::buff::StateBean& DevStateMsg_Response::devstate(int index) const {
  return devstate_.Get(index);
}
inline ::com::spplus::buff::StateBean* DevStateMsg_Response::mutable_devstate(int index) {
  return devstate_.Mutable(index);
}
inline ::com::spplus::buff::StateBean* DevStateMsg_Response::add_devstate() {
  return devstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >&
DevStateMsg_Response::devstate() const {
  return devstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >*
DevStateMsg_Response::mutable_devstate() {
  return &devstate_;
}

// -------------------------------------------------------------------

// DevStateMsg

// optional .com.spplus.buff.DevStateMsg.Request request = 1;
inline bool DevStateMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DevStateMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DevStateMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DevStateMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::DevStateMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::DevStateMsg_Request& DevStateMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::DevStateMsg_Request* DevStateMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::DevStateMsg_Request;
  return request_;
}
inline ::com::spplus::buff::DevStateMsg_Request* DevStateMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::DevStateMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void DevStateMsg::set_allocated_request(::com::spplus::buff::DevStateMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.DevStateMsg.Response response = 2;
inline bool DevStateMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DevStateMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DevStateMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DevStateMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::DevStateMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::DevStateMsg_Response& DevStateMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::DevStateMsg_Response* DevStateMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::DevStateMsg_Response;
  return response_;
}
inline ::com::spplus::buff::DevStateMsg_Response* DevStateMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::DevStateMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void DevStateMsg::set_allocated_response(::com::spplus::buff::DevStateMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// StationTypeMsg_Request

// optional uint32 saveId = 1;
inline bool StationTypeMsg_Request::has_saveid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationTypeMsg_Request::set_has_saveid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationTypeMsg_Request::clear_has_saveid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationTypeMsg_Request::clear_saveid() {
  saveid_ = 0u;
  clear_has_saveid();
}
inline ::google::protobuf::uint32 StationTypeMsg_Request::saveid() const {
  return saveid_;
}
inline void StationTypeMsg_Request::set_saveid(::google::protobuf::uint32 value) {
  set_has_saveid();
  saveid_ = value;
}

// -------------------------------------------------------------------

// StationTypeMsg_Response

// optional uint32 rescode = 1;
inline bool StationTypeMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationTypeMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationTypeMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationTypeMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 StationTypeMsg_Response::rescode() const {
  return rescode_;
}
inline void StationTypeMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.StationTypeBean typeList = 2;
inline int StationTypeMsg_Response::typelist_size() const {
  return typelist_.size();
}
inline void StationTypeMsg_Response::clear_typelist() {
  typelist_.Clear();
}
inline const ::com::spplus::buff::StationTypeBean& StationTypeMsg_Response::typelist(int index) const {
  return typelist_.Get(index);
}
inline ::com::spplus::buff::StationTypeBean* StationTypeMsg_Response::mutable_typelist(int index) {
  return typelist_.Mutable(index);
}
inline ::com::spplus::buff::StationTypeBean* StationTypeMsg_Response::add_typelist() {
  return typelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationTypeBean >&
StationTypeMsg_Response::typelist() const {
  return typelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationTypeBean >*
StationTypeMsg_Response::mutable_typelist() {
  return &typelist_;
}

// -------------------------------------------------------------------

// StationTypeMsg

// optional .com.spplus.buff.StationTypeMsg.Request request = 1;
inline bool StationTypeMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationTypeMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationTypeMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationTypeMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::StationTypeMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::StationTypeMsg_Request& StationTypeMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::StationTypeMsg_Request* StationTypeMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::StationTypeMsg_Request;
  return request_;
}
inline ::com::spplus::buff::StationTypeMsg_Request* StationTypeMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::StationTypeMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void StationTypeMsg::set_allocated_request(::com::spplus::buff::StationTypeMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.StationTypeMsg.Response response = 2;
inline bool StationTypeMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StationTypeMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StationTypeMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StationTypeMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::StationTypeMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::StationTypeMsg_Response& StationTypeMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::StationTypeMsg_Response* StationTypeMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::StationTypeMsg_Response;
  return response_;
}
inline ::com::spplus::buff::StationTypeMsg_Response* StationTypeMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::StationTypeMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void StationTypeMsg::set_allocated_response(::com::spplus::buff::StationTypeMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// StationListMsg_Request

// optional uint32 stationId = 1;
inline bool StationListMsg_Request::has_stationid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationListMsg_Request::set_has_stationid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationListMsg_Request::clear_has_stationid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationListMsg_Request::clear_stationid() {
  stationid_ = 0u;
  clear_has_stationid();
}
inline ::google::protobuf::uint32 StationListMsg_Request::stationid() const {
  return stationid_;
}
inline void StationListMsg_Request::set_stationid(::google::protobuf::uint32 value) {
  set_has_stationid();
  stationid_ = value;
}

// -------------------------------------------------------------------

// StationListMsg_Response

// optional uint32 rescode = 1;
inline bool StationListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 StationListMsg_Response::rescode() const {
  return rescode_;
}
inline void StationListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.StationBean stationList = 2;
inline int StationListMsg_Response::stationlist_size() const {
  return stationlist_.size();
}
inline void StationListMsg_Response::clear_stationlist() {
  stationlist_.Clear();
}
inline const ::com::spplus::buff::StationBean& StationListMsg_Response::stationlist(int index) const {
  return stationlist_.Get(index);
}
inline ::com::spplus::buff::StationBean* StationListMsg_Response::mutable_stationlist(int index) {
  return stationlist_.Mutable(index);
}
inline ::com::spplus::buff::StationBean* StationListMsg_Response::add_stationlist() {
  return stationlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >&
StationListMsg_Response::stationlist() const {
  return stationlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StationBean >*
StationListMsg_Response::mutable_stationlist() {
  return &stationlist_;
}

// -------------------------------------------------------------------

// StationListMsg

// optional .com.spplus.buff.StationListMsg.Request request = 1;
inline bool StationListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StationListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StationListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StationListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::StationListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::StationListMsg_Request& StationListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::StationListMsg_Request* StationListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::StationListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::StationListMsg_Request* StationListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::StationListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void StationListMsg::set_allocated_request(::com::spplus::buff::StationListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.StationListMsg.Response response = 2;
inline bool StationListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StationListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StationListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StationListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::StationListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::StationListMsg_Response& StationListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::StationListMsg_Response* StationListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::StationListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::StationListMsg_Response* StationListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::StationListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void StationListMsg::set_allocated_response(::com::spplus::buff::StationListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// TagMsg_Request

// optional uint32 saveId = 1;
inline bool TagMsg_Request::has_saveid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TagMsg_Request::set_has_saveid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TagMsg_Request::clear_has_saveid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TagMsg_Request::clear_saveid() {
  saveid_ = 0u;
  clear_has_saveid();
}
inline ::google::protobuf::uint32 TagMsg_Request::saveid() const {
  return saveid_;
}
inline void TagMsg_Request::set_saveid(::google::protobuf::uint32 value) {
  set_has_saveid();
  saveid_ = value;
}

// optional uint32 type = 2;
inline bool TagMsg_Request::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TagMsg_Request::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TagMsg_Request::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TagMsg_Request::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 TagMsg_Request::type() const {
  return type_;
}
inline void TagMsg_Request::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional bytes unitCim = 3;
inline bool TagMsg_Request::has_unitcim() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TagMsg_Request::set_has_unitcim() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TagMsg_Request::clear_has_unitcim() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TagMsg_Request::clear_unitcim() {
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    unitcim_->clear();
  }
  clear_has_unitcim();
}
inline const ::std::string& TagMsg_Request::unitcim() const {
  return *unitcim_;
}
inline void TagMsg_Request::set_unitcim(const ::std::string& value) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(value);
}
inline void TagMsg_Request::set_unitcim(const char* value) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(value);
}
inline void TagMsg_Request::set_unitcim(const void* value, size_t size) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TagMsg_Request::mutable_unitcim() {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  return unitcim_;
}
inline ::std::string* TagMsg_Request::release_unitcim() {
  clear_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unitcim_;
    unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TagMsg_Request::set_allocated_unitcim(::std::string* unitcim) {
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    delete unitcim_;
  }
  if (unitcim) {
    set_has_unitcim();
    unitcim_ = unitcim;
  } else {
    clear_has_unitcim();
    unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TagMsg_Response

// optional uint32 rescode = 1;
inline bool TagMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TagMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TagMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TagMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 TagMsg_Response::rescode() const {
  return rescode_;
}
inline void TagMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// optional bytes resmsg = 2;
inline bool TagMsg_Response::has_resmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TagMsg_Response::set_has_resmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TagMsg_Response::clear_has_resmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TagMsg_Response::clear_resmsg() {
  if (resmsg_ != &::google::protobuf::internal::kEmptyString) {
    resmsg_->clear();
  }
  clear_has_resmsg();
}
inline const ::std::string& TagMsg_Response::resmsg() const {
  return *resmsg_;
}
inline void TagMsg_Response::set_resmsg(const ::std::string& value) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(value);
}
inline void TagMsg_Response::set_resmsg(const char* value) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(value);
}
inline void TagMsg_Response::set_resmsg(const void* value, size_t size) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TagMsg_Response::mutable_resmsg() {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  return resmsg_;
}
inline ::std::string* TagMsg_Response::release_resmsg() {
  clear_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resmsg_;
    resmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TagMsg_Response::set_allocated_resmsg(::std::string* resmsg) {
  if (resmsg_ != &::google::protobuf::internal::kEmptyString) {
    delete resmsg_;
  }
  if (resmsg) {
    set_has_resmsg();
    resmsg_ = resmsg;
  } else {
    clear_has_resmsg();
    resmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TagMsg

// optional .com.spplus.buff.TagMsg.Request request = 1;
inline bool TagMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TagMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TagMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TagMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::TagMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::TagMsg_Request& TagMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::TagMsg_Request* TagMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::TagMsg_Request;
  return request_;
}
inline ::com::spplus::buff::TagMsg_Request* TagMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::TagMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void TagMsg::set_allocated_request(::com::spplus::buff::TagMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.TagMsg.Response response = 2;
inline bool TagMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TagMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TagMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TagMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::TagMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::TagMsg_Response& TagMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::TagMsg_Response* TagMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::TagMsg_Response;
  return response_;
}
inline ::com::spplus::buff::TagMsg_Response* TagMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::TagMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void TagMsg::set_allocated_response(::com::spplus::buff::TagMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// OprationMsg_Request

// optional uint32 saveId = 1;
inline bool OprationMsg_Request::has_saveid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OprationMsg_Request::set_has_saveid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OprationMsg_Request::clear_has_saveid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OprationMsg_Request::clear_saveid() {
  saveid_ = 0u;
  clear_has_saveid();
}
inline ::google::protobuf::uint32 OprationMsg_Request::saveid() const {
  return saveid_;
}
inline void OprationMsg_Request::set_saveid(::google::protobuf::uint32 value) {
  set_has_saveid();
  saveid_ = value;
}

// optional uint32 type = 2;
inline bool OprationMsg_Request::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OprationMsg_Request::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OprationMsg_Request::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OprationMsg_Request::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 OprationMsg_Request::type() const {
  return type_;
}
inline void OprationMsg_Request::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional bytes unitCim = 3;
inline bool OprationMsg_Request::has_unitcim() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OprationMsg_Request::set_has_unitcim() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OprationMsg_Request::clear_has_unitcim() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OprationMsg_Request::clear_unitcim() {
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    unitcim_->clear();
  }
  clear_has_unitcim();
}
inline const ::std::string& OprationMsg_Request::unitcim() const {
  return *unitcim_;
}
inline void OprationMsg_Request::set_unitcim(const ::std::string& value) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(value);
}
inline void OprationMsg_Request::set_unitcim(const char* value) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(value);
}
inline void OprationMsg_Request::set_unitcim(const void* value, size_t size) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OprationMsg_Request::mutable_unitcim() {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  return unitcim_;
}
inline ::std::string* OprationMsg_Request::release_unitcim() {
  clear_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unitcim_;
    unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OprationMsg_Request::set_allocated_unitcim(::std::string* unitcim) {
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    delete unitcim_;
  }
  if (unitcim) {
    set_has_unitcim();
    unitcim_ = unitcim;
  } else {
    clear_has_unitcim();
    unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool ischeck = 4;
inline bool OprationMsg_Request::has_ischeck() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OprationMsg_Request::set_has_ischeck() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OprationMsg_Request::clear_has_ischeck() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OprationMsg_Request::clear_ischeck() {
  ischeck_ = false;
  clear_has_ischeck();
}
inline bool OprationMsg_Request::ischeck() const {
  return ischeck_;
}
inline void OprationMsg_Request::set_ischeck(bool value) {
  set_has_ischeck();
  ischeck_ = value;
}

// optional uint32 unittype = 5;
inline bool OprationMsg_Request::has_unittype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OprationMsg_Request::set_has_unittype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OprationMsg_Request::clear_has_unittype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OprationMsg_Request::clear_unittype() {
  unittype_ = 0u;
  clear_has_unittype();
}
inline ::google::protobuf::uint32 OprationMsg_Request::unittype() const {
  return unittype_;
}
inline void OprationMsg_Request::set_unittype(::google::protobuf::uint32 value) {
  set_has_unittype();
  unittype_ = value;
}

// -------------------------------------------------------------------

// OprationMsg_Response

// optional uint32 rescode = 1;
inline bool OprationMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OprationMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OprationMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OprationMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 OprationMsg_Response::rescode() const {
  return rescode_;
}
inline void OprationMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// optional bytes resmsg = 2;
inline bool OprationMsg_Response::has_resmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OprationMsg_Response::set_has_resmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OprationMsg_Response::clear_has_resmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OprationMsg_Response::clear_resmsg() {
  if (resmsg_ != &::google::protobuf::internal::kEmptyString) {
    resmsg_->clear();
  }
  clear_has_resmsg();
}
inline const ::std::string& OprationMsg_Response::resmsg() const {
  return *resmsg_;
}
inline void OprationMsg_Response::set_resmsg(const ::std::string& value) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(value);
}
inline void OprationMsg_Response::set_resmsg(const char* value) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(value);
}
inline void OprationMsg_Response::set_resmsg(const void* value, size_t size) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OprationMsg_Response::mutable_resmsg() {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  return resmsg_;
}
inline ::std::string* OprationMsg_Response::release_resmsg() {
  clear_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resmsg_;
    resmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OprationMsg_Response::set_allocated_resmsg(::std::string* resmsg) {
  if (resmsg_ != &::google::protobuf::internal::kEmptyString) {
    delete resmsg_;
  }
  if (resmsg) {
    set_has_resmsg();
    resmsg_ = resmsg;
  } else {
    clear_has_resmsg();
    resmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .com.spplus.buff.StateBean devState = 3;
inline int OprationMsg_Response::devstate_size() const {
  return devstate_.size();
}
inline void OprationMsg_Response::clear_devstate() {
  devstate_.Clear();
}
inline const ::com::spplus::buff::StateBean& OprationMsg_Response::devstate(int index) const {
  return devstate_.Get(index);
}
inline ::com::spplus::buff::StateBean* OprationMsg_Response::mutable_devstate(int index) {
  return devstate_.Mutable(index);
}
inline ::com::spplus::buff::StateBean* OprationMsg_Response::add_devstate() {
  return devstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >&
OprationMsg_Response::devstate() const {
  return devstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >*
OprationMsg_Response::mutable_devstate() {
  return &devstate_;
}

// repeated .com.spplus.buff.RuleBean ruleList = 4;
inline int OprationMsg_Response::rulelist_size() const {
  return rulelist_.size();
}
inline void OprationMsg_Response::clear_rulelist() {
  rulelist_.Clear();
}
inline const ::com::spplus::buff::RuleBean& OprationMsg_Response::rulelist(int index) const {
  return rulelist_.Get(index);
}
inline ::com::spplus::buff::RuleBean* OprationMsg_Response::mutable_rulelist(int index) {
  return rulelist_.Mutable(index);
}
inline ::com::spplus::buff::RuleBean* OprationMsg_Response::add_rulelist() {
  return rulelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::RuleBean >&
OprationMsg_Response::rulelist() const {
  return rulelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::RuleBean >*
OprationMsg_Response::mutable_rulelist() {
  return &rulelist_;
}

// optional uint32 optype = 5;
inline bool OprationMsg_Response::has_optype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OprationMsg_Response::set_has_optype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OprationMsg_Response::clear_has_optype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OprationMsg_Response::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 OprationMsg_Response::optype() const {
  return optype_;
}
inline void OprationMsg_Response::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
}

// -------------------------------------------------------------------

// OprationMsg

// optional .com.spplus.buff.OprationMsg.Request request = 1;
inline bool OprationMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OprationMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OprationMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OprationMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::OprationMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::OprationMsg_Request& OprationMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::OprationMsg_Request* OprationMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::OprationMsg_Request;
  return request_;
}
inline ::com::spplus::buff::OprationMsg_Request* OprationMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::OprationMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void OprationMsg::set_allocated_request(::com::spplus::buff::OprationMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.OprationMsg.Response response = 2;
inline bool OprationMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OprationMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OprationMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OprationMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::OprationMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::OprationMsg_Response& OprationMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::OprationMsg_Response* OprationMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::OprationMsg_Response;
  return response_;
}
inline ::com::spplus::buff::OprationMsg_Response* OprationMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::OprationMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void OprationMsg::set_allocated_response(::com::spplus::buff::OprationMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// PowerSetMsg_Request

// optional bytes stationCim = 1;
inline bool PowerSetMsg_Request::has_stationcim() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerSetMsg_Request::set_has_stationcim() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PowerSetMsg_Request::clear_has_stationcim() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PowerSetMsg_Request::clear_stationcim() {
  if (stationcim_ != &::google::protobuf::internal::kEmptyString) {
    stationcim_->clear();
  }
  clear_has_stationcim();
}
inline const ::std::string& PowerSetMsg_Request::stationcim() const {
  return *stationcim_;
}
inline void PowerSetMsg_Request::set_stationcim(const ::std::string& value) {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  stationcim_->assign(value);
}
inline void PowerSetMsg_Request::set_stationcim(const char* value) {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  stationcim_->assign(value);
}
inline void PowerSetMsg_Request::set_stationcim(const void* value, size_t size) {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  stationcim_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PowerSetMsg_Request::mutable_stationcim() {
  set_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    stationcim_ = new ::std::string;
  }
  return stationcim_;
}
inline ::std::string* PowerSetMsg_Request::release_stationcim() {
  clear_has_stationcim();
  if (stationcim_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stationcim_;
    stationcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PowerSetMsg_Request::set_allocated_stationcim(::std::string* stationcim) {
  if (stationcim_ != &::google::protobuf::internal::kEmptyString) {
    delete stationcim_;
  }
  if (stationcim) {
    set_has_stationcim();
    stationcim_ = stationcim;
  } else {
    clear_has_stationcim();
    stationcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes unitCim = 2;
inline bool PowerSetMsg_Request::has_unitcim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PowerSetMsg_Request::set_has_unitcim() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PowerSetMsg_Request::clear_has_unitcim() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PowerSetMsg_Request::clear_unitcim() {
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    unitcim_->clear();
  }
  clear_has_unitcim();
}
inline const ::std::string& PowerSetMsg_Request::unitcim() const {
  return *unitcim_;
}
inline void PowerSetMsg_Request::set_unitcim(const ::std::string& value) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(value);
}
inline void PowerSetMsg_Request::set_unitcim(const char* value) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(value);
}
inline void PowerSetMsg_Request::set_unitcim(const void* value, size_t size) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PowerSetMsg_Request::mutable_unitcim() {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  return unitcim_;
}
inline ::std::string* PowerSetMsg_Request::release_unitcim() {
  clear_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unitcim_;
    unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PowerSetMsg_Request::set_allocated_unitcim(::std::string* unitcim) {
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    delete unitcim_;
  }
  if (unitcim) {
    set_has_unitcim();
    unitcim_ = unitcim;
  } else {
    clear_has_unitcim();
    unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PowerSetMsg_Response

// optional uint32 rescode = 1;
inline bool PowerSetMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerSetMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PowerSetMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PowerSetMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 PowerSetMsg_Response::rescode() const {
  return rescode_;
}
inline void PowerSetMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// optional bytes resmsg = 2;
inline bool PowerSetMsg_Response::has_resmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PowerSetMsg_Response::set_has_resmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PowerSetMsg_Response::clear_has_resmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PowerSetMsg_Response::clear_resmsg() {
  if (resmsg_ != &::google::protobuf::internal::kEmptyString) {
    resmsg_->clear();
  }
  clear_has_resmsg();
}
inline const ::std::string& PowerSetMsg_Response::resmsg() const {
  return *resmsg_;
}
inline void PowerSetMsg_Response::set_resmsg(const ::std::string& value) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(value);
}
inline void PowerSetMsg_Response::set_resmsg(const char* value) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(value);
}
inline void PowerSetMsg_Response::set_resmsg(const void* value, size_t size) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PowerSetMsg_Response::mutable_resmsg() {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  return resmsg_;
}
inline ::std::string* PowerSetMsg_Response::release_resmsg() {
  clear_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resmsg_;
    resmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PowerSetMsg_Response::set_allocated_resmsg(::std::string* resmsg) {
  if (resmsg_ != &::google::protobuf::internal::kEmptyString) {
    delete resmsg_;
  }
  if (resmsg) {
    set_has_resmsg();
    resmsg_ = resmsg;
  } else {
    clear_has_resmsg();
    resmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PowerSetMsg

// optional .com.spplus.buff.PowerSetMsg.Request request = 1;
inline bool PowerSetMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerSetMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PowerSetMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PowerSetMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::PowerSetMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::PowerSetMsg_Request& PowerSetMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::PowerSetMsg_Request* PowerSetMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::PowerSetMsg_Request;
  return request_;
}
inline ::com::spplus::buff::PowerSetMsg_Request* PowerSetMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::PowerSetMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void PowerSetMsg::set_allocated_request(::com::spplus::buff::PowerSetMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.PowerSetMsg.Response response = 2;
inline bool PowerSetMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PowerSetMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PowerSetMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PowerSetMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::PowerSetMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::PowerSetMsg_Response& PowerSetMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::PowerSetMsg_Response* PowerSetMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::PowerSetMsg_Response;
  return response_;
}
inline ::com::spplus::buff::PowerSetMsg_Response* PowerSetMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::PowerSetMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void PowerSetMsg::set_allocated_response(::com::spplus::buff::PowerSetMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// LineSetMsg_Request

// optional bytes unitCim = 1;
inline bool LineSetMsg_Request::has_unitcim() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LineSetMsg_Request::set_has_unitcim() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LineSetMsg_Request::clear_has_unitcim() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LineSetMsg_Request::clear_unitcim() {
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    unitcim_->clear();
  }
  clear_has_unitcim();
}
inline const ::std::string& LineSetMsg_Request::unitcim() const {
  return *unitcim_;
}
inline void LineSetMsg_Request::set_unitcim(const ::std::string& value) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(value);
}
inline void LineSetMsg_Request::set_unitcim(const char* value) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(value);
}
inline void LineSetMsg_Request::set_unitcim(const void* value, size_t size) {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  unitcim_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LineSetMsg_Request::mutable_unitcim() {
  set_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    unitcim_ = new ::std::string;
  }
  return unitcim_;
}
inline ::std::string* LineSetMsg_Request::release_unitcim() {
  clear_has_unitcim();
  if (unitcim_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unitcim_;
    unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LineSetMsg_Request::set_allocated_unitcim(::std::string* unitcim) {
  if (unitcim_ != &::google::protobuf::internal::kEmptyString) {
    delete unitcim_;
  }
  if (unitcim) {
    set_has_unitcim();
    unitcim_ = unitcim;
  } else {
    clear_has_unitcim();
    unitcim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes stationOneCim = 2;
inline bool LineSetMsg_Request::has_stationonecim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LineSetMsg_Request::set_has_stationonecim() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LineSetMsg_Request::clear_has_stationonecim() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LineSetMsg_Request::clear_stationonecim() {
  if (stationonecim_ != &::google::protobuf::internal::kEmptyString) {
    stationonecim_->clear();
  }
  clear_has_stationonecim();
}
inline const ::std::string& LineSetMsg_Request::stationonecim() const {
  return *stationonecim_;
}
inline void LineSetMsg_Request::set_stationonecim(const ::std::string& value) {
  set_has_stationonecim();
  if (stationonecim_ == &::google::protobuf::internal::kEmptyString) {
    stationonecim_ = new ::std::string;
  }
  stationonecim_->assign(value);
}
inline void LineSetMsg_Request::set_stationonecim(const char* value) {
  set_has_stationonecim();
  if (stationonecim_ == &::google::protobuf::internal::kEmptyString) {
    stationonecim_ = new ::std::string;
  }
  stationonecim_->assign(value);
}
inline void LineSetMsg_Request::set_stationonecim(const void* value, size_t size) {
  set_has_stationonecim();
  if (stationonecim_ == &::google::protobuf::internal::kEmptyString) {
    stationonecim_ = new ::std::string;
  }
  stationonecim_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LineSetMsg_Request::mutable_stationonecim() {
  set_has_stationonecim();
  if (stationonecim_ == &::google::protobuf::internal::kEmptyString) {
    stationonecim_ = new ::std::string;
  }
  return stationonecim_;
}
inline ::std::string* LineSetMsg_Request::release_stationonecim() {
  clear_has_stationonecim();
  if (stationonecim_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stationonecim_;
    stationonecim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LineSetMsg_Request::set_allocated_stationonecim(::std::string* stationonecim) {
  if (stationonecim_ != &::google::protobuf::internal::kEmptyString) {
    delete stationonecim_;
  }
  if (stationonecim) {
    set_has_stationonecim();
    stationonecim_ = stationonecim;
  } else {
    clear_has_stationonecim();
    stationonecim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes stationOtherCim = 3;
inline bool LineSetMsg_Request::has_stationothercim() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LineSetMsg_Request::set_has_stationothercim() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LineSetMsg_Request::clear_has_stationothercim() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LineSetMsg_Request::clear_stationothercim() {
  if (stationothercim_ != &::google::protobuf::internal::kEmptyString) {
    stationothercim_->clear();
  }
  clear_has_stationothercim();
}
inline const ::std::string& LineSetMsg_Request::stationothercim() const {
  return *stationothercim_;
}
inline void LineSetMsg_Request::set_stationothercim(const ::std::string& value) {
  set_has_stationothercim();
  if (stationothercim_ == &::google::protobuf::internal::kEmptyString) {
    stationothercim_ = new ::std::string;
  }
  stationothercim_->assign(value);
}
inline void LineSetMsg_Request::set_stationothercim(const char* value) {
  set_has_stationothercim();
  if (stationothercim_ == &::google::protobuf::internal::kEmptyString) {
    stationothercim_ = new ::std::string;
  }
  stationothercim_->assign(value);
}
inline void LineSetMsg_Request::set_stationothercim(const void* value, size_t size) {
  set_has_stationothercim();
  if (stationothercim_ == &::google::protobuf::internal::kEmptyString) {
    stationothercim_ = new ::std::string;
  }
  stationothercim_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LineSetMsg_Request::mutable_stationothercim() {
  set_has_stationothercim();
  if (stationothercim_ == &::google::protobuf::internal::kEmptyString) {
    stationothercim_ = new ::std::string;
  }
  return stationothercim_;
}
inline ::std::string* LineSetMsg_Request::release_stationothercim() {
  clear_has_stationothercim();
  if (stationothercim_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stationothercim_;
    stationothercim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LineSetMsg_Request::set_allocated_stationothercim(::std::string* stationothercim) {
  if (stationothercim_ != &::google::protobuf::internal::kEmptyString) {
    delete stationothercim_;
  }
  if (stationothercim) {
    set_has_stationothercim();
    stationothercim_ = stationothercim;
  } else {
    clear_has_stationothercim();
    stationothercim_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LineSetMsg_Response

// optional uint32 rescode = 1;
inline bool LineSetMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LineSetMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LineSetMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LineSetMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 LineSetMsg_Response::rescode() const {
  return rescode_;
}
inline void LineSetMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// optional bytes resmsg = 2;
inline bool LineSetMsg_Response::has_resmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LineSetMsg_Response::set_has_resmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LineSetMsg_Response::clear_has_resmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LineSetMsg_Response::clear_resmsg() {
  if (resmsg_ != &::google::protobuf::internal::kEmptyString) {
    resmsg_->clear();
  }
  clear_has_resmsg();
}
inline const ::std::string& LineSetMsg_Response::resmsg() const {
  return *resmsg_;
}
inline void LineSetMsg_Response::set_resmsg(const ::std::string& value) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(value);
}
inline void LineSetMsg_Response::set_resmsg(const char* value) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(value);
}
inline void LineSetMsg_Response::set_resmsg(const void* value, size_t size) {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  resmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LineSetMsg_Response::mutable_resmsg() {
  set_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    resmsg_ = new ::std::string;
  }
  return resmsg_;
}
inline ::std::string* LineSetMsg_Response::release_resmsg() {
  clear_has_resmsg();
  if (resmsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resmsg_;
    resmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LineSetMsg_Response::set_allocated_resmsg(::std::string* resmsg) {
  if (resmsg_ != &::google::protobuf::internal::kEmptyString) {
    delete resmsg_;
  }
  if (resmsg) {
    set_has_resmsg();
    resmsg_ = resmsg;
  } else {
    clear_has_resmsg();
    resmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LineSetMsg

// optional .com.spplus.buff.LineSetMsg.Request request = 1;
inline bool LineSetMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LineSetMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LineSetMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LineSetMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::LineSetMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::LineSetMsg_Request& LineSetMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::LineSetMsg_Request* LineSetMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::LineSetMsg_Request;
  return request_;
}
inline ::com::spplus::buff::LineSetMsg_Request* LineSetMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::LineSetMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void LineSetMsg::set_allocated_request(::com::spplus::buff::LineSetMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.LineSetMsg.Response response = 2;
inline bool LineSetMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LineSetMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LineSetMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LineSetMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::LineSetMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::LineSetMsg_Response& LineSetMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::LineSetMsg_Response* LineSetMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::LineSetMsg_Response;
  return response_;
}
inline ::com::spplus::buff::LineSetMsg_Response* LineSetMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::LineSetMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void LineSetMsg::set_allocated_response(::com::spplus::buff::LineSetMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// SavingListMsg_Request

// optional bytes id = 1;
inline bool SavingListMsg_Request::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SavingListMsg_Request::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SavingListMsg_Request::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SavingListMsg_Request::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& SavingListMsg_Request::id() const {
  return *id_;
}
inline void SavingListMsg_Request::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void SavingListMsg_Request::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void SavingListMsg_Request::set_id(const void* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SavingListMsg_Request::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* SavingListMsg_Request::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SavingListMsg_Request::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SavingListMsg_Response

// repeated .com.spplus.buff.SavingBean saveList = 1;
inline int SavingListMsg_Response::savelist_size() const {
  return savelist_.size();
}
inline void SavingListMsg_Response::clear_savelist() {
  savelist_.Clear();
}
inline const ::com::spplus::buff::SavingBean& SavingListMsg_Response::savelist(int index) const {
  return savelist_.Get(index);
}
inline ::com::spplus::buff::SavingBean* SavingListMsg_Response::mutable_savelist(int index) {
  return savelist_.Mutable(index);
}
inline ::com::spplus::buff::SavingBean* SavingListMsg_Response::add_savelist() {
  return savelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::SavingBean >&
SavingListMsg_Response::savelist() const {
  return savelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::SavingBean >*
SavingListMsg_Response::mutable_savelist() {
  return &savelist_;
}

// optional uint32 rescode = 2;
inline bool SavingListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SavingListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SavingListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SavingListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 SavingListMsg_Response::rescode() const {
  return rescode_;
}
inline void SavingListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// SavingListMsg

// optional .com.spplus.buff.SavingListMsg.Request request = 1;
inline bool SavingListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SavingListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SavingListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SavingListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::SavingListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::SavingListMsg_Request& SavingListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::SavingListMsg_Request* SavingListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::SavingListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::SavingListMsg_Request* SavingListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::SavingListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void SavingListMsg::set_allocated_request(::com::spplus::buff::SavingListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.SavingListMsg.Response response = 2;
inline bool SavingListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SavingListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SavingListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SavingListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::SavingListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::SavingListMsg_Response& SavingListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::SavingListMsg_Response* SavingListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::SavingListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::SavingListMsg_Response* SavingListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::SavingListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void SavingListMsg::set_allocated_response(::com::spplus::buff::SavingListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// WriteSavingMsg_Request

// optional bytes saveName = 1;
inline bool WriteSavingMsg_Request::has_savename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteSavingMsg_Request::set_has_savename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteSavingMsg_Request::clear_has_savename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteSavingMsg_Request::clear_savename() {
  if (savename_ != &::google::protobuf::internal::kEmptyString) {
    savename_->clear();
  }
  clear_has_savename();
}
inline const ::std::string& WriteSavingMsg_Request::savename() const {
  return *savename_;
}
inline void WriteSavingMsg_Request::set_savename(const ::std::string& value) {
  set_has_savename();
  if (savename_ == &::google::protobuf::internal::kEmptyString) {
    savename_ = new ::std::string;
  }
  savename_->assign(value);
}
inline void WriteSavingMsg_Request::set_savename(const char* value) {
  set_has_savename();
  if (savename_ == &::google::protobuf::internal::kEmptyString) {
    savename_ = new ::std::string;
  }
  savename_->assign(value);
}
inline void WriteSavingMsg_Request::set_savename(const void* value, size_t size) {
  set_has_savename();
  if (savename_ == &::google::protobuf::internal::kEmptyString) {
    savename_ = new ::std::string;
  }
  savename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WriteSavingMsg_Request::mutable_savename() {
  set_has_savename();
  if (savename_ == &::google::protobuf::internal::kEmptyString) {
    savename_ = new ::std::string;
  }
  return savename_;
}
inline ::std::string* WriteSavingMsg_Request::release_savename() {
  clear_has_savename();
  if (savename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = savename_;
    savename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WriteSavingMsg_Request::set_allocated_savename(::std::string* savename) {
  if (savename_ != &::google::protobuf::internal::kEmptyString) {
    delete savename_;
  }
  if (savename) {
    set_has_savename();
    savename_ = savename;
  } else {
    clear_has_savename();
    savename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 saveId = 2;
inline bool WriteSavingMsg_Request::has_saveid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteSavingMsg_Request::set_has_saveid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteSavingMsg_Request::clear_has_saveid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteSavingMsg_Request::clear_saveid() {
  saveid_ = 0u;
  clear_has_saveid();
}
inline ::google::protobuf::uint32 WriteSavingMsg_Request::saveid() const {
  return saveid_;
}
inline void WriteSavingMsg_Request::set_saveid(::google::protobuf::uint32 value) {
  set_has_saveid();
  saveid_ = value;
}

// repeated .com.spplus.buff.StateBean stateList = 3;
inline int WriteSavingMsg_Request::statelist_size() const {
  return statelist_.size();
}
inline void WriteSavingMsg_Request::clear_statelist() {
  statelist_.Clear();
}
inline const ::com::spplus::buff::StateBean& WriteSavingMsg_Request::statelist(int index) const {
  return statelist_.Get(index);
}
inline ::com::spplus::buff::StateBean* WriteSavingMsg_Request::mutable_statelist(int index) {
  return statelist_.Mutable(index);
}
inline ::com::spplus::buff::StateBean* WriteSavingMsg_Request::add_statelist() {
  return statelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >&
WriteSavingMsg_Request::statelist() const {
  return statelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::StateBean >*
WriteSavingMsg_Request::mutable_statelist() {
  return &statelist_;
}

// -------------------------------------------------------------------

// WriteSavingMsg_Response

// optional uint32 rescode = 1;
inline bool WriteSavingMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteSavingMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteSavingMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteSavingMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 WriteSavingMsg_Response::rescode() const {
  return rescode_;
}
inline void WriteSavingMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// WriteSavingMsg

// optional .com.spplus.buff.WriteSavingMsg.Request request = 1;
inline bool WriteSavingMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteSavingMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteSavingMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteSavingMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::WriteSavingMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::WriteSavingMsg_Request& WriteSavingMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::WriteSavingMsg_Request* WriteSavingMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::WriteSavingMsg_Request;
  return request_;
}
inline ::com::spplus::buff::WriteSavingMsg_Request* WriteSavingMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::WriteSavingMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void WriteSavingMsg::set_allocated_request(::com::spplus::buff::WriteSavingMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.WriteSavingMsg.Response response = 2;
inline bool WriteSavingMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteSavingMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteSavingMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteSavingMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::WriteSavingMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::WriteSavingMsg_Response& WriteSavingMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::WriteSavingMsg_Response* WriteSavingMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::WriteSavingMsg_Response;
  return response_;
}
inline ::com::spplus::buff::WriteSavingMsg_Response* WriteSavingMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::WriteSavingMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void WriteSavingMsg::set_allocated_response(::com::spplus::buff::WriteSavingMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// TicketMsionListMsg_Request

// optional uint32 userid = 1;
inline bool TicketMsionListMsg_Request::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TicketMsionListMsg_Request::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TicketMsionListMsg_Request::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TicketMsionListMsg_Request::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 TicketMsionListMsg_Request::userid() const {
  return userid_;
}
inline void TicketMsionListMsg_Request::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// -------------------------------------------------------------------

// TicketMsionListMsg_Response

// optional uint32 rescode = 1;
inline bool TicketMsionListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TicketMsionListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TicketMsionListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TicketMsionListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 TicketMsionListMsg_Response::rescode() const {
  return rescode_;
}
inline void TicketMsionListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.TicketMsionBean tktMsionlist = 2;
inline int TicketMsionListMsg_Response::tktmsionlist_size() const {
  return tktmsionlist_.size();
}
inline void TicketMsionListMsg_Response::clear_tktmsionlist() {
  tktmsionlist_.Clear();
}
inline const ::com::spplus::buff::TicketMsionBean& TicketMsionListMsg_Response::tktmsionlist(int index) const {
  return tktmsionlist_.Get(index);
}
inline ::com::spplus::buff::TicketMsionBean* TicketMsionListMsg_Response::mutable_tktmsionlist(int index) {
  return tktmsionlist_.Mutable(index);
}
inline ::com::spplus::buff::TicketMsionBean* TicketMsionListMsg_Response::add_tktmsionlist() {
  return tktmsionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::TicketMsionBean >&
TicketMsionListMsg_Response::tktmsionlist() const {
  return tktmsionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::TicketMsionBean >*
TicketMsionListMsg_Response::mutable_tktmsionlist() {
  return &tktmsionlist_;
}

// -------------------------------------------------------------------

// TicketMsionListMsg

// optional .com.spplus.buff.TicketMsionListMsg.Request request = 1;
inline bool TicketMsionListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TicketMsionListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TicketMsionListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TicketMsionListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::TicketMsionListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::TicketMsionListMsg_Request& TicketMsionListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::TicketMsionListMsg_Request* TicketMsionListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::TicketMsionListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::TicketMsionListMsg_Request* TicketMsionListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::TicketMsionListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void TicketMsionListMsg::set_allocated_request(::com::spplus::buff::TicketMsionListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.TicketMsionListMsg.Response response = 2;
inline bool TicketMsionListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TicketMsionListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TicketMsionListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TicketMsionListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::TicketMsionListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::TicketMsionListMsg_Response& TicketMsionListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::TicketMsionListMsg_Response* TicketMsionListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::TicketMsionListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::TicketMsionListMsg_Response* TicketMsionListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::TicketMsionListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void TicketMsionListMsg::set_allocated_response(::com::spplus::buff::TicketMsionListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// TicketMgrMsg_Request

// optional bytes mgrsql = 1;
inline bool TicketMgrMsg_Request::has_mgrsql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TicketMgrMsg_Request::set_has_mgrsql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TicketMgrMsg_Request::clear_has_mgrsql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TicketMgrMsg_Request::clear_mgrsql() {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    mgrsql_->clear();
  }
  clear_has_mgrsql();
}
inline const ::std::string& TicketMgrMsg_Request::mgrsql() const {
  return *mgrsql_;
}
inline void TicketMgrMsg_Request::set_mgrsql(const ::std::string& value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void TicketMgrMsg_Request::set_mgrsql(const char* value) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(value);
}
inline void TicketMgrMsg_Request::set_mgrsql(const void* value, size_t size) {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  mgrsql_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TicketMgrMsg_Request::mutable_mgrsql() {
  set_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    mgrsql_ = new ::std::string;
  }
  return mgrsql_;
}
inline ::std::string* TicketMgrMsg_Request::release_mgrsql() {
  clear_has_mgrsql();
  if (mgrsql_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mgrsql_;
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TicketMgrMsg_Request::set_allocated_mgrsql(::std::string* mgrsql) {
  if (mgrsql_ != &::google::protobuf::internal::kEmptyString) {
    delete mgrsql_;
  }
  if (mgrsql) {
    set_has_mgrsql();
    mgrsql_ = mgrsql;
  } else {
    clear_has_mgrsql();
    mgrsql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TicketMgrMsg_Response

// optional uint32 rescode = 1;
inline bool TicketMgrMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TicketMgrMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TicketMgrMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TicketMgrMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 TicketMgrMsg_Response::rescode() const {
  return rescode_;
}
inline void TicketMgrMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// TicketMgrMsg

// optional .com.spplus.buff.TicketMgrMsg.Request request = 1;
inline bool TicketMgrMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TicketMgrMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TicketMgrMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TicketMgrMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::TicketMgrMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::TicketMgrMsg_Request& TicketMgrMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::TicketMgrMsg_Request* TicketMgrMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::TicketMgrMsg_Request;
  return request_;
}
inline ::com::spplus::buff::TicketMgrMsg_Request* TicketMgrMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::TicketMgrMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void TicketMgrMsg::set_allocated_request(::com::spplus::buff::TicketMgrMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.TicketMgrMsg.Response response = 2;
inline bool TicketMgrMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TicketMgrMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TicketMgrMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TicketMgrMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::TicketMgrMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::TicketMgrMsg_Response& TicketMgrMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::TicketMgrMsg_Response* TicketMgrMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::TicketMgrMsg_Response;
  return response_;
}
inline ::com::spplus::buff::TicketMgrMsg_Response* TicketMgrMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::TicketMgrMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void TicketMgrMsg::set_allocated_response(::com::spplus::buff::TicketMgrMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// TicketListMsg_Request

// optional bytes reqdate = 1;
inline bool TicketListMsg_Request::has_reqdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TicketListMsg_Request::set_has_reqdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TicketListMsg_Request::clear_has_reqdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TicketListMsg_Request::clear_reqdate() {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    reqdate_->clear();
  }
  clear_has_reqdate();
}
inline const ::std::string& TicketListMsg_Request::reqdate() const {
  return *reqdate_;
}
inline void TicketListMsg_Request::set_reqdate(const ::std::string& value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void TicketListMsg_Request::set_reqdate(const char* value) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(value);
}
inline void TicketListMsg_Request::set_reqdate(const void* value, size_t size) {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  reqdate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TicketListMsg_Request::mutable_reqdate() {
  set_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    reqdate_ = new ::std::string;
  }
  return reqdate_;
}
inline ::std::string* TicketListMsg_Request::release_reqdate() {
  clear_has_reqdate();
  if (reqdate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reqdate_;
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TicketListMsg_Request::set_allocated_reqdate(::std::string* reqdate) {
  if (reqdate_ != &::google::protobuf::internal::kEmptyString) {
    delete reqdate_;
  }
  if (reqdate) {
    set_has_reqdate();
    reqdate_ = reqdate;
  } else {
    clear_has_reqdate();
    reqdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TicketListMsg_Response

// optional uint32 rescode = 1;
inline bool TicketListMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TicketListMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TicketListMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TicketListMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 TicketListMsg_Response::rescode() const {
  return rescode_;
}
inline void TicketListMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// repeated .com.spplus.buff.TicketBean ticketlist = 2;
inline int TicketListMsg_Response::ticketlist_size() const {
  return ticketlist_.size();
}
inline void TicketListMsg_Response::clear_ticketlist() {
  ticketlist_.Clear();
}
inline const ::com::spplus::buff::TicketBean& TicketListMsg_Response::ticketlist(int index) const {
  return ticketlist_.Get(index);
}
inline ::com::spplus::buff::TicketBean* TicketListMsg_Response::mutable_ticketlist(int index) {
  return ticketlist_.Mutable(index);
}
inline ::com::spplus::buff::TicketBean* TicketListMsg_Response::add_ticketlist() {
  return ticketlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::TicketBean >&
TicketListMsg_Response::ticketlist() const {
  return ticketlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::TicketBean >*
TicketListMsg_Response::mutable_ticketlist() {
  return &ticketlist_;
}

// -------------------------------------------------------------------

// TicketListMsg

// optional .com.spplus.buff.TicketListMsg.Request request = 1;
inline bool TicketListMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TicketListMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TicketListMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TicketListMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::TicketListMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::TicketListMsg_Request& TicketListMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::TicketListMsg_Request* TicketListMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::TicketListMsg_Request;
  return request_;
}
inline ::com::spplus::buff::TicketListMsg_Request* TicketListMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::TicketListMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void TicketListMsg::set_allocated_request(::com::spplus::buff::TicketListMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.TicketListMsg.Response response = 2;
inline bool TicketListMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TicketListMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TicketListMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TicketListMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::TicketListMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::TicketListMsg_Response& TicketListMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::TicketListMsg_Response* TicketListMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::TicketListMsg_Response;
  return response_;
}
inline ::com::spplus::buff::TicketListMsg_Response* TicketListMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::TicketListMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void TicketListMsg::set_allocated_response(::com::spplus::buff::TicketListMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace buff
}  // namespace spplus
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msgbody_2eproto__INCLUDED
